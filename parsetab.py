
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COMA CORCHETE_A CORCHETE_C CTE_CH CTE_F CTE_I CTE_STR DESDE DIFERENTE DIV ENTONCES ESCRIBIR FLOAT FUNCION HACER HASTA HAZ ID IGUAL IGUALIGUAL INT LEER LLAVE_A LLAVE_C MAS MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MENOS MIENTRAS OR PARENT_A PARENT_C POR PRINCIPAL PROGRAMA PUNTOCOMA REGRESA SI SINO VAR VOIDprograma : PROGRAMA ID PUNTOCOMA progprog : main\n\t| dec_vars dec_funciones main\n\t| dec_vars main\n\t| dec_funciones main\n\tmain : PRINCIPAL PARENT_A PARENT_C dec_estdec_vars : VAR varsvars : tipo_simple ids_simple PUNTOCOMA\n\t| tipo_simple ids_simple PUNTOCOMA vars\n\ttipo_simple : INT\n\t| FLOAT\n\t| CHAR\n\tids_simple : ID\n\t| ID dimension\n\t| ID COMA ids_simple\n\t| ID dimension COMA ids_simple\n\tdimension : CORCHETE_A CTE_I CORCHETE_Cvariable : ID\n\t| ID dim\n\tvariables : variable\n\t| variable COMA variables \n\tdim : CORCHETE_A expresion CORCHETE_C\n\tdec_funciones : funcion\n\t| funcion dec_funciones\n\tfuncion : FUNCION tipo_simple ID func_dos\n\t| FUNCION VOID ID func_dos\n\tfunc_dos : PARENT_A PARENT_C var_funcs\n\t| PARENT_A parametros PARENT_C var_funcs\n\tvar_funcs : dec_est\n\t| dec_vars dec_est\n\tparametros : tipo_simple variable\n\t| tipo_simple variable COMA parametros\n\tdec_est : LLAVE_A LLAVE_C\n\t| LLAVE_A estatutos_dos LLAVE_C\n\testatutos : asignacion PUNTOCOMA \n\t| llamada PUNTOCOMA \n\t| retorno PUNTOCOMA \n\t| lectura PUNTOCOMA \n\t| escritura PUNTOCOMA \n\t| decision \n\t| ciclo_for \n\t| ciclo_while \n\testatutos_dos : estatutos\n\t| estatutos estatutos_dos\n\tasignacion : variable IGUAL expresionllamada : ID PARENT_A PARENT_C\n\t| ID PARENT_A expresiones PARENT_C\n\texpresiones : expresion\n\t| expresion COMA expresion\n\texpresion : t_expresion\n\t| t_expresion OR expresion\n\tt_expresion : g_expresion\n\t| g_expresion AND t_expresion\n\tg_expresion : m_expresion\n\t| m_expresion op_logicos m_expresion\n\top_logicos : MAYORQUE\n\t| MENORQUE\n\t| MAYORIGUAL\n\t| MENORIGUAL\n\t| IGUALIGUAL\n\t| DIFERENTE\n\tm_expresion : termino\n\t| termino MAS m_expresion\n\t| termino MENOS m_expresion\n\ttermino : factor\n\t| factor POR termino\n\t| factor DIV termino\n\t factor : PARENT_A expresion PARENT_C\n\t| CTE_I\n\t| CTE_F\n\t| CTE_CH\n\t| variable\n\t| llamada\n\tretorno : REGRESA PARENT_A expresion PARENT_Clectura : LEER PARENT_A variables PARENT_Cescritura : ESCRIBIR PARENT_A escr PARENT_Cescritura_dos : CTE_STR \n\t| expresion\n\tescr : escritura_dos\n\t| escritura_dos COMA escr\n\tdecision : if \n\t| if elseif : SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_Celse : SINO LLAVE_A estatutos_dos LLAVE_Cciclo_while : MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_Cciclo_for : DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C'
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,5,6,14,15,25,31,40,67,],[0,-1,-2,-4,-5,-3,-6,-33,-34,]),'ID':([2,18,19,20,21,23,24,32,35,42,48,49,50,56,57,61,66,69,70,71,72,73,74,75,77,78,79,80,81,85,86,101,118,119,125,126,127,128,129,130,131,132,133,134,135,136,137,140,144,146,163,164,168,169,173,174,175,177,],[3,28,-10,-11,-12,29,30,52,28,52,-40,-41,-42,-81,84,28,84,-35,-36,-37,-38,-39,106,106,106,106,84,106,-82,106,106,106,52,106,106,106,106,-56,-57,-58,-59,-60,-61,106,106,106,106,106,84,106,-84,106,52,52,52,-85,-83,-86,]),'PUNTOCOMA':([3,27,28,34,43,44,45,46,47,62,76,87,88,94,95,96,97,98,99,100,102,103,104,105,106,107,139,141,142,143,145,152,153,154,155,156,157,158,159,],[4,33,-13,-14,69,70,71,72,73,-15,-19,-16,-17,-72,-45,-50,-52,-54,-62,-65,-69,-70,-71,-73,-18,-46,-47,-22,-74,-75,-76,-51,-53,-55,-63,-64,-66,-67,-68,]),'PRINCIPAL':([4,7,8,11,13,17,22,33,37,39,40,60,67,89,90,122,123,],[9,9,9,-23,9,-7,-24,-8,-25,-26,-33,-9,-34,-27,-29,-30,-28,]),'VAR':([4,64,92,],[10,10,10,]),'FUNCION':([4,7,11,17,33,37,39,40,60,67,89,90,122,123,],[12,12,12,-7,-8,-25,-26,-33,-9,-34,-27,-29,-30,-28,]),'PARENT_A':([9,29,30,52,53,54,55,58,59,74,75,77,78,80,85,86,101,106,119,125,126,127,128,129,130,131,132,133,134,135,136,137,140,146,164,],[16,38,38,75,78,79,80,85,86,101,101,101,101,101,101,101,101,75,101,101,101,101,-56,-57,-58,-59,-60,-61,101,101,101,101,101,101,101,]),'INT':([10,12,33,38,124,],[19,19,19,19,19,]),'FLOAT':([10,12,33,38,124,],[20,20,20,20,20,]),'CHAR':([10,12,33,38,124,],[21,21,21,21,21,]),'VOID':([12,],[24,]),'PARENT_C':([16,38,65,75,76,84,93,94,96,97,98,99,100,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,120,121,138,139,141,151,152,153,154,155,156,157,158,159,160,161,162,],[26,64,92,107,-19,-18,-31,-72,-50,-52,-54,-62,-65,-69,-70,-71,-73,-18,-46,139,-48,142,143,-20,145,-79,-77,-78,149,150,159,-47,-22,-32,-51,-53,-55,-63,-64,-66,-67,-68,-49,-21,-80,]),'LLAVE_A':([17,26,33,60,64,82,91,92,165,166,170,],[-7,32,-8,-9,32,118,32,32,168,169,173,]),'COMA':([28,34,76,84,88,93,94,96,97,98,99,100,102,103,104,105,106,107,109,113,115,116,117,139,141,152,153,154,155,156,157,158,159,],[35,61,-19,-18,-17,124,-72,-50,-52,-54,-62,-65,-69,-70,-71,-73,-18,-46,140,144,146,-77,-78,-47,-22,-51,-53,-55,-63,-64,-66,-67,-68,]),'CORCHETE_A':([28,52,84,106,],[36,77,77,77,]),'LLAVE_C':([32,41,42,48,49,50,56,68,69,70,71,72,73,81,147,163,171,172,174,175,176,177,],[40,67,-43,-40,-41,-42,-81,-44,-35,-36,-37,-38,-39,-82,163,-84,174,175,-85,-83,177,-86,]),'REGRESA':([32,42,48,49,50,56,69,70,71,72,73,81,118,163,168,169,173,174,175,177,],[53,53,-40,-41,-42,-81,-35,-36,-37,-38,-39,-82,53,-84,53,53,53,-85,-83,-86,]),'LEER':([32,42,48,49,50,56,69,70,71,72,73,81,118,163,168,169,173,174,175,177,],[54,54,-40,-41,-42,-81,-35,-36,-37,-38,-39,-82,54,-84,54,54,54,-85,-83,-86,]),'ESCRIBIR':([32,42,48,49,50,56,69,70,71,72,73,81,118,163,168,169,173,174,175,177,],[55,55,-40,-41,-42,-81,-35,-36,-37,-38,-39,-82,55,-84,55,55,55,-85,-83,-86,]),'DESDE':([32,42,48,49,50,56,69,70,71,72,73,81,118,163,168,169,173,174,175,177,],[57,57,-40,-41,-42,-81,-35,-36,-37,-38,-39,-82,57,-84,57,57,57,-85,-83,-86,]),'MIENTRAS':([32,42,48,49,50,56,69,70,71,72,73,81,118,163,168,169,173,174,175,177,],[58,58,-40,-41,-42,-81,-35,-36,-37,-38,-39,-82,58,-84,58,58,58,-85,-83,-86,]),'SI':([32,42,48,49,50,56,69,70,71,72,73,81,118,163,168,169,173,174,175,177,],[59,59,-40,-41,-42,-81,-35,-36,-37,-38,-39,-82,59,-84,59,59,59,-85,-83,-86,]),'CTE_I':([36,74,75,77,78,80,85,86,101,119,125,126,127,128,129,130,131,132,133,134,135,136,137,140,146,164,],[63,102,102,102,102,102,102,102,102,102,102,102,102,-56,-57,-58,-59,-60,-61,102,102,102,102,102,102,102,]),'IGUAL':([51,52,76,83,84,141,],[74,-18,-19,119,-18,-22,]),'SINO':([56,175,],[82,-83,]),'CORCHETE_C':([63,76,94,96,97,98,99,100,102,103,104,105,106,107,110,139,141,152,153,154,155,156,157,158,159,],[88,-19,-72,-50,-52,-54,-62,-65,-69,-70,-71,-73,-18,-46,141,-47,-22,-51,-53,-55,-63,-64,-66,-67,-68,]),'CTE_F':([74,75,77,78,80,85,86,101,119,125,126,127,128,129,130,131,132,133,134,135,136,137,140,146,164,],[103,103,103,103,103,103,103,103,103,103,103,103,-56,-57,-58,-59,-60,-61,103,103,103,103,103,103,103,]),'CTE_CH':([74,75,77,78,80,85,86,101,119,125,126,127,128,129,130,131,132,133,134,135,136,137,140,146,164,],[104,104,104,104,104,104,104,104,104,104,104,104,-56,-57,-58,-59,-60,-61,104,104,104,104,104,104,104,]),'POR':([76,94,100,102,103,104,105,106,107,139,141,159,],[-19,-72,136,-69,-70,-71,-73,-18,-46,-47,-22,-68,]),'DIV':([76,94,100,102,103,104,105,106,107,139,141,159,],[-19,-72,137,-69,-70,-71,-73,-18,-46,-47,-22,-68,]),'MAS':([76,94,99,100,102,103,104,105,106,107,139,141,157,158,159,],[-19,-72,134,-65,-69,-70,-71,-73,-18,-46,-47,-22,-66,-67,-68,]),'MENOS':([76,94,99,100,102,103,104,105,106,107,139,141,157,158,159,],[-19,-72,135,-65,-69,-70,-71,-73,-18,-46,-47,-22,-66,-67,-68,]),'MAYORQUE':([76,94,98,99,100,102,103,104,105,106,107,139,141,155,156,157,158,159,],[-19,-72,128,-62,-65,-69,-70,-71,-73,-18,-46,-47,-22,-63,-64,-66,-67,-68,]),'MENORQUE':([76,94,98,99,100,102,103,104,105,106,107,139,141,155,156,157,158,159,],[-19,-72,129,-62,-65,-69,-70,-71,-73,-18,-46,-47,-22,-63,-64,-66,-67,-68,]),'MAYORIGUAL':([76,94,98,99,100,102,103,104,105,106,107,139,141,155,156,157,158,159,],[-19,-72,130,-62,-65,-69,-70,-71,-73,-18,-46,-47,-22,-63,-64,-66,-67,-68,]),'MENORIGUAL':([76,94,98,99,100,102,103,104,105,106,107,139,141,155,156,157,158,159,],[-19,-72,131,-62,-65,-69,-70,-71,-73,-18,-46,-47,-22,-63,-64,-66,-67,-68,]),'IGUALIGUAL':([76,94,98,99,100,102,103,104,105,106,107,139,141,155,156,157,158,159,],[-19,-72,132,-62,-65,-69,-70,-71,-73,-18,-46,-47,-22,-63,-64,-66,-67,-68,]),'DIFERENTE':([76,94,98,99,100,102,103,104,105,106,107,139,141,155,156,157,158,159,],[-19,-72,133,-62,-65,-69,-70,-71,-73,-18,-46,-47,-22,-63,-64,-66,-67,-68,]),'AND':([76,94,97,98,99,100,102,103,104,105,106,107,139,141,154,155,156,157,158,159,],[-19,-72,126,-54,-62,-65,-69,-70,-71,-73,-18,-46,-47,-22,-55,-63,-64,-66,-67,-68,]),'OR':([76,94,96,97,98,99,100,102,103,104,105,106,107,139,141,153,154,155,156,157,158,159,],[-19,-72,125,-52,-54,-62,-65,-69,-70,-71,-73,-18,-46,-47,-22,-53,-55,-63,-64,-66,-67,-68,]),'HASTA':([76,94,96,97,98,99,100,102,103,104,105,106,107,139,141,148,152,153,154,155,156,157,158,159,],[-19,-72,-50,-52,-54,-62,-65,-69,-70,-71,-73,-18,-46,-47,-22,164,-51,-53,-55,-63,-64,-66,-67,-68,]),'HACER':([76,94,96,97,98,99,100,102,103,104,105,106,107,139,141,152,153,154,155,156,157,158,159,167,],[-19,-72,-50,-52,-54,-62,-65,-69,-70,-71,-73,-18,-46,-47,-22,-51,-53,-55,-63,-64,-66,-67,-68,170,]),'CTE_STR':([80,146,],[116,116,]),'HAZ':([149,],[165,]),'ENTONCES':([150,],[166,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'prog':([4,],[5,]),'main':([4,7,8,13,],[6,14,15,25,]),'dec_vars':([4,64,92,],[7,91,91,]),'dec_funciones':([4,7,11,],[8,13,22,]),'funcion':([4,7,11,],[11,11,11,]),'vars':([10,33,],[17,60,]),'tipo_simple':([10,12,33,38,124,],[18,23,18,66,66,]),'ids_simple':([18,35,61,],[27,62,87,]),'dec_est':([26,64,91,92,],[31,90,122,90,]),'dimension':([28,],[34,]),'func_dos':([29,30,],[37,39,]),'estatutos_dos':([32,42,118,168,169,173,],[41,68,147,171,172,176,]),'estatutos':([32,42,118,168,169,173,],[42,42,42,42,42,42,]),'asignacion':([32,42,118,168,169,173,],[43,43,43,43,43,43,]),'llamada':([32,42,74,75,77,78,80,85,86,101,118,119,125,126,127,134,135,136,137,140,146,164,168,169,173,],[44,44,105,105,105,105,105,105,105,105,44,105,105,105,105,105,105,105,105,105,105,105,44,44,44,]),'retorno':([32,42,118,168,169,173,],[45,45,45,45,45,45,]),'lectura':([32,42,118,168,169,173,],[46,46,46,46,46,46,]),'escritura':([32,42,118,168,169,173,],[47,47,47,47,47,47,]),'decision':([32,42,118,168,169,173,],[48,48,48,48,48,48,]),'ciclo_for':([32,42,118,168,169,173,],[49,49,49,49,49,49,]),'ciclo_while':([32,42,118,168,169,173,],[50,50,50,50,50,50,]),'variable':([32,42,57,66,74,75,77,78,79,80,85,86,101,118,119,125,126,127,134,135,136,137,140,144,146,164,168,169,173,],[51,51,83,93,94,94,94,94,113,94,94,94,94,51,94,94,94,94,94,94,94,94,94,113,94,94,51,51,51,]),'if':([32,42,118,168,169,173,],[56,56,56,56,56,56,]),'parametros':([38,124,],[65,151,]),'dim':([52,84,106,],[76,76,76,]),'else':([56,],[81,]),'var_funcs':([64,92,],[89,123,]),'expresion':([74,75,77,78,80,85,86,101,119,125,140,146,164,],[95,109,110,111,117,120,121,138,148,152,160,117,167,]),'t_expresion':([74,75,77,78,80,85,86,101,119,125,126,140,146,164,],[96,96,96,96,96,96,96,96,96,96,153,96,96,96,]),'g_expresion':([74,75,77,78,80,85,86,101,119,125,126,140,146,164,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'m_expresion':([74,75,77,78,80,85,86,101,119,125,126,127,134,135,140,146,164,],[98,98,98,98,98,98,98,98,98,98,98,154,155,156,98,98,98,]),'termino':([74,75,77,78,80,85,86,101,119,125,126,127,134,135,136,137,140,146,164,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,157,158,99,99,99,]),'factor':([74,75,77,78,80,85,86,101,119,125,126,127,134,135,136,137,140,146,164,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'expresiones':([75,],[108,]),'variables':([79,144,],[112,161,]),'escr':([80,146,],[114,162,]),'escritura_dos':([80,146,],[115,115,]),'op_logicos':([98,],[127,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA ID PUNTOCOMA prog','programa',4,'p_programa','parser.py',11),
  ('prog -> main','prog',1,'p_prog','parser.py',16),
  ('prog -> dec_vars dec_funciones main','prog',3,'p_prog','parser.py',17),
  ('prog -> dec_vars main','prog',2,'p_prog','parser.py',18),
  ('prog -> dec_funciones main','prog',2,'p_prog','parser.py',19),
  ('main -> PRINCIPAL PARENT_A PARENT_C dec_est','main',4,'p_main','parser.py',24),
  ('dec_vars -> VAR vars','dec_vars',2,'p_dec_vars','parser.py',34),
  ('vars -> tipo_simple ids_simple PUNTOCOMA','vars',3,'p_vars','parser.py',38),
  ('vars -> tipo_simple ids_simple PUNTOCOMA vars','vars',4,'p_vars','parser.py',39),
  ('tipo_simple -> INT','tipo_simple',1,'p_tipo_simple','parser.py',44),
  ('tipo_simple -> FLOAT','tipo_simple',1,'p_tipo_simple','parser.py',45),
  ('tipo_simple -> CHAR','tipo_simple',1,'p_tipo_simple','parser.py',46),
  ('ids_simple -> ID','ids_simple',1,'p_ids_simple','parser.py',51),
  ('ids_simple -> ID dimension','ids_simple',2,'p_ids_simple','parser.py',52),
  ('ids_simple -> ID COMA ids_simple','ids_simple',3,'p_ids_simple','parser.py',53),
  ('ids_simple -> ID dimension COMA ids_simple','ids_simple',4,'p_ids_simple','parser.py',54),
  ('dimension -> CORCHETE_A CTE_I CORCHETE_C','dimension',3,'p_dimension','parser.py',59),
  ('variable -> ID','variable',1,'p_variable','parser.py',63),
  ('variable -> ID dim','variable',2,'p_variable','parser.py',64),
  ('variables -> variable','variables',1,'p_variables','parser.py',69),
  ('variables -> variable COMA variables','variables',3,'p_variables','parser.py',70),
  ('dim -> CORCHETE_A expresion CORCHETE_C','dim',3,'p_dim','parser.py',75),
  ('dec_funciones -> funcion','dec_funciones',1,'p_dec_funciones','parser.py',80),
  ('dec_funciones -> funcion dec_funciones','dec_funciones',2,'p_dec_funciones','parser.py',81),
  ('funcion -> FUNCION tipo_simple ID func_dos','funcion',4,'p_funcion','parser.py',86),
  ('funcion -> FUNCION VOID ID func_dos','funcion',4,'p_funcion','parser.py',87),
  ('func_dos -> PARENT_A PARENT_C var_funcs','func_dos',3,'p_func_dos','parser.py',92),
  ('func_dos -> PARENT_A parametros PARENT_C var_funcs','func_dos',4,'p_func_dos','parser.py',93),
  ('var_funcs -> dec_est','var_funcs',1,'p_var_funcs','parser.py',98),
  ('var_funcs -> dec_vars dec_est','var_funcs',2,'p_var_funcs','parser.py',99),
  ('parametros -> tipo_simple variable','parametros',2,'p_parametros','parser.py',104),
  ('parametros -> tipo_simple variable COMA parametros','parametros',4,'p_parametros','parser.py',105),
  ('dec_est -> LLAVE_A LLAVE_C','dec_est',2,'p_dec_est','parser.py',116),
  ('dec_est -> LLAVE_A estatutos_dos LLAVE_C','dec_est',3,'p_dec_est','parser.py',117),
  ('estatutos -> asignacion PUNTOCOMA','estatutos',2,'p_estatutos','parser.py',122),
  ('estatutos -> llamada PUNTOCOMA','estatutos',2,'p_estatutos','parser.py',123),
  ('estatutos -> retorno PUNTOCOMA','estatutos',2,'p_estatutos','parser.py',124),
  ('estatutos -> lectura PUNTOCOMA','estatutos',2,'p_estatutos','parser.py',125),
  ('estatutos -> escritura PUNTOCOMA','estatutos',2,'p_estatutos','parser.py',126),
  ('estatutos -> decision','estatutos',1,'p_estatutos','parser.py',127),
  ('estatutos -> ciclo_for','estatutos',1,'p_estatutos','parser.py',128),
  ('estatutos -> ciclo_while','estatutos',1,'p_estatutos','parser.py',129),
  ('estatutos_dos -> estatutos','estatutos_dos',1,'p_estatutos_dos','parser.py',134),
  ('estatutos_dos -> estatutos estatutos_dos','estatutos_dos',2,'p_estatutos_dos','parser.py',135),
  ('asignacion -> variable IGUAL expresion','asignacion',3,'p_asignacion','parser.py',140),
  ('llamada -> ID PARENT_A PARENT_C','llamada',3,'p_llamada','parser.py',144),
  ('llamada -> ID PARENT_A expresiones PARENT_C','llamada',4,'p_llamada','parser.py',145),
  ('expresiones -> expresion','expresiones',1,'p_expresiones','parser.py',150),
  ('expresiones -> expresion COMA expresion','expresiones',3,'p_expresiones','parser.py',151),
  ('expresion -> t_expresion','expresion',1,'p_expresion','parser.py',156),
  ('expresion -> t_expresion OR expresion','expresion',3,'p_expresion','parser.py',157),
  ('t_expresion -> g_expresion','t_expresion',1,'p_t_expresion','parser.py',162),
  ('t_expresion -> g_expresion AND t_expresion','t_expresion',3,'p_t_expresion','parser.py',163),
  ('g_expresion -> m_expresion','g_expresion',1,'p_g_expresion','parser.py',168),
  ('g_expresion -> m_expresion op_logicos m_expresion','g_expresion',3,'p_g_expresion','parser.py',169),
  ('op_logicos -> MAYORQUE','op_logicos',1,'p_op_logicos','parser.py',174),
  ('op_logicos -> MENORQUE','op_logicos',1,'p_op_logicos','parser.py',175),
  ('op_logicos -> MAYORIGUAL','op_logicos',1,'p_op_logicos','parser.py',176),
  ('op_logicos -> MENORIGUAL','op_logicos',1,'p_op_logicos','parser.py',177),
  ('op_logicos -> IGUALIGUAL','op_logicos',1,'p_op_logicos','parser.py',178),
  ('op_logicos -> DIFERENTE','op_logicos',1,'p_op_logicos','parser.py',179),
  ('m_expresion -> termino','m_expresion',1,'p_m_expresion','parser.py',184),
  ('m_expresion -> termino MAS m_expresion','m_expresion',3,'p_m_expresion','parser.py',185),
  ('m_expresion -> termino MENOS m_expresion','m_expresion',3,'p_m_expresion','parser.py',186),
  ('termino -> factor','termino',1,'p_termino','parser.py',191),
  ('termino -> factor POR termino','termino',3,'p_termino','parser.py',192),
  ('termino -> factor DIV termino','termino',3,'p_termino','parser.py',193),
  ('factor -> PARENT_A expresion PARENT_C','factor',3,'p_factor','parser.py',198),
  ('factor -> CTE_I','factor',1,'p_factor','parser.py',199),
  ('factor -> CTE_F','factor',1,'p_factor','parser.py',200),
  ('factor -> CTE_CH','factor',1,'p_factor','parser.py',201),
  ('factor -> variable','factor',1,'p_factor','parser.py',202),
  ('factor -> llamada','factor',1,'p_factor','parser.py',203),
  ('retorno -> REGRESA PARENT_A expresion PARENT_C','retorno',4,'p_retorno','parser.py',208),
  ('lectura -> LEER PARENT_A variables PARENT_C','lectura',4,'p_lectura','parser.py',212),
  ('escritura -> ESCRIBIR PARENT_A escr PARENT_C','escritura',4,'p_escritura','parser.py',217),
  ('escritura_dos -> CTE_STR','escritura_dos',1,'p_escritura_dos','parser.py',222),
  ('escritura_dos -> expresion','escritura_dos',1,'p_escritura_dos','parser.py',223),
  ('escr -> escritura_dos','escr',1,'p_escr','parser.py',228),
  ('escr -> escritura_dos COMA escr','escr',3,'p_escr','parser.py',229),
  ('decision -> if','decision',1,'p_decision','parser.py',234),
  ('decision -> if else','decision',2,'p_decision','parser.py',235),
  ('if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C','if',8,'p_if','parser.py',239),
  ('else -> SINO LLAVE_A estatutos_dos LLAVE_C','else',4,'p_else','parser.py',243),
  ('ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C','ciclo_while',8,'p_ciclo_while','parser.py',247),
  ('ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C','ciclo_for',10,'p_ciclo_for','parser.py',251),
]
