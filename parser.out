Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID PUNTOCOMA prog
Rule 2     prog -> main
Rule 3     prog -> dec_vars dec_funciones main
Rule 4     prog -> dec_vars main
Rule 5     prog -> dec_funciones main
Rule 6     main -> PRINCIPAL PARENT_A PARENT_C dec_est
Rule 7     dec_vars -> VAR vars
Rule 8     vars -> tipo_simple ids_simple PUNTOCOMA
Rule 9     vars -> tipo_simple ids_simple PUNTOCOMA vars
Rule 10    tipo_simple -> INT
Rule 11    tipo_simple -> FLOAT
Rule 12    tipo_simple -> CHAR
Rule 13    ids_simple -> ID
Rule 14    ids_simple -> ID dimension
Rule 15    ids_simple -> ID COMA ids_simple
Rule 16    ids_simple -> ID dimension COMA ids_simple
Rule 17    dimension -> CORCHETE_A CTE_I CORCHETE_C
Rule 18    variable -> ID
Rule 19    variable -> ID dim
Rule 20    variables -> variable
Rule 21    variables -> variable COMA variables
Rule 22    dim -> CORCHETE_A expresion CORCHETE_C
Rule 23    dec_funciones -> funcion
Rule 24    dec_funciones -> funcion dec_funciones
Rule 25    funcion -> FUNCION tipo_simple ID func_dos
Rule 26    funcion -> FUNCION VOID ID func_dos
Rule 27    func_dos -> PARENT_A PARENT_C var_funcs
Rule 28    func_dos -> PARENT_A parametros PARENT_C var_funcs
Rule 29    var_funcs -> dec_est
Rule 30    var_funcs -> dec_vars dec_est
Rule 31    parametros -> tipo_simple variable
Rule 32    parametros -> tipo_simple variable COMA parametros
Rule 33    dec_est -> LLAVE_A LLAVE_C
Rule 34    dec_est -> LLAVE_A estatutos_dos LLAVE_C
Rule 35    estatutos -> asignacion PUNTOCOMA
Rule 36    estatutos -> llamada PUNTOCOMA
Rule 37    estatutos -> retorno PUNTOCOMA
Rule 38    estatutos -> lectura PUNTOCOMA
Rule 39    estatutos -> escritura PUNTOCOMA
Rule 40    estatutos -> decision
Rule 41    estatutos -> ciclo_for
Rule 42    estatutos -> ciclo_while
Rule 43    estatutos_dos -> estatutos
Rule 44    estatutos_dos -> estatutos estatutos_dos
Rule 45    asignacion -> variable IGUAL expresion
Rule 46    llamada -> ID PARENT_A PARENT_C
Rule 47    llamada -> ID PARENT_A expresiones PARENT_C
Rule 48    expresiones -> expresion
Rule 49    expresiones -> expresion COMA expresion
Rule 50    expresion -> t_expresion
Rule 51    expresion -> t_expresion OR expresion
Rule 52    t_expresion -> g_expresion
Rule 53    t_expresion -> g_expresion AND t_expresion
Rule 54    g_expresion -> m_expresion
Rule 55    g_expresion -> m_expresion op_logicos m_expresion
Rule 56    op_logicos -> MAYORQUE
Rule 57    op_logicos -> MENORQUE
Rule 58    op_logicos -> MAYORIGUAL
Rule 59    op_logicos -> MENORIGUAL
Rule 60    op_logicos -> IGUALIGUAL
Rule 61    op_logicos -> DIFERENTE
Rule 62    m_expresion -> termino
Rule 63    m_expresion -> termino MAS m_expresion
Rule 64    m_expresion -> termino MENOS m_expresion
Rule 65    termino -> factor
Rule 66    termino -> factor POR termino
Rule 67    termino -> factor DIV termino
Rule 68    factor -> PARENT_A expresion PARENT_C
Rule 69    factor -> CTE_I
Rule 70    factor -> CTE_F
Rule 71    factor -> CTE_CH
Rule 72    factor -> variable
Rule 73    factor -> llamada
Rule 74    retorno -> REGRESA PARENT_A expresion PARENT_C
Rule 75    lectura -> LEER PARENT_A variables PARENT_C
Rule 76    escritura -> ESCRIBIR PARENT_A escr PARENT_C
Rule 77    escritura_dos -> CTE_STR
Rule 78    escritura_dos -> expresion
Rule 79    escr -> escritura_dos
Rule 80    escr -> escritura_dos COMA escr
Rule 81    decision -> if
Rule 82    decision -> if else
Rule 83    if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C
Rule 84    else -> SINO LLAVE_A estatutos_dos LLAVE_C
Rule 85    ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
Rule 86    ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C

Terminals, with rules where they appear

AND                  : 53
CHAR                 : 12
COMA                 : 15 16 21 32 49 80
CORCHETE_A           : 17 22
CORCHETE_C           : 17 22
CTE_CH               : 71
CTE_F                : 70
CTE_I                : 17 69
CTE_STR              : 77
DESDE                : 86
DIFERENTE            : 61
DIV                  : 67
ENTONCES             : 83
ESCRIBIR             : 76
FLOAT                : 11
FUNCION              : 25 26
HACER                : 86
HASTA                : 86
HAZ                  : 85
ID                   : 1 13 14 15 16 18 19 25 26 46 47
IGUAL                : 45 86
IGUALIGUAL           : 60
INT                  : 10
LEER                 : 75
LLAVE_A              : 33 34 83 84 85 86
LLAVE_C              : 33 34 83 84 85 86
MAS                  : 63
MAYORIGUAL           : 58
MAYORQUE             : 56
MENORIGUAL           : 59
MENORQUE             : 57
MENOS                : 64
MIENTRAS             : 85
OR                   : 51
PARENT_A             : 6 27 28 46 47 68 74 75 76 83 85
PARENT_C             : 6 27 28 46 47 68 74 75 76 83 85
POR                  : 66
PRINCIPAL            : 6
PROGRAMA             : 1
PUNTOCOMA            : 1 8 9 35 36 37 38 39
REGRESA              : 74
SI                   : 83
SINO                 : 84
VAR                  : 7
VOID                 : 26
error                : 

Nonterminals, with rules where they appear

asignacion           : 35
ciclo_for            : 41
ciclo_while          : 42
dec_est              : 6 29 30
dec_funciones        : 3 5 24
dec_vars             : 3 4 30
decision             : 40
dim                  : 19
dimension            : 14 16
else                 : 82
escr                 : 76 80
escritura            : 39
escritura_dos        : 79 80
estatutos            : 43 44
estatutos_dos        : 34 44 83 84 85 86
expresion            : 22 45 48 49 49 51 68 74 78 83 85 86 86
expresiones          : 47
factor               : 65 66 67
func_dos             : 25 26
funcion              : 23 24
g_expresion          : 52 53
ids_simple           : 8 9 15 16
if                   : 81 82
lectura              : 38
llamada              : 36 73
m_expresion          : 54 55 55 63 64
main                 : 2 3 4 5
op_logicos           : 55
parametros           : 28 32
prog                 : 1
programa             : 0
retorno              : 37
t_expresion          : 50 51 53
termino              : 62 63 64 66 67
tipo_simple          : 8 9 25 31 32
var_funcs            : 27 28
variable             : 20 21 31 32 45 72 86
variables            : 21 75
vars                 : 7 9

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID PUNTOCOMA prog

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID PUNTOCOMA prog

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . PUNTOCOMA prog

    PUNTOCOMA       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID PUNTOCOMA . prog
    (2) prog -> . main
    (3) prog -> . dec_vars dec_funciones main
    (4) prog -> . dec_vars main
    (5) prog -> . dec_funciones main
    (6) main -> . PRINCIPAL PARENT_A PARENT_C dec_est
    (7) dec_vars -> . VAR vars
    (23) dec_funciones -> . funcion
    (24) dec_funciones -> . funcion dec_funciones
    (25) funcion -> . FUNCION tipo_simple ID func_dos
    (26) funcion -> . FUNCION VOID ID func_dos

    PRINCIPAL       shift and go to state 9
    VAR             shift and go to state 10
    FUNCION         shift and go to state 12

    prog                           shift and go to state 5
    main                           shift and go to state 6
    dec_vars                       shift and go to state 7
    dec_funciones                  shift and go to state 8
    funcion                        shift and go to state 11

state 5

    (1) programa -> PROGRAMA ID PUNTOCOMA prog .

    $end            reduce using rule 1 (programa -> PROGRAMA ID PUNTOCOMA prog .)


state 6

    (2) prog -> main .

    $end            reduce using rule 2 (prog -> main .)


state 7

    (3) prog -> dec_vars . dec_funciones main
    (4) prog -> dec_vars . main
    (23) dec_funciones -> . funcion
    (24) dec_funciones -> . funcion dec_funciones
    (6) main -> . PRINCIPAL PARENT_A PARENT_C dec_est
    (25) funcion -> . FUNCION tipo_simple ID func_dos
    (26) funcion -> . FUNCION VOID ID func_dos

    PRINCIPAL       shift and go to state 9
    FUNCION         shift and go to state 12

    dec_funciones                  shift and go to state 13
    main                           shift and go to state 14
    funcion                        shift and go to state 11

state 8

    (5) prog -> dec_funciones . main
    (6) main -> . PRINCIPAL PARENT_A PARENT_C dec_est

    PRINCIPAL       shift and go to state 9

    main                           shift and go to state 15

state 9

    (6) main -> PRINCIPAL . PARENT_A PARENT_C dec_est

    PARENT_A        shift and go to state 16


state 10

    (7) dec_vars -> VAR . vars
    (8) vars -> . tipo_simple ids_simple PUNTOCOMA
    (9) vars -> . tipo_simple ids_simple PUNTOCOMA vars
    (10) tipo_simple -> . INT
    (11) tipo_simple -> . FLOAT
    (12) tipo_simple -> . CHAR

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    vars                           shift and go to state 17
    tipo_simple                    shift and go to state 18

state 11

    (23) dec_funciones -> funcion .
    (24) dec_funciones -> funcion . dec_funciones
    (23) dec_funciones -> . funcion
    (24) dec_funciones -> . funcion dec_funciones
    (25) funcion -> . FUNCION tipo_simple ID func_dos
    (26) funcion -> . FUNCION VOID ID func_dos

    PRINCIPAL       reduce using rule 23 (dec_funciones -> funcion .)
    FUNCION         shift and go to state 12

    funcion                        shift and go to state 11
    dec_funciones                  shift and go to state 22

state 12

    (25) funcion -> FUNCION . tipo_simple ID func_dos
    (26) funcion -> FUNCION . VOID ID func_dos
    (10) tipo_simple -> . INT
    (11) tipo_simple -> . FLOAT
    (12) tipo_simple -> . CHAR

    VOID            shift and go to state 24
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    tipo_simple                    shift and go to state 23

state 13

    (3) prog -> dec_vars dec_funciones . main
    (6) main -> . PRINCIPAL PARENT_A PARENT_C dec_est

    PRINCIPAL       shift and go to state 9

    main                           shift and go to state 25

state 14

    (4) prog -> dec_vars main .

    $end            reduce using rule 4 (prog -> dec_vars main .)


state 15

    (5) prog -> dec_funciones main .

    $end            reduce using rule 5 (prog -> dec_funciones main .)


state 16

    (6) main -> PRINCIPAL PARENT_A . PARENT_C dec_est

    PARENT_C        shift and go to state 26


state 17

    (7) dec_vars -> VAR vars .

    PRINCIPAL       reduce using rule 7 (dec_vars -> VAR vars .)
    FUNCION         reduce using rule 7 (dec_vars -> VAR vars .)
    LLAVE_A         reduce using rule 7 (dec_vars -> VAR vars .)


state 18

    (8) vars -> tipo_simple . ids_simple PUNTOCOMA
    (9) vars -> tipo_simple . ids_simple PUNTOCOMA vars
    (13) ids_simple -> . ID
    (14) ids_simple -> . ID dimension
    (15) ids_simple -> . ID COMA ids_simple
    (16) ids_simple -> . ID dimension COMA ids_simple

    ID              shift and go to state 28

    ids_simple                     shift and go to state 27

state 19

    (10) tipo_simple -> INT .

    ID              reduce using rule 10 (tipo_simple -> INT .)


state 20

    (11) tipo_simple -> FLOAT .

    ID              reduce using rule 11 (tipo_simple -> FLOAT .)


state 21

    (12) tipo_simple -> CHAR .

    ID              reduce using rule 12 (tipo_simple -> CHAR .)


state 22

    (24) dec_funciones -> funcion dec_funciones .

    PRINCIPAL       reduce using rule 24 (dec_funciones -> funcion dec_funciones .)


state 23

    (25) funcion -> FUNCION tipo_simple . ID func_dos

    ID              shift and go to state 29


state 24

    (26) funcion -> FUNCION VOID . ID func_dos

    ID              shift and go to state 30


state 25

    (3) prog -> dec_vars dec_funciones main .

    $end            reduce using rule 3 (prog -> dec_vars dec_funciones main .)


state 26

    (6) main -> PRINCIPAL PARENT_A PARENT_C . dec_est
    (33) dec_est -> . LLAVE_A LLAVE_C
    (34) dec_est -> . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 32

    dec_est                        shift and go to state 31

state 27

    (8) vars -> tipo_simple ids_simple . PUNTOCOMA
    (9) vars -> tipo_simple ids_simple . PUNTOCOMA vars

    PUNTOCOMA       shift and go to state 33


state 28

    (13) ids_simple -> ID .
    (14) ids_simple -> ID . dimension
    (15) ids_simple -> ID . COMA ids_simple
    (16) ids_simple -> ID . dimension COMA ids_simple
    (17) dimension -> . CORCHETE_A CTE_I CORCHETE_C

    PUNTOCOMA       reduce using rule 13 (ids_simple -> ID .)
    COMA            shift and go to state 35
    CORCHETE_A      shift and go to state 36

    dimension                      shift and go to state 34

state 29

    (25) funcion -> FUNCION tipo_simple ID . func_dos
    (27) func_dos -> . PARENT_A PARENT_C var_funcs
    (28) func_dos -> . PARENT_A parametros PARENT_C var_funcs

    PARENT_A        shift and go to state 38

    func_dos                       shift and go to state 37

state 30

    (26) funcion -> FUNCION VOID ID . func_dos
    (27) func_dos -> . PARENT_A PARENT_C var_funcs
    (28) func_dos -> . PARENT_A parametros PARENT_C var_funcs

    PARENT_A        shift and go to state 38

    func_dos                       shift and go to state 39

state 31

    (6) main -> PRINCIPAL PARENT_A PARENT_C dec_est .

    $end            reduce using rule 6 (main -> PRINCIPAL PARENT_A PARENT_C dec_est .)


state 32

    (33) dec_est -> LLAVE_A . LLAVE_C
    (34) dec_est -> LLAVE_A . estatutos_dos LLAVE_C
    (43) estatutos_dos -> . estatutos
    (44) estatutos_dos -> . estatutos estatutos_dos
    (35) estatutos -> . asignacion PUNTOCOMA
    (36) estatutos -> . llamada PUNTOCOMA
    (37) estatutos -> . retorno PUNTOCOMA
    (38) estatutos -> . lectura PUNTOCOMA
    (39) estatutos -> . escritura PUNTOCOMA
    (40) estatutos -> . decision
    (41) estatutos -> . ciclo_for
    (42) estatutos -> . ciclo_while
    (45) asignacion -> . variable IGUAL expresion
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C
    (74) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (75) lectura -> . LEER PARENT_A variables PARENT_C
    (76) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (81) decision -> . if
    (82) decision -> . if else
    (86) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (85) ciclo_while -> . MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
    (18) variable -> . ID
    (19) variable -> . ID dim
    (83) if -> . SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    LLAVE_C         shift and go to state 40
    ID              shift and go to state 52
    REGRESA         shift and go to state 53
    LEER            shift and go to state 54
    ESCRIBIR        shift and go to state 55
    DESDE           shift and go to state 57
    MIENTRAS        shift and go to state 58
    SI              shift and go to state 59

    estatutos_dos                  shift and go to state 41
    estatutos                      shift and go to state 42
    asignacion                     shift and go to state 43
    llamada                        shift and go to state 44
    retorno                        shift and go to state 45
    lectura                        shift and go to state 46
    escritura                      shift and go to state 47
    decision                       shift and go to state 48
    ciclo_for                      shift and go to state 49
    ciclo_while                    shift and go to state 50
    variable                       shift and go to state 51
    if                             shift and go to state 56

state 33

    (8) vars -> tipo_simple ids_simple PUNTOCOMA .
    (9) vars -> tipo_simple ids_simple PUNTOCOMA . vars
    (8) vars -> . tipo_simple ids_simple PUNTOCOMA
    (9) vars -> . tipo_simple ids_simple PUNTOCOMA vars
    (10) tipo_simple -> . INT
    (11) tipo_simple -> . FLOAT
    (12) tipo_simple -> . CHAR

    PRINCIPAL       reduce using rule 8 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    FUNCION         reduce using rule 8 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    LLAVE_A         reduce using rule 8 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    tipo_simple                    shift and go to state 18
    vars                           shift and go to state 60

state 34

    (14) ids_simple -> ID dimension .
    (16) ids_simple -> ID dimension . COMA ids_simple

    PUNTOCOMA       reduce using rule 14 (ids_simple -> ID dimension .)
    COMA            shift and go to state 61


state 35

    (15) ids_simple -> ID COMA . ids_simple
    (13) ids_simple -> . ID
    (14) ids_simple -> . ID dimension
    (15) ids_simple -> . ID COMA ids_simple
    (16) ids_simple -> . ID dimension COMA ids_simple

    ID              shift and go to state 28

    ids_simple                     shift and go to state 62

state 36

    (17) dimension -> CORCHETE_A . CTE_I CORCHETE_C

    CTE_I           shift and go to state 63


state 37

    (25) funcion -> FUNCION tipo_simple ID func_dos .

    FUNCION         reduce using rule 25 (funcion -> FUNCION tipo_simple ID func_dos .)
    PRINCIPAL       reduce using rule 25 (funcion -> FUNCION tipo_simple ID func_dos .)


state 38

    (27) func_dos -> PARENT_A . PARENT_C var_funcs
    (28) func_dos -> PARENT_A . parametros PARENT_C var_funcs
    (31) parametros -> . tipo_simple variable
    (32) parametros -> . tipo_simple variable COMA parametros
    (10) tipo_simple -> . INT
    (11) tipo_simple -> . FLOAT
    (12) tipo_simple -> . CHAR

    PARENT_C        shift and go to state 64
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    parametros                     shift and go to state 65
    tipo_simple                    shift and go to state 66

state 39

    (26) funcion -> FUNCION VOID ID func_dos .

    FUNCION         reduce using rule 26 (funcion -> FUNCION VOID ID func_dos .)
    PRINCIPAL       reduce using rule 26 (funcion -> FUNCION VOID ID func_dos .)


state 40

    (33) dec_est -> LLAVE_A LLAVE_C .

    $end            reduce using rule 33 (dec_est -> LLAVE_A LLAVE_C .)
    FUNCION         reduce using rule 33 (dec_est -> LLAVE_A LLAVE_C .)
    PRINCIPAL       reduce using rule 33 (dec_est -> LLAVE_A LLAVE_C .)


state 41

    (34) dec_est -> LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 67


state 42

    (43) estatutos_dos -> estatutos .
    (44) estatutos_dos -> estatutos . estatutos_dos
    (43) estatutos_dos -> . estatutos
    (44) estatutos_dos -> . estatutos estatutos_dos
    (35) estatutos -> . asignacion PUNTOCOMA
    (36) estatutos -> . llamada PUNTOCOMA
    (37) estatutos -> . retorno PUNTOCOMA
    (38) estatutos -> . lectura PUNTOCOMA
    (39) estatutos -> . escritura PUNTOCOMA
    (40) estatutos -> . decision
    (41) estatutos -> . ciclo_for
    (42) estatutos -> . ciclo_while
    (45) asignacion -> . variable IGUAL expresion
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C
    (74) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (75) lectura -> . LEER PARENT_A variables PARENT_C
    (76) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (81) decision -> . if
    (82) decision -> . if else
    (86) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (85) ciclo_while -> . MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
    (18) variable -> . ID
    (19) variable -> . ID dim
    (83) if -> . SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    LLAVE_C         reduce using rule 43 (estatutos_dos -> estatutos .)
    ID              shift and go to state 52
    REGRESA         shift and go to state 53
    LEER            shift and go to state 54
    ESCRIBIR        shift and go to state 55
    DESDE           shift and go to state 57
    MIENTRAS        shift and go to state 58
    SI              shift and go to state 59

    estatutos                      shift and go to state 42
    estatutos_dos                  shift and go to state 68
    asignacion                     shift and go to state 43
    llamada                        shift and go to state 44
    retorno                        shift and go to state 45
    lectura                        shift and go to state 46
    escritura                      shift and go to state 47
    decision                       shift and go to state 48
    ciclo_for                      shift and go to state 49
    ciclo_while                    shift and go to state 50
    variable                       shift and go to state 51
    if                             shift and go to state 56

state 43

    (35) estatutos -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 69


state 44

    (36) estatutos -> llamada . PUNTOCOMA

    PUNTOCOMA       shift and go to state 70


state 45

    (37) estatutos -> retorno . PUNTOCOMA

    PUNTOCOMA       shift and go to state 71


state 46

    (38) estatutos -> lectura . PUNTOCOMA

    PUNTOCOMA       shift and go to state 72


state 47

    (39) estatutos -> escritura . PUNTOCOMA

    PUNTOCOMA       shift and go to state 73


state 48

    (40) estatutos -> decision .

    ID              reduce using rule 40 (estatutos -> decision .)
    REGRESA         reduce using rule 40 (estatutos -> decision .)
    LEER            reduce using rule 40 (estatutos -> decision .)
    ESCRIBIR        reduce using rule 40 (estatutos -> decision .)
    DESDE           reduce using rule 40 (estatutos -> decision .)
    MIENTRAS        reduce using rule 40 (estatutos -> decision .)
    SI              reduce using rule 40 (estatutos -> decision .)
    LLAVE_C         reduce using rule 40 (estatutos -> decision .)


state 49

    (41) estatutos -> ciclo_for .

    ID              reduce using rule 41 (estatutos -> ciclo_for .)
    REGRESA         reduce using rule 41 (estatutos -> ciclo_for .)
    LEER            reduce using rule 41 (estatutos -> ciclo_for .)
    ESCRIBIR        reduce using rule 41 (estatutos -> ciclo_for .)
    DESDE           reduce using rule 41 (estatutos -> ciclo_for .)
    MIENTRAS        reduce using rule 41 (estatutos -> ciclo_for .)
    SI              reduce using rule 41 (estatutos -> ciclo_for .)
    LLAVE_C         reduce using rule 41 (estatutos -> ciclo_for .)


state 50

    (42) estatutos -> ciclo_while .

    ID              reduce using rule 42 (estatutos -> ciclo_while .)
    REGRESA         reduce using rule 42 (estatutos -> ciclo_while .)
    LEER            reduce using rule 42 (estatutos -> ciclo_while .)
    ESCRIBIR        reduce using rule 42 (estatutos -> ciclo_while .)
    DESDE           reduce using rule 42 (estatutos -> ciclo_while .)
    MIENTRAS        reduce using rule 42 (estatutos -> ciclo_while .)
    SI              reduce using rule 42 (estatutos -> ciclo_while .)
    LLAVE_C         reduce using rule 42 (estatutos -> ciclo_while .)


state 51

    (45) asignacion -> variable . IGUAL expresion

    IGUAL           shift and go to state 74


state 52

    (46) llamada -> ID . PARENT_A PARENT_C
    (47) llamada -> ID . PARENT_A expresiones PARENT_C
    (18) variable -> ID .
    (19) variable -> ID . dim
    (22) dim -> . CORCHETE_A expresion CORCHETE_C

    PARENT_A        shift and go to state 75
    IGUAL           reduce using rule 18 (variable -> ID .)
    CORCHETE_A      shift and go to state 77

    dim                            shift and go to state 76

state 53

    (74) retorno -> REGRESA . PARENT_A expresion PARENT_C

    PARENT_A        shift and go to state 78


state 54

    (75) lectura -> LEER . PARENT_A variables PARENT_C

    PARENT_A        shift and go to state 79


state 55

    (76) escritura -> ESCRIBIR . PARENT_A escr PARENT_C

    PARENT_A        shift and go to state 80


state 56

    (81) decision -> if .
    (82) decision -> if . else
    (84) else -> . SINO LLAVE_A estatutos_dos LLAVE_C

    ID              reduce using rule 81 (decision -> if .)
    REGRESA         reduce using rule 81 (decision -> if .)
    LEER            reduce using rule 81 (decision -> if .)
    ESCRIBIR        reduce using rule 81 (decision -> if .)
    DESDE           reduce using rule 81 (decision -> if .)
    MIENTRAS        reduce using rule 81 (decision -> if .)
    SI              reduce using rule 81 (decision -> if .)
    LLAVE_C         reduce using rule 81 (decision -> if .)
    SINO            shift and go to state 82

    else                           shift and go to state 81

state 57

    (86) ciclo_for -> DESDE . variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (18) variable -> . ID
    (19) variable -> . ID dim

    ID              shift and go to state 84

    variable                       shift and go to state 83

state 58

    (85) ciclo_while -> MIENTRAS . PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C

    PARENT_A        shift and go to state 85


state 59

    (83) if -> SI . PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    PARENT_A        shift and go to state 86


state 60

    (9) vars -> tipo_simple ids_simple PUNTOCOMA vars .

    PRINCIPAL       reduce using rule 9 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)
    FUNCION         reduce using rule 9 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)
    LLAVE_A         reduce using rule 9 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)


state 61

    (16) ids_simple -> ID dimension COMA . ids_simple
    (13) ids_simple -> . ID
    (14) ids_simple -> . ID dimension
    (15) ids_simple -> . ID COMA ids_simple
    (16) ids_simple -> . ID dimension COMA ids_simple

    ID              shift and go to state 28

    ids_simple                     shift and go to state 87

state 62

    (15) ids_simple -> ID COMA ids_simple .

    PUNTOCOMA       reduce using rule 15 (ids_simple -> ID COMA ids_simple .)


state 63

    (17) dimension -> CORCHETE_A CTE_I . CORCHETE_C

    CORCHETE_C      shift and go to state 88


state 64

    (27) func_dos -> PARENT_A PARENT_C . var_funcs
    (29) var_funcs -> . dec_est
    (30) var_funcs -> . dec_vars dec_est
    (33) dec_est -> . LLAVE_A LLAVE_C
    (34) dec_est -> . LLAVE_A estatutos_dos LLAVE_C
    (7) dec_vars -> . VAR vars

    LLAVE_A         shift and go to state 32
    VAR             shift and go to state 10

    var_funcs                      shift and go to state 89
    dec_est                        shift and go to state 90
    dec_vars                       shift and go to state 91

state 65

    (28) func_dos -> PARENT_A parametros . PARENT_C var_funcs

    PARENT_C        shift and go to state 92


state 66

    (31) parametros -> tipo_simple . variable
    (32) parametros -> tipo_simple . variable COMA parametros
    (18) variable -> . ID
    (19) variable -> . ID dim

    ID              shift and go to state 84

    variable                       shift and go to state 93

state 67

    (34) dec_est -> LLAVE_A estatutos_dos LLAVE_C .

    $end            reduce using rule 34 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)
    FUNCION         reduce using rule 34 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)
    PRINCIPAL       reduce using rule 34 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)


state 68

    (44) estatutos_dos -> estatutos estatutos_dos .

    LLAVE_C         reduce using rule 44 (estatutos_dos -> estatutos estatutos_dos .)


state 69

    (35) estatutos -> asignacion PUNTOCOMA .

    ID              reduce using rule 35 (estatutos -> asignacion PUNTOCOMA .)
    REGRESA         reduce using rule 35 (estatutos -> asignacion PUNTOCOMA .)
    LEER            reduce using rule 35 (estatutos -> asignacion PUNTOCOMA .)
    ESCRIBIR        reduce using rule 35 (estatutos -> asignacion PUNTOCOMA .)
    DESDE           reduce using rule 35 (estatutos -> asignacion PUNTOCOMA .)
    MIENTRAS        reduce using rule 35 (estatutos -> asignacion PUNTOCOMA .)
    SI              reduce using rule 35 (estatutos -> asignacion PUNTOCOMA .)
    LLAVE_C         reduce using rule 35 (estatutos -> asignacion PUNTOCOMA .)


state 70

    (36) estatutos -> llamada PUNTOCOMA .

    ID              reduce using rule 36 (estatutos -> llamada PUNTOCOMA .)
    REGRESA         reduce using rule 36 (estatutos -> llamada PUNTOCOMA .)
    LEER            reduce using rule 36 (estatutos -> llamada PUNTOCOMA .)
    ESCRIBIR        reduce using rule 36 (estatutos -> llamada PUNTOCOMA .)
    DESDE           reduce using rule 36 (estatutos -> llamada PUNTOCOMA .)
    MIENTRAS        reduce using rule 36 (estatutos -> llamada PUNTOCOMA .)
    SI              reduce using rule 36 (estatutos -> llamada PUNTOCOMA .)
    LLAVE_C         reduce using rule 36 (estatutos -> llamada PUNTOCOMA .)


state 71

    (37) estatutos -> retorno PUNTOCOMA .

    ID              reduce using rule 37 (estatutos -> retorno PUNTOCOMA .)
    REGRESA         reduce using rule 37 (estatutos -> retorno PUNTOCOMA .)
    LEER            reduce using rule 37 (estatutos -> retorno PUNTOCOMA .)
    ESCRIBIR        reduce using rule 37 (estatutos -> retorno PUNTOCOMA .)
    DESDE           reduce using rule 37 (estatutos -> retorno PUNTOCOMA .)
    MIENTRAS        reduce using rule 37 (estatutos -> retorno PUNTOCOMA .)
    SI              reduce using rule 37 (estatutos -> retorno PUNTOCOMA .)
    LLAVE_C         reduce using rule 37 (estatutos -> retorno PUNTOCOMA .)


state 72

    (38) estatutos -> lectura PUNTOCOMA .

    ID              reduce using rule 38 (estatutos -> lectura PUNTOCOMA .)
    REGRESA         reduce using rule 38 (estatutos -> lectura PUNTOCOMA .)
    LEER            reduce using rule 38 (estatutos -> lectura PUNTOCOMA .)
    ESCRIBIR        reduce using rule 38 (estatutos -> lectura PUNTOCOMA .)
    DESDE           reduce using rule 38 (estatutos -> lectura PUNTOCOMA .)
    MIENTRAS        reduce using rule 38 (estatutos -> lectura PUNTOCOMA .)
    SI              reduce using rule 38 (estatutos -> lectura PUNTOCOMA .)
    LLAVE_C         reduce using rule 38 (estatutos -> lectura PUNTOCOMA .)


state 73

    (39) estatutos -> escritura PUNTOCOMA .

    ID              reduce using rule 39 (estatutos -> escritura PUNTOCOMA .)
    REGRESA         reduce using rule 39 (estatutos -> escritura PUNTOCOMA .)
    LEER            reduce using rule 39 (estatutos -> escritura PUNTOCOMA .)
    ESCRIBIR        reduce using rule 39 (estatutos -> escritura PUNTOCOMA .)
    DESDE           reduce using rule 39 (estatutos -> escritura PUNTOCOMA .)
    MIENTRAS        reduce using rule 39 (estatutos -> escritura PUNTOCOMA .)
    SI              reduce using rule 39 (estatutos -> escritura PUNTOCOMA .)
    LLAVE_C         reduce using rule 39 (estatutos -> escritura PUNTOCOMA .)


state 74

    (45) asignacion -> variable IGUAL . expresion
    (50) expresion -> . t_expresion
    (51) expresion -> . t_expresion OR expresion
    (52) t_expresion -> . g_expresion
    (53) t_expresion -> . g_expresion AND t_expresion
    (54) g_expresion -> . m_expresion
    (55) g_expresion -> . m_expresion op_logicos m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    variable                       shift and go to state 94
    expresion                      shift and go to state 95
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    llamada                        shift and go to state 105

state 75

    (46) llamada -> ID PARENT_A . PARENT_C
    (47) llamada -> ID PARENT_A . expresiones PARENT_C
    (48) expresiones -> . expresion
    (49) expresiones -> . expresion COMA expresion
    (50) expresion -> . t_expresion
    (51) expresion -> . t_expresion OR expresion
    (52) t_expresion -> . g_expresion
    (53) t_expresion -> . g_expresion AND t_expresion
    (54) g_expresion -> . m_expresion
    (55) g_expresion -> . m_expresion op_logicos m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_C        shift and go to state 107
    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    expresiones                    shift and go to state 108
    expresion                      shift and go to state 109
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 76

    (19) variable -> ID dim .

    IGUAL           reduce using rule 19 (variable -> ID dim .)
    COMA            reduce using rule 19 (variable -> ID dim .)
    PARENT_C        reduce using rule 19 (variable -> ID dim .)
    POR             reduce using rule 19 (variable -> ID dim .)
    DIV             reduce using rule 19 (variable -> ID dim .)
    MAS             reduce using rule 19 (variable -> ID dim .)
    MENOS           reduce using rule 19 (variable -> ID dim .)
    MAYORQUE        reduce using rule 19 (variable -> ID dim .)
    MENORQUE        reduce using rule 19 (variable -> ID dim .)
    MAYORIGUAL      reduce using rule 19 (variable -> ID dim .)
    MENORIGUAL      reduce using rule 19 (variable -> ID dim .)
    IGUALIGUAL      reduce using rule 19 (variable -> ID dim .)
    DIFERENTE       reduce using rule 19 (variable -> ID dim .)
    AND             reduce using rule 19 (variable -> ID dim .)
    OR              reduce using rule 19 (variable -> ID dim .)
    PUNTOCOMA       reduce using rule 19 (variable -> ID dim .)
    CORCHETE_C      reduce using rule 19 (variable -> ID dim .)
    HASTA           reduce using rule 19 (variable -> ID dim .)
    HACER           reduce using rule 19 (variable -> ID dim .)


state 77

    (22) dim -> CORCHETE_A . expresion CORCHETE_C
    (50) expresion -> . t_expresion
    (51) expresion -> . t_expresion OR expresion
    (52) t_expresion -> . g_expresion
    (53) t_expresion -> . g_expresion AND t_expresion
    (54) g_expresion -> . m_expresion
    (55) g_expresion -> . m_expresion op_logicos m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    expresion                      shift and go to state 110
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 78

    (74) retorno -> REGRESA PARENT_A . expresion PARENT_C
    (50) expresion -> . t_expresion
    (51) expresion -> . t_expresion OR expresion
    (52) t_expresion -> . g_expresion
    (53) t_expresion -> . g_expresion AND t_expresion
    (54) g_expresion -> . m_expresion
    (55) g_expresion -> . m_expresion op_logicos m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    expresion                      shift and go to state 111
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 79

    (75) lectura -> LEER PARENT_A . variables PARENT_C
    (20) variables -> . variable
    (21) variables -> . variable COMA variables
    (18) variable -> . ID
    (19) variable -> . ID dim

    ID              shift and go to state 84

    variables                      shift and go to state 112
    variable                       shift and go to state 113

state 80

    (76) escritura -> ESCRIBIR PARENT_A . escr PARENT_C
    (79) escr -> . escritura_dos
    (80) escr -> . escritura_dos COMA escr
    (77) escritura_dos -> . CTE_STR
    (78) escritura_dos -> . expresion
    (50) expresion -> . t_expresion
    (51) expresion -> . t_expresion OR expresion
    (52) t_expresion -> . g_expresion
    (53) t_expresion -> . g_expresion AND t_expresion
    (54) g_expresion -> . m_expresion
    (55) g_expresion -> . m_expresion op_logicos m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    CTE_STR         shift and go to state 116
    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    escr                           shift and go to state 114
    escritura_dos                  shift and go to state 115
    expresion                      shift and go to state 117
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 81

    (82) decision -> if else .

    ID              reduce using rule 82 (decision -> if else .)
    REGRESA         reduce using rule 82 (decision -> if else .)
    LEER            reduce using rule 82 (decision -> if else .)
    ESCRIBIR        reduce using rule 82 (decision -> if else .)
    DESDE           reduce using rule 82 (decision -> if else .)
    MIENTRAS        reduce using rule 82 (decision -> if else .)
    SI              reduce using rule 82 (decision -> if else .)
    LLAVE_C         reduce using rule 82 (decision -> if else .)


state 82

    (84) else -> SINO . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 118


state 83

    (86) ciclo_for -> DESDE variable . IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C

    IGUAL           shift and go to state 119


state 84

    (18) variable -> ID .
    (19) variable -> ID . dim
    (22) dim -> . CORCHETE_A expresion CORCHETE_C

    IGUAL           reduce using rule 18 (variable -> ID .)
    COMA            reduce using rule 18 (variable -> ID .)
    PARENT_C        reduce using rule 18 (variable -> ID .)
    CORCHETE_A      shift and go to state 77

    dim                            shift and go to state 76

state 85

    (85) ciclo_while -> MIENTRAS PARENT_A . expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
    (50) expresion -> . t_expresion
    (51) expresion -> . t_expresion OR expresion
    (52) t_expresion -> . g_expresion
    (53) t_expresion -> . g_expresion AND t_expresion
    (54) g_expresion -> . m_expresion
    (55) g_expresion -> . m_expresion op_logicos m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    expresion                      shift and go to state 120
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 86

    (83) if -> SI PARENT_A . expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C
    (50) expresion -> . t_expresion
    (51) expresion -> . t_expresion OR expresion
    (52) t_expresion -> . g_expresion
    (53) t_expresion -> . g_expresion AND t_expresion
    (54) g_expresion -> . m_expresion
    (55) g_expresion -> . m_expresion op_logicos m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    expresion                      shift and go to state 121
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 87

    (16) ids_simple -> ID dimension COMA ids_simple .

    PUNTOCOMA       reduce using rule 16 (ids_simple -> ID dimension COMA ids_simple .)


state 88

    (17) dimension -> CORCHETE_A CTE_I CORCHETE_C .

    COMA            reduce using rule 17 (dimension -> CORCHETE_A CTE_I CORCHETE_C .)
    PUNTOCOMA       reduce using rule 17 (dimension -> CORCHETE_A CTE_I CORCHETE_C .)


state 89

    (27) func_dos -> PARENT_A PARENT_C var_funcs .

    FUNCION         reduce using rule 27 (func_dos -> PARENT_A PARENT_C var_funcs .)
    PRINCIPAL       reduce using rule 27 (func_dos -> PARENT_A PARENT_C var_funcs .)


state 90

    (29) var_funcs -> dec_est .

    FUNCION         reduce using rule 29 (var_funcs -> dec_est .)
    PRINCIPAL       reduce using rule 29 (var_funcs -> dec_est .)


state 91

    (30) var_funcs -> dec_vars . dec_est
    (33) dec_est -> . LLAVE_A LLAVE_C
    (34) dec_est -> . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 32

    dec_est                        shift and go to state 122

state 92

    (28) func_dos -> PARENT_A parametros PARENT_C . var_funcs
    (29) var_funcs -> . dec_est
    (30) var_funcs -> . dec_vars dec_est
    (33) dec_est -> . LLAVE_A LLAVE_C
    (34) dec_est -> . LLAVE_A estatutos_dos LLAVE_C
    (7) dec_vars -> . VAR vars

    LLAVE_A         shift and go to state 32
    VAR             shift and go to state 10

    var_funcs                      shift and go to state 123
    dec_est                        shift and go to state 90
    dec_vars                       shift and go to state 91

state 93

    (31) parametros -> tipo_simple variable .
    (32) parametros -> tipo_simple variable . COMA parametros

    PARENT_C        reduce using rule 31 (parametros -> tipo_simple variable .)
    COMA            shift and go to state 124


state 94

    (72) factor -> variable .

    POR             reduce using rule 72 (factor -> variable .)
    DIV             reduce using rule 72 (factor -> variable .)
    MAS             reduce using rule 72 (factor -> variable .)
    MENOS           reduce using rule 72 (factor -> variable .)
    MAYORQUE        reduce using rule 72 (factor -> variable .)
    MENORQUE        reduce using rule 72 (factor -> variable .)
    MAYORIGUAL      reduce using rule 72 (factor -> variable .)
    MENORIGUAL      reduce using rule 72 (factor -> variable .)
    IGUALIGUAL      reduce using rule 72 (factor -> variable .)
    DIFERENTE       reduce using rule 72 (factor -> variable .)
    AND             reduce using rule 72 (factor -> variable .)
    OR              reduce using rule 72 (factor -> variable .)
    PUNTOCOMA       reduce using rule 72 (factor -> variable .)
    COMA            reduce using rule 72 (factor -> variable .)
    PARENT_C        reduce using rule 72 (factor -> variable .)
    CORCHETE_C      reduce using rule 72 (factor -> variable .)
    HASTA           reduce using rule 72 (factor -> variable .)
    HACER           reduce using rule 72 (factor -> variable .)


state 95

    (45) asignacion -> variable IGUAL expresion .

    PUNTOCOMA       reduce using rule 45 (asignacion -> variable IGUAL expresion .)


state 96

    (50) expresion -> t_expresion .
    (51) expresion -> t_expresion . OR expresion

    PUNTOCOMA       reduce using rule 50 (expresion -> t_expresion .)
    COMA            reduce using rule 50 (expresion -> t_expresion .)
    PARENT_C        reduce using rule 50 (expresion -> t_expresion .)
    CORCHETE_C      reduce using rule 50 (expresion -> t_expresion .)
    HASTA           reduce using rule 50 (expresion -> t_expresion .)
    HACER           reduce using rule 50 (expresion -> t_expresion .)
    OR              shift and go to state 125


state 97

    (52) t_expresion -> g_expresion .
    (53) t_expresion -> g_expresion . AND t_expresion

    OR              reduce using rule 52 (t_expresion -> g_expresion .)
    PUNTOCOMA       reduce using rule 52 (t_expresion -> g_expresion .)
    COMA            reduce using rule 52 (t_expresion -> g_expresion .)
    PARENT_C        reduce using rule 52 (t_expresion -> g_expresion .)
    CORCHETE_C      reduce using rule 52 (t_expresion -> g_expresion .)
    HASTA           reduce using rule 52 (t_expresion -> g_expresion .)
    HACER           reduce using rule 52 (t_expresion -> g_expresion .)
    AND             shift and go to state 126


state 98

    (54) g_expresion -> m_expresion .
    (55) g_expresion -> m_expresion . op_logicos m_expresion
    (56) op_logicos -> . MAYORQUE
    (57) op_logicos -> . MENORQUE
    (58) op_logicos -> . MAYORIGUAL
    (59) op_logicos -> . MENORIGUAL
    (60) op_logicos -> . IGUALIGUAL
    (61) op_logicos -> . DIFERENTE

    AND             reduce using rule 54 (g_expresion -> m_expresion .)
    OR              reduce using rule 54 (g_expresion -> m_expresion .)
    PUNTOCOMA       reduce using rule 54 (g_expresion -> m_expresion .)
    COMA            reduce using rule 54 (g_expresion -> m_expresion .)
    PARENT_C        reduce using rule 54 (g_expresion -> m_expresion .)
    CORCHETE_C      reduce using rule 54 (g_expresion -> m_expresion .)
    HASTA           reduce using rule 54 (g_expresion -> m_expresion .)
    HACER           reduce using rule 54 (g_expresion -> m_expresion .)
    MAYORQUE        shift and go to state 128
    MENORQUE        shift and go to state 129
    MAYORIGUAL      shift and go to state 130
    MENORIGUAL      shift and go to state 131
    IGUALIGUAL      shift and go to state 132
    DIFERENTE       shift and go to state 133

    op_logicos                     shift and go to state 127

state 99

    (62) m_expresion -> termino .
    (63) m_expresion -> termino . MAS m_expresion
    (64) m_expresion -> termino . MENOS m_expresion

    MAYORQUE        reduce using rule 62 (m_expresion -> termino .)
    MENORQUE        reduce using rule 62 (m_expresion -> termino .)
    MAYORIGUAL      reduce using rule 62 (m_expresion -> termino .)
    MENORIGUAL      reduce using rule 62 (m_expresion -> termino .)
    IGUALIGUAL      reduce using rule 62 (m_expresion -> termino .)
    DIFERENTE       reduce using rule 62 (m_expresion -> termino .)
    AND             reduce using rule 62 (m_expresion -> termino .)
    OR              reduce using rule 62 (m_expresion -> termino .)
    PUNTOCOMA       reduce using rule 62 (m_expresion -> termino .)
    COMA            reduce using rule 62 (m_expresion -> termino .)
    PARENT_C        reduce using rule 62 (m_expresion -> termino .)
    CORCHETE_C      reduce using rule 62 (m_expresion -> termino .)
    HASTA           reduce using rule 62 (m_expresion -> termino .)
    HACER           reduce using rule 62 (m_expresion -> termino .)
    MAS             shift and go to state 134
    MENOS           shift and go to state 135


state 100

    (65) termino -> factor .
    (66) termino -> factor . POR termino
    (67) termino -> factor . DIV termino

    MAS             reduce using rule 65 (termino -> factor .)
    MENOS           reduce using rule 65 (termino -> factor .)
    MAYORQUE        reduce using rule 65 (termino -> factor .)
    MENORQUE        reduce using rule 65 (termino -> factor .)
    MAYORIGUAL      reduce using rule 65 (termino -> factor .)
    MENORIGUAL      reduce using rule 65 (termino -> factor .)
    IGUALIGUAL      reduce using rule 65 (termino -> factor .)
    DIFERENTE       reduce using rule 65 (termino -> factor .)
    AND             reduce using rule 65 (termino -> factor .)
    OR              reduce using rule 65 (termino -> factor .)
    PUNTOCOMA       reduce using rule 65 (termino -> factor .)
    COMA            reduce using rule 65 (termino -> factor .)
    PARENT_C        reduce using rule 65 (termino -> factor .)
    CORCHETE_C      reduce using rule 65 (termino -> factor .)
    HASTA           reduce using rule 65 (termino -> factor .)
    HACER           reduce using rule 65 (termino -> factor .)
    POR             shift and go to state 136
    DIV             shift and go to state 137


state 101

    (68) factor -> PARENT_A . expresion PARENT_C
    (50) expresion -> . t_expresion
    (51) expresion -> . t_expresion OR expresion
    (52) t_expresion -> . g_expresion
    (53) t_expresion -> . g_expresion AND t_expresion
    (54) g_expresion -> . m_expresion
    (55) g_expresion -> . m_expresion op_logicos m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    expresion                      shift and go to state 138
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 102

    (69) factor -> CTE_I .

    POR             reduce using rule 69 (factor -> CTE_I .)
    DIV             reduce using rule 69 (factor -> CTE_I .)
    MAS             reduce using rule 69 (factor -> CTE_I .)
    MENOS           reduce using rule 69 (factor -> CTE_I .)
    MAYORQUE        reduce using rule 69 (factor -> CTE_I .)
    MENORQUE        reduce using rule 69 (factor -> CTE_I .)
    MAYORIGUAL      reduce using rule 69 (factor -> CTE_I .)
    MENORIGUAL      reduce using rule 69 (factor -> CTE_I .)
    IGUALIGUAL      reduce using rule 69 (factor -> CTE_I .)
    DIFERENTE       reduce using rule 69 (factor -> CTE_I .)
    AND             reduce using rule 69 (factor -> CTE_I .)
    OR              reduce using rule 69 (factor -> CTE_I .)
    PUNTOCOMA       reduce using rule 69 (factor -> CTE_I .)
    COMA            reduce using rule 69 (factor -> CTE_I .)
    PARENT_C        reduce using rule 69 (factor -> CTE_I .)
    CORCHETE_C      reduce using rule 69 (factor -> CTE_I .)
    HASTA           reduce using rule 69 (factor -> CTE_I .)
    HACER           reduce using rule 69 (factor -> CTE_I .)


state 103

    (70) factor -> CTE_F .

    POR             reduce using rule 70 (factor -> CTE_F .)
    DIV             reduce using rule 70 (factor -> CTE_F .)
    MAS             reduce using rule 70 (factor -> CTE_F .)
    MENOS           reduce using rule 70 (factor -> CTE_F .)
    MAYORQUE        reduce using rule 70 (factor -> CTE_F .)
    MENORQUE        reduce using rule 70 (factor -> CTE_F .)
    MAYORIGUAL      reduce using rule 70 (factor -> CTE_F .)
    MENORIGUAL      reduce using rule 70 (factor -> CTE_F .)
    IGUALIGUAL      reduce using rule 70 (factor -> CTE_F .)
    DIFERENTE       reduce using rule 70 (factor -> CTE_F .)
    AND             reduce using rule 70 (factor -> CTE_F .)
    OR              reduce using rule 70 (factor -> CTE_F .)
    PUNTOCOMA       reduce using rule 70 (factor -> CTE_F .)
    COMA            reduce using rule 70 (factor -> CTE_F .)
    PARENT_C        reduce using rule 70 (factor -> CTE_F .)
    CORCHETE_C      reduce using rule 70 (factor -> CTE_F .)
    HASTA           reduce using rule 70 (factor -> CTE_F .)
    HACER           reduce using rule 70 (factor -> CTE_F .)


state 104

    (71) factor -> CTE_CH .

    POR             reduce using rule 71 (factor -> CTE_CH .)
    DIV             reduce using rule 71 (factor -> CTE_CH .)
    MAS             reduce using rule 71 (factor -> CTE_CH .)
    MENOS           reduce using rule 71 (factor -> CTE_CH .)
    MAYORQUE        reduce using rule 71 (factor -> CTE_CH .)
    MENORQUE        reduce using rule 71 (factor -> CTE_CH .)
    MAYORIGUAL      reduce using rule 71 (factor -> CTE_CH .)
    MENORIGUAL      reduce using rule 71 (factor -> CTE_CH .)
    IGUALIGUAL      reduce using rule 71 (factor -> CTE_CH .)
    DIFERENTE       reduce using rule 71 (factor -> CTE_CH .)
    AND             reduce using rule 71 (factor -> CTE_CH .)
    OR              reduce using rule 71 (factor -> CTE_CH .)
    PUNTOCOMA       reduce using rule 71 (factor -> CTE_CH .)
    COMA            reduce using rule 71 (factor -> CTE_CH .)
    PARENT_C        reduce using rule 71 (factor -> CTE_CH .)
    CORCHETE_C      reduce using rule 71 (factor -> CTE_CH .)
    HASTA           reduce using rule 71 (factor -> CTE_CH .)
    HACER           reduce using rule 71 (factor -> CTE_CH .)


state 105

    (73) factor -> llamada .

    POR             reduce using rule 73 (factor -> llamada .)
    DIV             reduce using rule 73 (factor -> llamada .)
    MAS             reduce using rule 73 (factor -> llamada .)
    MENOS           reduce using rule 73 (factor -> llamada .)
    MAYORQUE        reduce using rule 73 (factor -> llamada .)
    MENORQUE        reduce using rule 73 (factor -> llamada .)
    MAYORIGUAL      reduce using rule 73 (factor -> llamada .)
    MENORIGUAL      reduce using rule 73 (factor -> llamada .)
    IGUALIGUAL      reduce using rule 73 (factor -> llamada .)
    DIFERENTE       reduce using rule 73 (factor -> llamada .)
    AND             reduce using rule 73 (factor -> llamada .)
    OR              reduce using rule 73 (factor -> llamada .)
    PUNTOCOMA       reduce using rule 73 (factor -> llamada .)
    COMA            reduce using rule 73 (factor -> llamada .)
    PARENT_C        reduce using rule 73 (factor -> llamada .)
    CORCHETE_C      reduce using rule 73 (factor -> llamada .)
    HASTA           reduce using rule 73 (factor -> llamada .)
    HACER           reduce using rule 73 (factor -> llamada .)


state 106

    (18) variable -> ID .
    (19) variable -> ID . dim
    (46) llamada -> ID . PARENT_A PARENT_C
    (47) llamada -> ID . PARENT_A expresiones PARENT_C
    (22) dim -> . CORCHETE_A expresion CORCHETE_C

    POR             reduce using rule 18 (variable -> ID .)
    DIV             reduce using rule 18 (variable -> ID .)
    MAS             reduce using rule 18 (variable -> ID .)
    MENOS           reduce using rule 18 (variable -> ID .)
    MAYORQUE        reduce using rule 18 (variable -> ID .)
    MENORQUE        reduce using rule 18 (variable -> ID .)
    MAYORIGUAL      reduce using rule 18 (variable -> ID .)
    MENORIGUAL      reduce using rule 18 (variable -> ID .)
    IGUALIGUAL      reduce using rule 18 (variable -> ID .)
    DIFERENTE       reduce using rule 18 (variable -> ID .)
    AND             reduce using rule 18 (variable -> ID .)
    OR              reduce using rule 18 (variable -> ID .)
    PUNTOCOMA       reduce using rule 18 (variable -> ID .)
    COMA            reduce using rule 18 (variable -> ID .)
    PARENT_C        reduce using rule 18 (variable -> ID .)
    CORCHETE_C      reduce using rule 18 (variable -> ID .)
    HASTA           reduce using rule 18 (variable -> ID .)
    HACER           reduce using rule 18 (variable -> ID .)
    PARENT_A        shift and go to state 75
    CORCHETE_A      shift and go to state 77

    dim                            shift and go to state 76

state 107

    (46) llamada -> ID PARENT_A PARENT_C .

    PUNTOCOMA       reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    POR             reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    DIV             reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    MAS             reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    MENOS           reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    MAYORQUE        reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    MENORQUE        reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    MAYORIGUAL      reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    MENORIGUAL      reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    IGUALIGUAL      reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    DIFERENTE       reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    AND             reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    OR              reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    COMA            reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    PARENT_C        reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    CORCHETE_C      reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    HASTA           reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)
    HACER           reduce using rule 46 (llamada -> ID PARENT_A PARENT_C .)


state 108

    (47) llamada -> ID PARENT_A expresiones . PARENT_C

    PARENT_C        shift and go to state 139


state 109

    (48) expresiones -> expresion .
    (49) expresiones -> expresion . COMA expresion

    PARENT_C        reduce using rule 48 (expresiones -> expresion .)
    COMA            shift and go to state 140


state 110

    (22) dim -> CORCHETE_A expresion . CORCHETE_C

    CORCHETE_C      shift and go to state 141


state 111

    (74) retorno -> REGRESA PARENT_A expresion . PARENT_C

    PARENT_C        shift and go to state 142


state 112

    (75) lectura -> LEER PARENT_A variables . PARENT_C

    PARENT_C        shift and go to state 143


state 113

    (20) variables -> variable .
    (21) variables -> variable . COMA variables

    PARENT_C        reduce using rule 20 (variables -> variable .)
    COMA            shift and go to state 144


state 114

    (76) escritura -> ESCRIBIR PARENT_A escr . PARENT_C

    PARENT_C        shift and go to state 145


state 115

    (79) escr -> escritura_dos .
    (80) escr -> escritura_dos . COMA escr

    PARENT_C        reduce using rule 79 (escr -> escritura_dos .)
    COMA            shift and go to state 146


state 116

    (77) escritura_dos -> CTE_STR .

    COMA            reduce using rule 77 (escritura_dos -> CTE_STR .)
    PARENT_C        reduce using rule 77 (escritura_dos -> CTE_STR .)


state 117

    (78) escritura_dos -> expresion .

    COMA            reduce using rule 78 (escritura_dos -> expresion .)
    PARENT_C        reduce using rule 78 (escritura_dos -> expresion .)


state 118

    (84) else -> SINO LLAVE_A . estatutos_dos LLAVE_C
    (43) estatutos_dos -> . estatutos
    (44) estatutos_dos -> . estatutos estatutos_dos
    (35) estatutos -> . asignacion PUNTOCOMA
    (36) estatutos -> . llamada PUNTOCOMA
    (37) estatutos -> . retorno PUNTOCOMA
    (38) estatutos -> . lectura PUNTOCOMA
    (39) estatutos -> . escritura PUNTOCOMA
    (40) estatutos -> . decision
    (41) estatutos -> . ciclo_for
    (42) estatutos -> . ciclo_while
    (45) asignacion -> . variable IGUAL expresion
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C
    (74) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (75) lectura -> . LEER PARENT_A variables PARENT_C
    (76) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (81) decision -> . if
    (82) decision -> . if else
    (86) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (85) ciclo_while -> . MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
    (18) variable -> . ID
    (19) variable -> . ID dim
    (83) if -> . SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 52
    REGRESA         shift and go to state 53
    LEER            shift and go to state 54
    ESCRIBIR        shift and go to state 55
    DESDE           shift and go to state 57
    MIENTRAS        shift and go to state 58
    SI              shift and go to state 59

    estatutos_dos                  shift and go to state 147
    estatutos                      shift and go to state 42
    asignacion                     shift and go to state 43
    llamada                        shift and go to state 44
    retorno                        shift and go to state 45
    lectura                        shift and go to state 46
    escritura                      shift and go to state 47
    decision                       shift and go to state 48
    ciclo_for                      shift and go to state 49
    ciclo_while                    shift and go to state 50
    variable                       shift and go to state 51
    if                             shift and go to state 56

state 119

    (86) ciclo_for -> DESDE variable IGUAL . expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (50) expresion -> . t_expresion
    (51) expresion -> . t_expresion OR expresion
    (52) t_expresion -> . g_expresion
    (53) t_expresion -> . g_expresion AND t_expresion
    (54) g_expresion -> . m_expresion
    (55) g_expresion -> . m_expresion op_logicos m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    variable                       shift and go to state 94
    expresion                      shift and go to state 148
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    llamada                        shift and go to state 105

state 120

    (85) ciclo_while -> MIENTRAS PARENT_A expresion . PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C

    PARENT_C        shift and go to state 149


state 121

    (83) if -> SI PARENT_A expresion . PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    PARENT_C        shift and go to state 150


state 122

    (30) var_funcs -> dec_vars dec_est .

    FUNCION         reduce using rule 30 (var_funcs -> dec_vars dec_est .)
    PRINCIPAL       reduce using rule 30 (var_funcs -> dec_vars dec_est .)


state 123

    (28) func_dos -> PARENT_A parametros PARENT_C var_funcs .

    FUNCION         reduce using rule 28 (func_dos -> PARENT_A parametros PARENT_C var_funcs .)
    PRINCIPAL       reduce using rule 28 (func_dos -> PARENT_A parametros PARENT_C var_funcs .)


state 124

    (32) parametros -> tipo_simple variable COMA . parametros
    (31) parametros -> . tipo_simple variable
    (32) parametros -> . tipo_simple variable COMA parametros
    (10) tipo_simple -> . INT
    (11) tipo_simple -> . FLOAT
    (12) tipo_simple -> . CHAR

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    tipo_simple                    shift and go to state 66
    parametros                     shift and go to state 151

state 125

    (51) expresion -> t_expresion OR . expresion
    (50) expresion -> . t_expresion
    (51) expresion -> . t_expresion OR expresion
    (52) t_expresion -> . g_expresion
    (53) t_expresion -> . g_expresion AND t_expresion
    (54) g_expresion -> . m_expresion
    (55) g_expresion -> . m_expresion op_logicos m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    t_expresion                    shift and go to state 96
    expresion                      shift and go to state 152
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 126

    (53) t_expresion -> g_expresion AND . t_expresion
    (52) t_expresion -> . g_expresion
    (53) t_expresion -> . g_expresion AND t_expresion
    (54) g_expresion -> . m_expresion
    (55) g_expresion -> . m_expresion op_logicos m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    g_expresion                    shift and go to state 97
    t_expresion                    shift and go to state 153
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 127

    (55) g_expresion -> m_expresion op_logicos . m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    m_expresion                    shift and go to state 154
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 128

    (56) op_logicos -> MAYORQUE .

    PARENT_A        reduce using rule 56 (op_logicos -> MAYORQUE .)
    CTE_I           reduce using rule 56 (op_logicos -> MAYORQUE .)
    CTE_F           reduce using rule 56 (op_logicos -> MAYORQUE .)
    CTE_CH          reduce using rule 56 (op_logicos -> MAYORQUE .)
    ID              reduce using rule 56 (op_logicos -> MAYORQUE .)


state 129

    (57) op_logicos -> MENORQUE .

    PARENT_A        reduce using rule 57 (op_logicos -> MENORQUE .)
    CTE_I           reduce using rule 57 (op_logicos -> MENORQUE .)
    CTE_F           reduce using rule 57 (op_logicos -> MENORQUE .)
    CTE_CH          reduce using rule 57 (op_logicos -> MENORQUE .)
    ID              reduce using rule 57 (op_logicos -> MENORQUE .)


state 130

    (58) op_logicos -> MAYORIGUAL .

    PARENT_A        reduce using rule 58 (op_logicos -> MAYORIGUAL .)
    CTE_I           reduce using rule 58 (op_logicos -> MAYORIGUAL .)
    CTE_F           reduce using rule 58 (op_logicos -> MAYORIGUAL .)
    CTE_CH          reduce using rule 58 (op_logicos -> MAYORIGUAL .)
    ID              reduce using rule 58 (op_logicos -> MAYORIGUAL .)


state 131

    (59) op_logicos -> MENORIGUAL .

    PARENT_A        reduce using rule 59 (op_logicos -> MENORIGUAL .)
    CTE_I           reduce using rule 59 (op_logicos -> MENORIGUAL .)
    CTE_F           reduce using rule 59 (op_logicos -> MENORIGUAL .)
    CTE_CH          reduce using rule 59 (op_logicos -> MENORIGUAL .)
    ID              reduce using rule 59 (op_logicos -> MENORIGUAL .)


state 132

    (60) op_logicos -> IGUALIGUAL .

    PARENT_A        reduce using rule 60 (op_logicos -> IGUALIGUAL .)
    CTE_I           reduce using rule 60 (op_logicos -> IGUALIGUAL .)
    CTE_F           reduce using rule 60 (op_logicos -> IGUALIGUAL .)
    CTE_CH          reduce using rule 60 (op_logicos -> IGUALIGUAL .)
    ID              reduce using rule 60 (op_logicos -> IGUALIGUAL .)


state 133

    (61) op_logicos -> DIFERENTE .

    PARENT_A        reduce using rule 61 (op_logicos -> DIFERENTE .)
    CTE_I           reduce using rule 61 (op_logicos -> DIFERENTE .)
    CTE_F           reduce using rule 61 (op_logicos -> DIFERENTE .)
    CTE_CH          reduce using rule 61 (op_logicos -> DIFERENTE .)
    ID              reduce using rule 61 (op_logicos -> DIFERENTE .)


state 134

    (63) m_expresion -> termino MAS . m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    termino                        shift and go to state 99
    m_expresion                    shift and go to state 155
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 135

    (64) m_expresion -> termino MENOS . m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    termino                        shift and go to state 99
    m_expresion                    shift and go to state 156
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 136

    (66) termino -> factor POR . termino
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    factor                         shift and go to state 100
    termino                        shift and go to state 157
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 137

    (67) termino -> factor DIV . termino
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    factor                         shift and go to state 100
    termino                        shift and go to state 158
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 138

    (68) factor -> PARENT_A expresion . PARENT_C

    PARENT_C        shift and go to state 159


state 139

    (47) llamada -> ID PARENT_A expresiones PARENT_C .

    PUNTOCOMA       reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    POR             reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    DIV             reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MAS             reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MENOS           reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MAYORQUE        reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MENORQUE        reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MAYORIGUAL      reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MENORIGUAL      reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    IGUALIGUAL      reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    DIFERENTE       reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    AND             reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    OR              reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    COMA            reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    PARENT_C        reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    CORCHETE_C      reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    HASTA           reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)
    HACER           reduce using rule 47 (llamada -> ID PARENT_A expresiones PARENT_C .)


state 140

    (49) expresiones -> expresion COMA . expresion
    (50) expresion -> . t_expresion
    (51) expresion -> . t_expresion OR expresion
    (52) t_expresion -> . g_expresion
    (53) t_expresion -> . g_expresion AND t_expresion
    (54) g_expresion -> . m_expresion
    (55) g_expresion -> . m_expresion op_logicos m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    expresion                      shift and go to state 160
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 141

    (22) dim -> CORCHETE_A expresion CORCHETE_C .

    IGUAL           reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    COMA            reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    PARENT_C        reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    POR             reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    DIV             reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MAS             reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MENOS           reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MAYORQUE        reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MENORQUE        reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MAYORIGUAL      reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MENORIGUAL      reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    IGUALIGUAL      reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    DIFERENTE       reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    AND             reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    OR              reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    PUNTOCOMA       reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    CORCHETE_C      reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    HASTA           reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)
    HACER           reduce using rule 22 (dim -> CORCHETE_A expresion CORCHETE_C .)


state 142

    (74) retorno -> REGRESA PARENT_A expresion PARENT_C .

    PUNTOCOMA       reduce using rule 74 (retorno -> REGRESA PARENT_A expresion PARENT_C .)


state 143

    (75) lectura -> LEER PARENT_A variables PARENT_C .

    PUNTOCOMA       reduce using rule 75 (lectura -> LEER PARENT_A variables PARENT_C .)


state 144

    (21) variables -> variable COMA . variables
    (20) variables -> . variable
    (21) variables -> . variable COMA variables
    (18) variable -> . ID
    (19) variable -> . ID dim

    ID              shift and go to state 84

    variable                       shift and go to state 113
    variables                      shift and go to state 161

state 145

    (76) escritura -> ESCRIBIR PARENT_A escr PARENT_C .

    PUNTOCOMA       reduce using rule 76 (escritura -> ESCRIBIR PARENT_A escr PARENT_C .)


state 146

    (80) escr -> escritura_dos COMA . escr
    (79) escr -> . escritura_dos
    (80) escr -> . escritura_dos COMA escr
    (77) escritura_dos -> . CTE_STR
    (78) escritura_dos -> . expresion
    (50) expresion -> . t_expresion
    (51) expresion -> . t_expresion OR expresion
    (52) t_expresion -> . g_expresion
    (53) t_expresion -> . g_expresion AND t_expresion
    (54) g_expresion -> . m_expresion
    (55) g_expresion -> . m_expresion op_logicos m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    CTE_STR         shift and go to state 116
    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    escritura_dos                  shift and go to state 115
    escr                           shift and go to state 162
    expresion                      shift and go to state 117
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 147

    (84) else -> SINO LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 163


state 148

    (86) ciclo_for -> DESDE variable IGUAL expresion . HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C

    HASTA           shift and go to state 164


state 149

    (85) ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C . HAZ LLAVE_A estatutos_dos LLAVE_C

    HAZ             shift and go to state 165


state 150

    (83) if -> SI PARENT_A expresion PARENT_C . ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ENTONCES        shift and go to state 166


state 151

    (32) parametros -> tipo_simple variable COMA parametros .

    PARENT_C        reduce using rule 32 (parametros -> tipo_simple variable COMA parametros .)


state 152

    (51) expresion -> t_expresion OR expresion .

    PUNTOCOMA       reduce using rule 51 (expresion -> t_expresion OR expresion .)
    COMA            reduce using rule 51 (expresion -> t_expresion OR expresion .)
    PARENT_C        reduce using rule 51 (expresion -> t_expresion OR expresion .)
    CORCHETE_C      reduce using rule 51 (expresion -> t_expresion OR expresion .)
    HASTA           reduce using rule 51 (expresion -> t_expresion OR expresion .)
    HACER           reduce using rule 51 (expresion -> t_expresion OR expresion .)


state 153

    (53) t_expresion -> g_expresion AND t_expresion .

    OR              reduce using rule 53 (t_expresion -> g_expresion AND t_expresion .)
    PUNTOCOMA       reduce using rule 53 (t_expresion -> g_expresion AND t_expresion .)
    COMA            reduce using rule 53 (t_expresion -> g_expresion AND t_expresion .)
    PARENT_C        reduce using rule 53 (t_expresion -> g_expresion AND t_expresion .)
    CORCHETE_C      reduce using rule 53 (t_expresion -> g_expresion AND t_expresion .)
    HASTA           reduce using rule 53 (t_expresion -> g_expresion AND t_expresion .)
    HACER           reduce using rule 53 (t_expresion -> g_expresion AND t_expresion .)


state 154

    (55) g_expresion -> m_expresion op_logicos m_expresion .

    AND             reduce using rule 55 (g_expresion -> m_expresion op_logicos m_expresion .)
    OR              reduce using rule 55 (g_expresion -> m_expresion op_logicos m_expresion .)
    PUNTOCOMA       reduce using rule 55 (g_expresion -> m_expresion op_logicos m_expresion .)
    COMA            reduce using rule 55 (g_expresion -> m_expresion op_logicos m_expresion .)
    PARENT_C        reduce using rule 55 (g_expresion -> m_expresion op_logicos m_expresion .)
    CORCHETE_C      reduce using rule 55 (g_expresion -> m_expresion op_logicos m_expresion .)
    HASTA           reduce using rule 55 (g_expresion -> m_expresion op_logicos m_expresion .)
    HACER           reduce using rule 55 (g_expresion -> m_expresion op_logicos m_expresion .)


state 155

    (63) m_expresion -> termino MAS m_expresion .

    MAYORQUE        reduce using rule 63 (m_expresion -> termino MAS m_expresion .)
    MENORQUE        reduce using rule 63 (m_expresion -> termino MAS m_expresion .)
    MAYORIGUAL      reduce using rule 63 (m_expresion -> termino MAS m_expresion .)
    MENORIGUAL      reduce using rule 63 (m_expresion -> termino MAS m_expresion .)
    IGUALIGUAL      reduce using rule 63 (m_expresion -> termino MAS m_expresion .)
    DIFERENTE       reduce using rule 63 (m_expresion -> termino MAS m_expresion .)
    AND             reduce using rule 63 (m_expresion -> termino MAS m_expresion .)
    OR              reduce using rule 63 (m_expresion -> termino MAS m_expresion .)
    PUNTOCOMA       reduce using rule 63 (m_expresion -> termino MAS m_expresion .)
    COMA            reduce using rule 63 (m_expresion -> termino MAS m_expresion .)
    PARENT_C        reduce using rule 63 (m_expresion -> termino MAS m_expresion .)
    CORCHETE_C      reduce using rule 63 (m_expresion -> termino MAS m_expresion .)
    HASTA           reduce using rule 63 (m_expresion -> termino MAS m_expresion .)
    HACER           reduce using rule 63 (m_expresion -> termino MAS m_expresion .)


state 156

    (64) m_expresion -> termino MENOS m_expresion .

    MAYORQUE        reduce using rule 64 (m_expresion -> termino MENOS m_expresion .)
    MENORQUE        reduce using rule 64 (m_expresion -> termino MENOS m_expresion .)
    MAYORIGUAL      reduce using rule 64 (m_expresion -> termino MENOS m_expresion .)
    MENORIGUAL      reduce using rule 64 (m_expresion -> termino MENOS m_expresion .)
    IGUALIGUAL      reduce using rule 64 (m_expresion -> termino MENOS m_expresion .)
    DIFERENTE       reduce using rule 64 (m_expresion -> termino MENOS m_expresion .)
    AND             reduce using rule 64 (m_expresion -> termino MENOS m_expresion .)
    OR              reduce using rule 64 (m_expresion -> termino MENOS m_expresion .)
    PUNTOCOMA       reduce using rule 64 (m_expresion -> termino MENOS m_expresion .)
    COMA            reduce using rule 64 (m_expresion -> termino MENOS m_expresion .)
    PARENT_C        reduce using rule 64 (m_expresion -> termino MENOS m_expresion .)
    CORCHETE_C      reduce using rule 64 (m_expresion -> termino MENOS m_expresion .)
    HASTA           reduce using rule 64 (m_expresion -> termino MENOS m_expresion .)
    HACER           reduce using rule 64 (m_expresion -> termino MENOS m_expresion .)


state 157

    (66) termino -> factor POR termino .

    MAS             reduce using rule 66 (termino -> factor POR termino .)
    MENOS           reduce using rule 66 (termino -> factor POR termino .)
    MAYORQUE        reduce using rule 66 (termino -> factor POR termino .)
    MENORQUE        reduce using rule 66 (termino -> factor POR termino .)
    MAYORIGUAL      reduce using rule 66 (termino -> factor POR termino .)
    MENORIGUAL      reduce using rule 66 (termino -> factor POR termino .)
    IGUALIGUAL      reduce using rule 66 (termino -> factor POR termino .)
    DIFERENTE       reduce using rule 66 (termino -> factor POR termino .)
    AND             reduce using rule 66 (termino -> factor POR termino .)
    OR              reduce using rule 66 (termino -> factor POR termino .)
    PUNTOCOMA       reduce using rule 66 (termino -> factor POR termino .)
    COMA            reduce using rule 66 (termino -> factor POR termino .)
    PARENT_C        reduce using rule 66 (termino -> factor POR termino .)
    CORCHETE_C      reduce using rule 66 (termino -> factor POR termino .)
    HASTA           reduce using rule 66 (termino -> factor POR termino .)
    HACER           reduce using rule 66 (termino -> factor POR termino .)


state 158

    (67) termino -> factor DIV termino .

    MAS             reduce using rule 67 (termino -> factor DIV termino .)
    MENOS           reduce using rule 67 (termino -> factor DIV termino .)
    MAYORQUE        reduce using rule 67 (termino -> factor DIV termino .)
    MENORQUE        reduce using rule 67 (termino -> factor DIV termino .)
    MAYORIGUAL      reduce using rule 67 (termino -> factor DIV termino .)
    MENORIGUAL      reduce using rule 67 (termino -> factor DIV termino .)
    IGUALIGUAL      reduce using rule 67 (termino -> factor DIV termino .)
    DIFERENTE       reduce using rule 67 (termino -> factor DIV termino .)
    AND             reduce using rule 67 (termino -> factor DIV termino .)
    OR              reduce using rule 67 (termino -> factor DIV termino .)
    PUNTOCOMA       reduce using rule 67 (termino -> factor DIV termino .)
    COMA            reduce using rule 67 (termino -> factor DIV termino .)
    PARENT_C        reduce using rule 67 (termino -> factor DIV termino .)
    CORCHETE_C      reduce using rule 67 (termino -> factor DIV termino .)
    HASTA           reduce using rule 67 (termino -> factor DIV termino .)
    HACER           reduce using rule 67 (termino -> factor DIV termino .)


state 159

    (68) factor -> PARENT_A expresion PARENT_C .

    POR             reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    DIV             reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    MAS             reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    MENOS           reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    MAYORQUE        reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    MENORQUE        reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    MAYORIGUAL      reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    MENORIGUAL      reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    IGUALIGUAL      reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    DIFERENTE       reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    AND             reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    OR              reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    PUNTOCOMA       reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    COMA            reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    PARENT_C        reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    CORCHETE_C      reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    HASTA           reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)
    HACER           reduce using rule 68 (factor -> PARENT_A expresion PARENT_C .)


state 160

    (49) expresiones -> expresion COMA expresion .

    PARENT_C        reduce using rule 49 (expresiones -> expresion COMA expresion .)


state 161

    (21) variables -> variable COMA variables .

    PARENT_C        reduce using rule 21 (variables -> variable COMA variables .)


state 162

    (80) escr -> escritura_dos COMA escr .

    PARENT_C        reduce using rule 80 (escr -> escritura_dos COMA escr .)


state 163

    (84) else -> SINO LLAVE_A estatutos_dos LLAVE_C .

    ID              reduce using rule 84 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 84 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 84 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 84 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 84 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 84 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 84 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 84 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)


state 164

    (86) ciclo_for -> DESDE variable IGUAL expresion HASTA . expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (50) expresion -> . t_expresion
    (51) expresion -> . t_expresion OR expresion
    (52) t_expresion -> . g_expresion
    (53) t_expresion -> . g_expresion AND t_expresion
    (54) g_expresion -> . m_expresion
    (55) g_expresion -> . m_expresion op_logicos m_expresion
    (62) m_expresion -> . termino
    (63) m_expresion -> . termino MAS m_expresion
    (64) m_expresion -> . termino MENOS m_expresion
    (65) termino -> . factor
    (66) termino -> . factor POR termino
    (67) termino -> . factor DIV termino
    (68) factor -> . PARENT_A expresion PARENT_C
    (69) factor -> . CTE_I
    (70) factor -> . CTE_F
    (71) factor -> . CTE_CH
    (72) factor -> . variable
    (73) factor -> . llamada
    (18) variable -> . ID
    (19) variable -> . ID dim
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    variable                       shift and go to state 94
    expresion                      shift and go to state 167
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    llamada                        shift and go to state 105

state 165

    (85) ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 168


state 166

    (83) if -> SI PARENT_A expresion PARENT_C ENTONCES . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 169


state 167

    (86) ciclo_for -> DESDE variable IGUAL expresion HASTA expresion . HACER LLAVE_A estatutos_dos LLAVE_C

    HACER           shift and go to state 170


state 168

    (85) ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A . estatutos_dos LLAVE_C
    (43) estatutos_dos -> . estatutos
    (44) estatutos_dos -> . estatutos estatutos_dos
    (35) estatutos -> . asignacion PUNTOCOMA
    (36) estatutos -> . llamada PUNTOCOMA
    (37) estatutos -> . retorno PUNTOCOMA
    (38) estatutos -> . lectura PUNTOCOMA
    (39) estatutos -> . escritura PUNTOCOMA
    (40) estatutos -> . decision
    (41) estatutos -> . ciclo_for
    (42) estatutos -> . ciclo_while
    (45) asignacion -> . variable IGUAL expresion
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C
    (74) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (75) lectura -> . LEER PARENT_A variables PARENT_C
    (76) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (81) decision -> . if
    (82) decision -> . if else
    (86) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (85) ciclo_while -> . MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
    (18) variable -> . ID
    (19) variable -> . ID dim
    (83) if -> . SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 52
    REGRESA         shift and go to state 53
    LEER            shift and go to state 54
    ESCRIBIR        shift and go to state 55
    DESDE           shift and go to state 57
    MIENTRAS        shift and go to state 58
    SI              shift and go to state 59

    estatutos_dos                  shift and go to state 171
    estatutos                      shift and go to state 42
    asignacion                     shift and go to state 43
    llamada                        shift and go to state 44
    retorno                        shift and go to state 45
    lectura                        shift and go to state 46
    escritura                      shift and go to state 47
    decision                       shift and go to state 48
    ciclo_for                      shift and go to state 49
    ciclo_while                    shift and go to state 50
    variable                       shift and go to state 51
    if                             shift and go to state 56

state 169

    (83) if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A . estatutos_dos LLAVE_C
    (43) estatutos_dos -> . estatutos
    (44) estatutos_dos -> . estatutos estatutos_dos
    (35) estatutos -> . asignacion PUNTOCOMA
    (36) estatutos -> . llamada PUNTOCOMA
    (37) estatutos -> . retorno PUNTOCOMA
    (38) estatutos -> . lectura PUNTOCOMA
    (39) estatutos -> . escritura PUNTOCOMA
    (40) estatutos -> . decision
    (41) estatutos -> . ciclo_for
    (42) estatutos -> . ciclo_while
    (45) asignacion -> . variable IGUAL expresion
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C
    (74) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (75) lectura -> . LEER PARENT_A variables PARENT_C
    (76) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (81) decision -> . if
    (82) decision -> . if else
    (86) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (85) ciclo_while -> . MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
    (18) variable -> . ID
    (19) variable -> . ID dim
    (83) if -> . SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 52
    REGRESA         shift and go to state 53
    LEER            shift and go to state 54
    ESCRIBIR        shift and go to state 55
    DESDE           shift and go to state 57
    MIENTRAS        shift and go to state 58
    SI              shift and go to state 59

    estatutos_dos                  shift and go to state 172
    estatutos                      shift and go to state 42
    asignacion                     shift and go to state 43
    llamada                        shift and go to state 44
    retorno                        shift and go to state 45
    lectura                        shift and go to state 46
    escritura                      shift and go to state 47
    decision                       shift and go to state 48
    ciclo_for                      shift and go to state 49
    ciclo_while                    shift and go to state 50
    variable                       shift and go to state 51
    if                             shift and go to state 56

state 170

    (86) ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 173


state 171

    (85) ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 174


state 172

    (83) if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 175


state 173

    (86) ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A . estatutos_dos LLAVE_C
    (43) estatutos_dos -> . estatutos
    (44) estatutos_dos -> . estatutos estatutos_dos
    (35) estatutos -> . asignacion PUNTOCOMA
    (36) estatutos -> . llamada PUNTOCOMA
    (37) estatutos -> . retorno PUNTOCOMA
    (38) estatutos -> . lectura PUNTOCOMA
    (39) estatutos -> . escritura PUNTOCOMA
    (40) estatutos -> . decision
    (41) estatutos -> . ciclo_for
    (42) estatutos -> . ciclo_while
    (45) asignacion -> . variable IGUAL expresion
    (46) llamada -> . ID PARENT_A PARENT_C
    (47) llamada -> . ID PARENT_A expresiones PARENT_C
    (74) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (75) lectura -> . LEER PARENT_A variables PARENT_C
    (76) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (81) decision -> . if
    (82) decision -> . if else
    (86) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (85) ciclo_while -> . MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
    (18) variable -> . ID
    (19) variable -> . ID dim
    (83) if -> . SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 52
    REGRESA         shift and go to state 53
    LEER            shift and go to state 54
    ESCRIBIR        shift and go to state 55
    DESDE           shift and go to state 57
    MIENTRAS        shift and go to state 58
    SI              shift and go to state 59

    variable                       shift and go to state 51
    estatutos_dos                  shift and go to state 176
    estatutos                      shift and go to state 42
    asignacion                     shift and go to state 43
    llamada                        shift and go to state 44
    retorno                        shift and go to state 45
    lectura                        shift and go to state 46
    escritura                      shift and go to state 47
    decision                       shift and go to state 48
    ciclo_for                      shift and go to state 49
    ciclo_while                    shift and go to state 50
    if                             shift and go to state 56

state 174

    (85) ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .

    ID              reduce using rule 85 (ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 85 (ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 85 (ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 85 (ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 85 (ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 85 (ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 85 (ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 85 (ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .)


state 175

    (83) if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .

    SINO            reduce using rule 83 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    ID              reduce using rule 83 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 83 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 83 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 83 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 83 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 83 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 83 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 83 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)


state 176

    (86) ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 177


state 177

    (86) ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .

    ID              reduce using rule 86 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 86 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 86 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 86 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 86 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 86 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 86 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 86 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)

