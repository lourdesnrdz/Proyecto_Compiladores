Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID PUNTOCOMA prog r_end_prog
Rule 2     r_end_prog -> <empty>
Rule 3     prog -> r_genera_goto_main main
Rule 4     prog -> r_genera_goto_main dec_vars dec_funciones main
Rule 5     prog -> r_genera_goto_main dec_vars main
Rule 6     prog -> r_genera_goto_main dec_funciones main
Rule 7     r_genera_goto_main -> <empty>
Rule 8     main -> PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est
Rule 9     actualiza_func_name -> <empty>
Rule 10    dec_vars -> VAR vars save_vars
Rule 11    vars -> tipo_simple ids_simple PUNTOCOMA
Rule 12    vars -> tipo_simple ids_simple PUNTOCOMA vars
Rule 13    save_vars -> <empty>
Rule 14    tipo_simple -> INT
Rule 15    tipo_simple -> FLOAT
Rule 16    tipo_simple -> CHAR
Rule 17    ids_simple -> ID save_vars_name
Rule 18    ids_simple -> ID save_vars_name dimension
Rule 19    ids_simple -> ID save_vars_name COMA ids_simple
Rule 20    ids_simple -> ID save_vars_name dimension COMA ids_simple
Rule 21    save_vars_name -> <empty>
Rule 22    dimension -> CORCHETE_A CTE_I CORCHETE_C
Rule 23    variable -> ID r_push_id
Rule 24    variable -> ID r_push_id dim
Rule 25    r_push_id -> <empty>
Rule 26    variables -> variable r_generate_quad_leer
Rule 27    variables -> variable r_generate_quad_leer COMA variables
Rule 28    dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr
Rule 29    r_is_array -> <empty>
Rule 30    r_verify_dim -> <empty>
Rule 31    r_sum_addr -> <empty>
Rule 32    dec_funciones -> funcion r_generate_endfunc
Rule 33    dec_funciones -> funcion r_generate_endfunc dec_funciones
Rule 34    r_generate_endfunc -> <empty>
Rule 35    funcion -> FUNCION tipo_simple ID create_func_table func_dos
Rule 36    funcion -> FUNCION VOID func_type_void ID create_func_table func_dos
Rule 37    func_type_void -> <empty>
Rule 38    create_func_table -> <empty>
Rule 39    func_dos -> PARENT_A PARENT_C var_funcs
Rule 40    func_dos -> PARENT_A parametros PARENT_C save_params var_funcs
Rule 41    save_params -> <empty>
Rule 42    var_funcs -> dec_est
Rule 43    var_funcs -> dec_vars dec_est
Rule 44    parametros -> tipo_simple ID save_params_list
Rule 45    parametros -> tipo_simple ID save_params_list COMA parametros
Rule 46    save_params_list -> <empty>
Rule 47    dec_est -> LLAVE_A LLAVE_C
Rule 48    dec_est -> LLAVE_A estatutos_dos LLAVE_C
Rule 49    estatutos -> asignacion PUNTOCOMA
Rule 50    estatutos -> llamada PUNTOCOMA
Rule 51    estatutos -> retorno PUNTOCOMA
Rule 52    estatutos -> lectura PUNTOCOMA
Rule 53    estatutos -> escritura PUNTOCOMA
Rule 54    estatutos -> decision
Rule 55    estatutos -> ciclo_for
Rule 56    estatutos -> ciclo_while
Rule 57    estatutos_dos -> estatutos
Rule 58    estatutos_dos -> estatutos estatutos_dos
Rule 59    asignacion -> variable IGUAL r_push_oper expresion r_generate_quad_asig
Rule 60    r_generate_quad_asig -> <empty>
Rule 61    llamada -> ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
Rule 62    llamada -> ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
Rule 63    r_check_func_exists -> <empty>
Rule 64    r_generate_ERA -> <empty>
Rule 65    r_generate_gosub -> <empty>
Rule 66    llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
Rule 67    llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos
Rule 68    r_generate_ERA_dos -> <empty>
Rule 69    r_generate_gosub_dos -> <empty>
Rule 70    expresiones -> expresion r_generate_parameter
Rule 71    expresiones -> expresion r_generate_parameter COMA r_act_param_count expresiones
Rule 72    r_generate_parameter -> <empty>
Rule 73    r_act_param_count -> <empty>
Rule 74    expresion -> t_expresion r_generate_quad_or
Rule 75    expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion
Rule 76    r_generate_quad_or -> <empty>
Rule 77    t_expresion -> g_expresion r_generate_quad_and
Rule 78    t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion
Rule 79    r_generate_quad_and -> <empty>
Rule 80    g_expresion -> m_expresion r_generate_quad_logicos
Rule 81    g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos
Rule 82    r_generate_quad_logicos -> <empty>
Rule 83    op_logicos -> MAYORQUE r_push_oper
Rule 84    op_logicos -> MENORQUE r_push_oper
Rule 85    op_logicos -> MAYORIGUAL r_push_oper
Rule 86    op_logicos -> MENORIGUAL r_push_oper
Rule 87    op_logicos -> IGUALIGUAL r_push_oper
Rule 88    op_logicos -> DIFERENTE r_push_oper
Rule 89    m_expresion -> termino r_generate_quad_masmen
Rule 90    m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion
Rule 91    m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion
Rule 92    termino -> factor r_generate_quad_muldiv
Rule 93    termino -> factor r_generate_quad_muldiv POR r_push_oper termino
Rule 94    termino -> factor r_generate_quad_muldiv DIV r_push_oper termino
Rule 95    r_push_oper -> <empty>
Rule 96    r_generate_quad_masmen -> <empty>
Rule 97    r_generate_quad_muldiv -> <empty>
Rule 98    factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff
Rule 99    factor -> CTE_I r_push_cte_i
Rule 100   factor -> CTE_F r_push_cte_f
Rule 101   factor -> CTE_CH r_push_cte_c
Rule 102   factor -> variable
Rule 103   factor -> llamada_exp
Rule 104   r_push_cte_i -> <empty>
Rule 105   r_push_cte_f -> <empty>
Rule 106   r_push_cte_c -> <empty>
Rule 107   r_push_ff -> <empty>
Rule 108   r_pop_ff -> <empty>
Rule 109   retorno -> REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
Rule 110   r_generate_quad_retorno -> <empty>
Rule 111   lectura -> LEER PARENT_A variables PARENT_C
Rule 112   r_generate_quad_leer -> <empty>
Rule 113   escritura -> ESCRIBIR PARENT_A escr PARENT_C
Rule 114   escritura_dos -> CTE_STR r_push_cte_str
Rule 115   escritura_dos -> expresion
Rule 116   r_push_cte_str -> <empty>
Rule 117   r_generate_quad_escr -> <empty>
Rule 118   escr -> escritura_dos r_generate_quad_escr
Rule 119   escr -> escritura_dos r_generate_quad_escr COMA escr
Rule 120   decision -> if r_end_if
Rule 121   decision -> if r_goto_ifelse else r_end_if
Rule 122   if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C
Rule 123   r_check_exp_type -> <empty>
Rule 124   r_end_if -> <empty>
Rule 125   r_goto_ifelse -> <empty>
Rule 126   else -> SINO LLAVE_A estatutos_dos LLAVE_C
Rule 127   ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
Rule 128   r_goto_while -> <empty>
Rule 129   r_save_jump -> <empty>
Rule 130   ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
Rule 131   r_expresion_for -> <empty>
Rule 132   r_save_var_for -> <empty>
Rule 133   r_generate_quad_asig_for -> <empty>
Rule 134   r_check_exp_for -> <empty>
Rule 135   r_goto_for -> <empty>

Terminals, with rules where they appear

AND                  : 78
CHAR                 : 16
COMA                 : 19 20 27 45 71 119
CORCHETE_A           : 22 28
CORCHETE_C           : 22 28
CTE_CH               : 101
CTE_F                : 100
CTE_I                : 22 99
CTE_STR              : 114
DESDE                : 130
DIFERENTE            : 88
DIV                  : 94
ENTONCES             : 122
ESCRIBIR             : 113
FLOAT                : 15
FUNCION              : 35 36
HACER                : 130
HASTA                : 130
HAZ                  : 127
ID                   : 1 17 18 19 20 23 24 35 36 44 45 61 62 66 67 130
IGUAL                : 59 130
IGUALIGUAL           : 87
INT                  : 14
LEER                 : 111
LLAVE_A              : 47 48 122 126 127 130
LLAVE_C              : 47 48 122 126 127 130
MAS                  : 90
MAYORIGUAL           : 85
MAYORQUE             : 83
MENORIGUAL           : 86
MENORQUE             : 84
MENOS                : 91
MIENTRAS             : 127
OR                   : 75
PARENT_A             : 8 39 40 61 62 66 67 98 109 111 113 122 127
PARENT_C             : 8 39 40 61 62 66 67 98 109 111 113 122 127
POR                  : 93
PRINCIPAL            : 8
PROGRAMA             : 1
PUNTOCOMA            : 1 11 12 49 50 51 52 53
REGRESA              : 109
SI                   : 122
SINO                 : 126
VAR                  : 10
VOID                 : 36
error                : 

Nonterminals, with rules where they appear

actualiza_func_name  : 8
asignacion           : 49
ciclo_for            : 55
ciclo_while          : 56
create_func_table    : 35 36
dec_est              : 8 42 43
dec_funciones        : 4 6 33
dec_vars             : 4 5 43
decision             : 54
dim                  : 24
dimension            : 18 20
else                 : 121
escr                 : 113 119
escritura            : 53
escritura_dos        : 118 119
estatutos            : 57 58
estatutos_dos        : 48 58 122 126 127 130
expresion            : 28 59 70 71 75 98 109 115 122 127 130 130
expresiones          : 62 67 71
factor               : 92 93 94
func_dos             : 35 36
func_type_void       : 36
funcion              : 32 33
g_expresion          : 77 78
ids_simple           : 11 12 19 20
if                   : 120 121
lectura              : 52
llamada              : 50
llamada_exp          : 103
m_expresion          : 80 81 81 90 91
main                 : 3 4 5 6
op_logicos           : 81
parametros           : 40 45
prog                 : 1
programa             : 0
r_act_param_count    : 71
r_check_exp_for      : 130
r_check_exp_type     : 122 127
r_check_func_exists  : 61 62 66 67
r_end_if             : 120 121
r_end_prog           : 1
r_expresion_for      : 130
r_genera_goto_main   : 3 4 5 6
r_generate_ERA       : 61 62
r_generate_ERA_dos   : 66 67
r_generate_endfunc   : 32 33
r_generate_gosub     : 61 62
r_generate_gosub_dos : 66 67
r_generate_parameter : 70 71
r_generate_quad_and  : 77 78
r_generate_quad_asig : 59
r_generate_quad_asig_for : 130
r_generate_quad_escr : 118 119
r_generate_quad_leer : 26 27
r_generate_quad_logicos : 80 81
r_generate_quad_masmen : 89 90 91
r_generate_quad_muldiv : 92 93 94
r_generate_quad_or   : 74 75
r_generate_quad_retorno : 109
r_goto_for           : 130
r_goto_ifelse        : 121
r_goto_while         : 127
r_is_array           : 28
r_pop_ff             : 98
r_push_cte_c         : 101
r_push_cte_f         : 100
r_push_cte_i         : 99
r_push_cte_str       : 114
r_push_ff            : 98
r_push_id            : 23 24
r_push_oper          : 59 75 78 83 84 85 86 87 88 90 91 93 94
r_save_jump          : 127 130
r_save_var_for       : 130
r_sum_addr           : 28
r_verify_dim         : 28
retorno              : 51
save_params          : 40
save_params_list     : 44 45
save_vars            : 10
save_vars_name       : 17 18 19 20
t_expresion          : 74 75 78
termino              : 89 90 91 93 94
tipo_simple          : 11 12 35 44 45
var_funcs            : 39 40
variable             : 26 27 59 102
variables            : 27 111
vars                 : 10 12

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID PUNTOCOMA prog r_end_prog

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID PUNTOCOMA prog r_end_prog

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . PUNTOCOMA prog r_end_prog

    PUNTOCOMA       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID PUNTOCOMA . prog r_end_prog
    (3) prog -> . r_genera_goto_main main
    (4) prog -> . r_genera_goto_main dec_vars dec_funciones main
    (5) prog -> . r_genera_goto_main dec_vars main
    (6) prog -> . r_genera_goto_main dec_funciones main
    (7) r_genera_goto_main -> .

    PRINCIPAL       reduce using rule 7 (r_genera_goto_main -> .)
    VAR             reduce using rule 7 (r_genera_goto_main -> .)
    FUNCION         reduce using rule 7 (r_genera_goto_main -> .)

    prog                           shift and go to state 5
    r_genera_goto_main             shift and go to state 6

state 5

    (1) programa -> PROGRAMA ID PUNTOCOMA prog . r_end_prog
    (2) r_end_prog -> .

    $end            reduce using rule 2 (r_end_prog -> .)

    r_end_prog                     shift and go to state 7

state 6

    (3) prog -> r_genera_goto_main . main
    (4) prog -> r_genera_goto_main . dec_vars dec_funciones main
    (5) prog -> r_genera_goto_main . dec_vars main
    (6) prog -> r_genera_goto_main . dec_funciones main
    (8) main -> . PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est
    (10) dec_vars -> . VAR vars save_vars
    (32) dec_funciones -> . funcion r_generate_endfunc
    (33) dec_funciones -> . funcion r_generate_endfunc dec_funciones
    (35) funcion -> . FUNCION tipo_simple ID create_func_table func_dos
    (36) funcion -> . FUNCION VOID func_type_void ID create_func_table func_dos

    PRINCIPAL       shift and go to state 11
    VAR             shift and go to state 12
    FUNCION         shift and go to state 14

    main                           shift and go to state 8
    dec_vars                       shift and go to state 9
    dec_funciones                  shift and go to state 10
    funcion                        shift and go to state 13

state 7

    (1) programa -> PROGRAMA ID PUNTOCOMA prog r_end_prog .

    $end            reduce using rule 1 (programa -> PROGRAMA ID PUNTOCOMA prog r_end_prog .)


state 8

    (3) prog -> r_genera_goto_main main .

    $end            reduce using rule 3 (prog -> r_genera_goto_main main .)


state 9

    (4) prog -> r_genera_goto_main dec_vars . dec_funciones main
    (5) prog -> r_genera_goto_main dec_vars . main
    (32) dec_funciones -> . funcion r_generate_endfunc
    (33) dec_funciones -> . funcion r_generate_endfunc dec_funciones
    (8) main -> . PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est
    (35) funcion -> . FUNCION tipo_simple ID create_func_table func_dos
    (36) funcion -> . FUNCION VOID func_type_void ID create_func_table func_dos

    PRINCIPAL       shift and go to state 11
    FUNCION         shift and go to state 14

    dec_funciones                  shift and go to state 15
    main                           shift and go to state 16
    funcion                        shift and go to state 13

state 10

    (6) prog -> r_genera_goto_main dec_funciones . main
    (8) main -> . PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est

    PRINCIPAL       shift and go to state 11

    main                           shift and go to state 17

state 11

    (8) main -> PRINCIPAL . actualiza_func_name PARENT_A PARENT_C dec_est
    (9) actualiza_func_name -> .

    PARENT_A        reduce using rule 9 (actualiza_func_name -> .)

    actualiza_func_name            shift and go to state 18

state 12

    (10) dec_vars -> VAR . vars save_vars
    (11) vars -> . tipo_simple ids_simple PUNTOCOMA
    (12) vars -> . tipo_simple ids_simple PUNTOCOMA vars
    (14) tipo_simple -> . INT
    (15) tipo_simple -> . FLOAT
    (16) tipo_simple -> . CHAR

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23

    vars                           shift and go to state 19
    tipo_simple                    shift and go to state 20

state 13

    (32) dec_funciones -> funcion . r_generate_endfunc
    (33) dec_funciones -> funcion . r_generate_endfunc dec_funciones
    (34) r_generate_endfunc -> .

    FUNCION         reduce using rule 34 (r_generate_endfunc -> .)
    PRINCIPAL       reduce using rule 34 (r_generate_endfunc -> .)

    r_generate_endfunc             shift and go to state 24

state 14

    (35) funcion -> FUNCION . tipo_simple ID create_func_table func_dos
    (36) funcion -> FUNCION . VOID func_type_void ID create_func_table func_dos
    (14) tipo_simple -> . INT
    (15) tipo_simple -> . FLOAT
    (16) tipo_simple -> . CHAR

    VOID            shift and go to state 26
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23

    tipo_simple                    shift and go to state 25

state 15

    (4) prog -> r_genera_goto_main dec_vars dec_funciones . main
    (8) main -> . PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est

    PRINCIPAL       shift and go to state 11

    main                           shift and go to state 27

state 16

    (5) prog -> r_genera_goto_main dec_vars main .

    $end            reduce using rule 5 (prog -> r_genera_goto_main dec_vars main .)


state 17

    (6) prog -> r_genera_goto_main dec_funciones main .

    $end            reduce using rule 6 (prog -> r_genera_goto_main dec_funciones main .)


state 18

    (8) main -> PRINCIPAL actualiza_func_name . PARENT_A PARENT_C dec_est

    PARENT_A        shift and go to state 28


state 19

    (10) dec_vars -> VAR vars . save_vars
    (13) save_vars -> .

    PRINCIPAL       reduce using rule 13 (save_vars -> .)
    FUNCION         reduce using rule 13 (save_vars -> .)
    LLAVE_A         reduce using rule 13 (save_vars -> .)

    save_vars                      shift and go to state 29

state 20

    (11) vars -> tipo_simple . ids_simple PUNTOCOMA
    (12) vars -> tipo_simple . ids_simple PUNTOCOMA vars
    (17) ids_simple -> . ID save_vars_name
    (18) ids_simple -> . ID save_vars_name dimension
    (19) ids_simple -> . ID save_vars_name COMA ids_simple
    (20) ids_simple -> . ID save_vars_name dimension COMA ids_simple

    ID              shift and go to state 31

    ids_simple                     shift and go to state 30

state 21

    (14) tipo_simple -> INT .

    ID              reduce using rule 14 (tipo_simple -> INT .)


state 22

    (15) tipo_simple -> FLOAT .

    ID              reduce using rule 15 (tipo_simple -> FLOAT .)


state 23

    (16) tipo_simple -> CHAR .

    ID              reduce using rule 16 (tipo_simple -> CHAR .)


state 24

    (32) dec_funciones -> funcion r_generate_endfunc .
    (33) dec_funciones -> funcion r_generate_endfunc . dec_funciones
    (32) dec_funciones -> . funcion r_generate_endfunc
    (33) dec_funciones -> . funcion r_generate_endfunc dec_funciones
    (35) funcion -> . FUNCION tipo_simple ID create_func_table func_dos
    (36) funcion -> . FUNCION VOID func_type_void ID create_func_table func_dos

    PRINCIPAL       reduce using rule 32 (dec_funciones -> funcion r_generate_endfunc .)
    FUNCION         shift and go to state 14

    funcion                        shift and go to state 13
    dec_funciones                  shift and go to state 32

state 25

    (35) funcion -> FUNCION tipo_simple . ID create_func_table func_dos

    ID              shift and go to state 33


state 26

    (36) funcion -> FUNCION VOID . func_type_void ID create_func_table func_dos
    (37) func_type_void -> .

    ID              reduce using rule 37 (func_type_void -> .)

    func_type_void                 shift and go to state 34

state 27

    (4) prog -> r_genera_goto_main dec_vars dec_funciones main .

    $end            reduce using rule 4 (prog -> r_genera_goto_main dec_vars dec_funciones main .)


state 28

    (8) main -> PRINCIPAL actualiza_func_name PARENT_A . PARENT_C dec_est

    PARENT_C        shift and go to state 35


state 29

    (10) dec_vars -> VAR vars save_vars .

    PRINCIPAL       reduce using rule 10 (dec_vars -> VAR vars save_vars .)
    FUNCION         reduce using rule 10 (dec_vars -> VAR vars save_vars .)
    LLAVE_A         reduce using rule 10 (dec_vars -> VAR vars save_vars .)


state 30

    (11) vars -> tipo_simple ids_simple . PUNTOCOMA
    (12) vars -> tipo_simple ids_simple . PUNTOCOMA vars

    PUNTOCOMA       shift and go to state 36


state 31

    (17) ids_simple -> ID . save_vars_name
    (18) ids_simple -> ID . save_vars_name dimension
    (19) ids_simple -> ID . save_vars_name COMA ids_simple
    (20) ids_simple -> ID . save_vars_name dimension COMA ids_simple
    (21) save_vars_name -> .

    COMA            reduce using rule 21 (save_vars_name -> .)
    CORCHETE_A      reduce using rule 21 (save_vars_name -> .)
    PUNTOCOMA       reduce using rule 21 (save_vars_name -> .)

    save_vars_name                 shift and go to state 37

state 32

    (33) dec_funciones -> funcion r_generate_endfunc dec_funciones .

    PRINCIPAL       reduce using rule 33 (dec_funciones -> funcion r_generate_endfunc dec_funciones .)


state 33

    (35) funcion -> FUNCION tipo_simple ID . create_func_table func_dos
    (38) create_func_table -> .

    PARENT_A        reduce using rule 38 (create_func_table -> .)

    create_func_table              shift and go to state 38

state 34

    (36) funcion -> FUNCION VOID func_type_void . ID create_func_table func_dos

    ID              shift and go to state 39


state 35

    (8) main -> PRINCIPAL actualiza_func_name PARENT_A PARENT_C . dec_est
    (47) dec_est -> . LLAVE_A LLAVE_C
    (48) dec_est -> . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 41

    dec_est                        shift and go to state 40

state 36

    (11) vars -> tipo_simple ids_simple PUNTOCOMA .
    (12) vars -> tipo_simple ids_simple PUNTOCOMA . vars
    (11) vars -> . tipo_simple ids_simple PUNTOCOMA
    (12) vars -> . tipo_simple ids_simple PUNTOCOMA vars
    (14) tipo_simple -> . INT
    (15) tipo_simple -> . FLOAT
    (16) tipo_simple -> . CHAR

    PRINCIPAL       reduce using rule 11 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    FUNCION         reduce using rule 11 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    LLAVE_A         reduce using rule 11 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23

    tipo_simple                    shift and go to state 20
    vars                           shift and go to state 42

state 37

    (17) ids_simple -> ID save_vars_name .
    (18) ids_simple -> ID save_vars_name . dimension
    (19) ids_simple -> ID save_vars_name . COMA ids_simple
    (20) ids_simple -> ID save_vars_name . dimension COMA ids_simple
    (22) dimension -> . CORCHETE_A CTE_I CORCHETE_C

    PUNTOCOMA       reduce using rule 17 (ids_simple -> ID save_vars_name .)
    COMA            shift and go to state 44
    CORCHETE_A      shift and go to state 45

    dimension                      shift and go to state 43

state 38

    (35) funcion -> FUNCION tipo_simple ID create_func_table . func_dos
    (39) func_dos -> . PARENT_A PARENT_C var_funcs
    (40) func_dos -> . PARENT_A parametros PARENT_C save_params var_funcs

    PARENT_A        shift and go to state 47

    func_dos                       shift and go to state 46

state 39

    (36) funcion -> FUNCION VOID func_type_void ID . create_func_table func_dos
    (38) create_func_table -> .

    PARENT_A        reduce using rule 38 (create_func_table -> .)

    create_func_table              shift and go to state 48

state 40

    (8) main -> PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est .

    $end            reduce using rule 8 (main -> PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est .)


state 41

    (47) dec_est -> LLAVE_A . LLAVE_C
    (48) dec_est -> LLAVE_A . estatutos_dos LLAVE_C
    (57) estatutos_dos -> . estatutos
    (58) estatutos_dos -> . estatutos estatutos_dos
    (49) estatutos -> . asignacion PUNTOCOMA
    (50) estatutos -> . llamada PUNTOCOMA
    (51) estatutos -> . retorno PUNTOCOMA
    (52) estatutos -> . lectura PUNTOCOMA
    (53) estatutos -> . escritura PUNTOCOMA
    (54) estatutos -> . decision
    (55) estatutos -> . ciclo_for
    (56) estatutos -> . ciclo_while
    (59) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (61) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (62) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (109) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (111) lectura -> . LEER PARENT_A variables PARENT_C
    (113) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (120) decision -> . if r_end_if
    (121) decision -> . if r_goto_ifelse else r_end_if
    (130) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (127) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (122) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    LLAVE_C         shift and go to state 49
    ID              shift and go to state 61
    REGRESA         shift and go to state 62
    LEER            shift and go to state 63
    ESCRIBIR        shift and go to state 64
    DESDE           shift and go to state 66
    MIENTRAS        shift and go to state 67
    SI              shift and go to state 68

    estatutos_dos                  shift and go to state 50
    estatutos                      shift and go to state 51
    asignacion                     shift and go to state 52
    llamada                        shift and go to state 53
    retorno                        shift and go to state 54
    lectura                        shift and go to state 55
    escritura                      shift and go to state 56
    decision                       shift and go to state 57
    ciclo_for                      shift and go to state 58
    ciclo_while                    shift and go to state 59
    variable                       shift and go to state 60
    if                             shift and go to state 65

state 42

    (12) vars -> tipo_simple ids_simple PUNTOCOMA vars .

    PRINCIPAL       reduce using rule 12 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)
    FUNCION         reduce using rule 12 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)
    LLAVE_A         reduce using rule 12 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)


state 43

    (18) ids_simple -> ID save_vars_name dimension .
    (20) ids_simple -> ID save_vars_name dimension . COMA ids_simple

    PUNTOCOMA       reduce using rule 18 (ids_simple -> ID save_vars_name dimension .)
    COMA            shift and go to state 69


state 44

    (19) ids_simple -> ID save_vars_name COMA . ids_simple
    (17) ids_simple -> . ID save_vars_name
    (18) ids_simple -> . ID save_vars_name dimension
    (19) ids_simple -> . ID save_vars_name COMA ids_simple
    (20) ids_simple -> . ID save_vars_name dimension COMA ids_simple

    ID              shift and go to state 31

    ids_simple                     shift and go to state 70

state 45

    (22) dimension -> CORCHETE_A . CTE_I CORCHETE_C

    CTE_I           shift and go to state 71


state 46

    (35) funcion -> FUNCION tipo_simple ID create_func_table func_dos .

    FUNCION         reduce using rule 35 (funcion -> FUNCION tipo_simple ID create_func_table func_dos .)
    PRINCIPAL       reduce using rule 35 (funcion -> FUNCION tipo_simple ID create_func_table func_dos .)


state 47

    (39) func_dos -> PARENT_A . PARENT_C var_funcs
    (40) func_dos -> PARENT_A . parametros PARENT_C save_params var_funcs
    (44) parametros -> . tipo_simple ID save_params_list
    (45) parametros -> . tipo_simple ID save_params_list COMA parametros
    (14) tipo_simple -> . INT
    (15) tipo_simple -> . FLOAT
    (16) tipo_simple -> . CHAR

    PARENT_C        shift and go to state 72
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23

    parametros                     shift and go to state 73
    tipo_simple                    shift and go to state 74

state 48

    (36) funcion -> FUNCION VOID func_type_void ID create_func_table . func_dos
    (39) func_dos -> . PARENT_A PARENT_C var_funcs
    (40) func_dos -> . PARENT_A parametros PARENT_C save_params var_funcs

    PARENT_A        shift and go to state 47

    func_dos                       shift and go to state 75

state 49

    (47) dec_est -> LLAVE_A LLAVE_C .

    $end            reduce using rule 47 (dec_est -> LLAVE_A LLAVE_C .)
    FUNCION         reduce using rule 47 (dec_est -> LLAVE_A LLAVE_C .)
    PRINCIPAL       reduce using rule 47 (dec_est -> LLAVE_A LLAVE_C .)


state 50

    (48) dec_est -> LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 76


state 51

    (57) estatutos_dos -> estatutos .
    (58) estatutos_dos -> estatutos . estatutos_dos
    (57) estatutos_dos -> . estatutos
    (58) estatutos_dos -> . estatutos estatutos_dos
    (49) estatutos -> . asignacion PUNTOCOMA
    (50) estatutos -> . llamada PUNTOCOMA
    (51) estatutos -> . retorno PUNTOCOMA
    (52) estatutos -> . lectura PUNTOCOMA
    (53) estatutos -> . escritura PUNTOCOMA
    (54) estatutos -> . decision
    (55) estatutos -> . ciclo_for
    (56) estatutos -> . ciclo_while
    (59) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (61) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (62) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (109) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (111) lectura -> . LEER PARENT_A variables PARENT_C
    (113) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (120) decision -> . if r_end_if
    (121) decision -> . if r_goto_ifelse else r_end_if
    (130) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (127) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (122) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    LLAVE_C         reduce using rule 57 (estatutos_dos -> estatutos .)
    ID              shift and go to state 61
    REGRESA         shift and go to state 62
    LEER            shift and go to state 63
    ESCRIBIR        shift and go to state 64
    DESDE           shift and go to state 66
    MIENTRAS        shift and go to state 67
    SI              shift and go to state 68

    estatutos                      shift and go to state 51
    estatutos_dos                  shift and go to state 77
    asignacion                     shift and go to state 52
    llamada                        shift and go to state 53
    retorno                        shift and go to state 54
    lectura                        shift and go to state 55
    escritura                      shift and go to state 56
    decision                       shift and go to state 57
    ciclo_for                      shift and go to state 58
    ciclo_while                    shift and go to state 59
    variable                       shift and go to state 60
    if                             shift and go to state 65

state 52

    (49) estatutos -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 78


state 53

    (50) estatutos -> llamada . PUNTOCOMA

    PUNTOCOMA       shift and go to state 79


state 54

    (51) estatutos -> retorno . PUNTOCOMA

    PUNTOCOMA       shift and go to state 80


state 55

    (52) estatutos -> lectura . PUNTOCOMA

    PUNTOCOMA       shift and go to state 81


state 56

    (53) estatutos -> escritura . PUNTOCOMA

    PUNTOCOMA       shift and go to state 82


state 57

    (54) estatutos -> decision .

    ID              reduce using rule 54 (estatutos -> decision .)
    REGRESA         reduce using rule 54 (estatutos -> decision .)
    LEER            reduce using rule 54 (estatutos -> decision .)
    ESCRIBIR        reduce using rule 54 (estatutos -> decision .)
    DESDE           reduce using rule 54 (estatutos -> decision .)
    MIENTRAS        reduce using rule 54 (estatutos -> decision .)
    SI              reduce using rule 54 (estatutos -> decision .)
    LLAVE_C         reduce using rule 54 (estatutos -> decision .)


state 58

    (55) estatutos -> ciclo_for .

    ID              reduce using rule 55 (estatutos -> ciclo_for .)
    REGRESA         reduce using rule 55 (estatutos -> ciclo_for .)
    LEER            reduce using rule 55 (estatutos -> ciclo_for .)
    ESCRIBIR        reduce using rule 55 (estatutos -> ciclo_for .)
    DESDE           reduce using rule 55 (estatutos -> ciclo_for .)
    MIENTRAS        reduce using rule 55 (estatutos -> ciclo_for .)
    SI              reduce using rule 55 (estatutos -> ciclo_for .)
    LLAVE_C         reduce using rule 55 (estatutos -> ciclo_for .)


state 59

    (56) estatutos -> ciclo_while .

    ID              reduce using rule 56 (estatutos -> ciclo_while .)
    REGRESA         reduce using rule 56 (estatutos -> ciclo_while .)
    LEER            reduce using rule 56 (estatutos -> ciclo_while .)
    ESCRIBIR        reduce using rule 56 (estatutos -> ciclo_while .)
    DESDE           reduce using rule 56 (estatutos -> ciclo_while .)
    MIENTRAS        reduce using rule 56 (estatutos -> ciclo_while .)
    SI              reduce using rule 56 (estatutos -> ciclo_while .)
    LLAVE_C         reduce using rule 56 (estatutos -> ciclo_while .)


state 60

    (59) asignacion -> variable . IGUAL r_push_oper expresion r_generate_quad_asig

    IGUAL           shift and go to state 83


state 61

    (61) llamada -> ID . r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (62) llamada -> ID . r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (23) variable -> ID . r_push_id
    (24) variable -> ID . r_push_id dim
    (63) r_check_func_exists -> .
    (25) r_push_id -> .

    PARENT_A        reduce using rule 63 (r_check_func_exists -> .)
    CORCHETE_A      reduce using rule 25 (r_push_id -> .)
    IGUAL           reduce using rule 25 (r_push_id -> .)

    r_check_func_exists            shift and go to state 84
    r_push_id                      shift and go to state 85

state 62

    (109) retorno -> REGRESA . PARENT_A expresion PARENT_C r_generate_quad_retorno

    PARENT_A        shift and go to state 86


state 63

    (111) lectura -> LEER . PARENT_A variables PARENT_C

    PARENT_A        shift and go to state 87


state 64

    (113) escritura -> ESCRIBIR . PARENT_A escr PARENT_C

    PARENT_A        shift and go to state 88


state 65

    (120) decision -> if . r_end_if
    (121) decision -> if . r_goto_ifelse else r_end_if
    (124) r_end_if -> .
    (125) r_goto_ifelse -> .

    ID              reduce using rule 124 (r_end_if -> .)
    REGRESA         reduce using rule 124 (r_end_if -> .)
    LEER            reduce using rule 124 (r_end_if -> .)
    ESCRIBIR        reduce using rule 124 (r_end_if -> .)
    DESDE           reduce using rule 124 (r_end_if -> .)
    MIENTRAS        reduce using rule 124 (r_end_if -> .)
    SI              reduce using rule 124 (r_end_if -> .)
    LLAVE_C         reduce using rule 124 (r_end_if -> .)
    SINO            reduce using rule 125 (r_goto_ifelse -> .)

    r_end_if                       shift and go to state 89
    r_goto_ifelse                  shift and go to state 90

state 66

    (130) ciclo_for -> DESDE . ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for

    ID              shift and go to state 91


state 67

    (127) ciclo_while -> MIENTRAS . r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (129) r_save_jump -> .

    PARENT_A        reduce using rule 129 (r_save_jump -> .)

    r_save_jump                    shift and go to state 92

state 68

    (122) if -> SI . PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    PARENT_A        shift and go to state 93


state 69

    (20) ids_simple -> ID save_vars_name dimension COMA . ids_simple
    (17) ids_simple -> . ID save_vars_name
    (18) ids_simple -> . ID save_vars_name dimension
    (19) ids_simple -> . ID save_vars_name COMA ids_simple
    (20) ids_simple -> . ID save_vars_name dimension COMA ids_simple

    ID              shift and go to state 31

    ids_simple                     shift and go to state 94

state 70

    (19) ids_simple -> ID save_vars_name COMA ids_simple .

    PUNTOCOMA       reduce using rule 19 (ids_simple -> ID save_vars_name COMA ids_simple .)


state 71

    (22) dimension -> CORCHETE_A CTE_I . CORCHETE_C

    CORCHETE_C      shift and go to state 95


state 72

    (39) func_dos -> PARENT_A PARENT_C . var_funcs
    (42) var_funcs -> . dec_est
    (43) var_funcs -> . dec_vars dec_est
    (47) dec_est -> . LLAVE_A LLAVE_C
    (48) dec_est -> . LLAVE_A estatutos_dos LLAVE_C
    (10) dec_vars -> . VAR vars save_vars

    LLAVE_A         shift and go to state 41
    VAR             shift and go to state 12

    var_funcs                      shift and go to state 96
    dec_est                        shift and go to state 97
    dec_vars                       shift and go to state 98

state 73

    (40) func_dos -> PARENT_A parametros . PARENT_C save_params var_funcs

    PARENT_C        shift and go to state 99


state 74

    (44) parametros -> tipo_simple . ID save_params_list
    (45) parametros -> tipo_simple . ID save_params_list COMA parametros

    ID              shift and go to state 100


state 75

    (36) funcion -> FUNCION VOID func_type_void ID create_func_table func_dos .

    FUNCION         reduce using rule 36 (funcion -> FUNCION VOID func_type_void ID create_func_table func_dos .)
    PRINCIPAL       reduce using rule 36 (funcion -> FUNCION VOID func_type_void ID create_func_table func_dos .)


state 76

    (48) dec_est -> LLAVE_A estatutos_dos LLAVE_C .

    $end            reduce using rule 48 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)
    FUNCION         reduce using rule 48 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)
    PRINCIPAL       reduce using rule 48 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)


state 77

    (58) estatutos_dos -> estatutos estatutos_dos .

    LLAVE_C         reduce using rule 58 (estatutos_dos -> estatutos estatutos_dos .)


state 78

    (49) estatutos -> asignacion PUNTOCOMA .

    ID              reduce using rule 49 (estatutos -> asignacion PUNTOCOMA .)
    REGRESA         reduce using rule 49 (estatutos -> asignacion PUNTOCOMA .)
    LEER            reduce using rule 49 (estatutos -> asignacion PUNTOCOMA .)
    ESCRIBIR        reduce using rule 49 (estatutos -> asignacion PUNTOCOMA .)
    DESDE           reduce using rule 49 (estatutos -> asignacion PUNTOCOMA .)
    MIENTRAS        reduce using rule 49 (estatutos -> asignacion PUNTOCOMA .)
    SI              reduce using rule 49 (estatutos -> asignacion PUNTOCOMA .)
    LLAVE_C         reduce using rule 49 (estatutos -> asignacion PUNTOCOMA .)


state 79

    (50) estatutos -> llamada PUNTOCOMA .

    ID              reduce using rule 50 (estatutos -> llamada PUNTOCOMA .)
    REGRESA         reduce using rule 50 (estatutos -> llamada PUNTOCOMA .)
    LEER            reduce using rule 50 (estatutos -> llamada PUNTOCOMA .)
    ESCRIBIR        reduce using rule 50 (estatutos -> llamada PUNTOCOMA .)
    DESDE           reduce using rule 50 (estatutos -> llamada PUNTOCOMA .)
    MIENTRAS        reduce using rule 50 (estatutos -> llamada PUNTOCOMA .)
    SI              reduce using rule 50 (estatutos -> llamada PUNTOCOMA .)
    LLAVE_C         reduce using rule 50 (estatutos -> llamada PUNTOCOMA .)


state 80

    (51) estatutos -> retorno PUNTOCOMA .

    ID              reduce using rule 51 (estatutos -> retorno PUNTOCOMA .)
    REGRESA         reduce using rule 51 (estatutos -> retorno PUNTOCOMA .)
    LEER            reduce using rule 51 (estatutos -> retorno PUNTOCOMA .)
    ESCRIBIR        reduce using rule 51 (estatutos -> retorno PUNTOCOMA .)
    DESDE           reduce using rule 51 (estatutos -> retorno PUNTOCOMA .)
    MIENTRAS        reduce using rule 51 (estatutos -> retorno PUNTOCOMA .)
    SI              reduce using rule 51 (estatutos -> retorno PUNTOCOMA .)
    LLAVE_C         reduce using rule 51 (estatutos -> retorno PUNTOCOMA .)


state 81

    (52) estatutos -> lectura PUNTOCOMA .

    ID              reduce using rule 52 (estatutos -> lectura PUNTOCOMA .)
    REGRESA         reduce using rule 52 (estatutos -> lectura PUNTOCOMA .)
    LEER            reduce using rule 52 (estatutos -> lectura PUNTOCOMA .)
    ESCRIBIR        reduce using rule 52 (estatutos -> lectura PUNTOCOMA .)
    DESDE           reduce using rule 52 (estatutos -> lectura PUNTOCOMA .)
    MIENTRAS        reduce using rule 52 (estatutos -> lectura PUNTOCOMA .)
    SI              reduce using rule 52 (estatutos -> lectura PUNTOCOMA .)
    LLAVE_C         reduce using rule 52 (estatutos -> lectura PUNTOCOMA .)


state 82

    (53) estatutos -> escritura PUNTOCOMA .

    ID              reduce using rule 53 (estatutos -> escritura PUNTOCOMA .)
    REGRESA         reduce using rule 53 (estatutos -> escritura PUNTOCOMA .)
    LEER            reduce using rule 53 (estatutos -> escritura PUNTOCOMA .)
    ESCRIBIR        reduce using rule 53 (estatutos -> escritura PUNTOCOMA .)
    DESDE           reduce using rule 53 (estatutos -> escritura PUNTOCOMA .)
    MIENTRAS        reduce using rule 53 (estatutos -> escritura PUNTOCOMA .)
    SI              reduce using rule 53 (estatutos -> escritura PUNTOCOMA .)
    LLAVE_C         reduce using rule 53 (estatutos -> escritura PUNTOCOMA .)


state 83

    (59) asignacion -> variable IGUAL . r_push_oper expresion r_generate_quad_asig
    (95) r_push_oper -> .

    PARENT_A        reduce using rule 95 (r_push_oper -> .)
    CTE_I           reduce using rule 95 (r_push_oper -> .)
    CTE_F           reduce using rule 95 (r_push_oper -> .)
    CTE_CH          reduce using rule 95 (r_push_oper -> .)
    ID              reduce using rule 95 (r_push_oper -> .)

    r_push_oper                    shift and go to state 101

state 84

    (61) llamada -> ID r_check_func_exists . PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (62) llamada -> ID r_check_func_exists . PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub

    PARENT_A        shift and go to state 102


state 85

    (23) variable -> ID r_push_id .
    (24) variable -> ID r_push_id . dim
    (28) dim -> . CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr

    IGUAL           reduce using rule 23 (variable -> ID r_push_id .)
    POR             reduce using rule 23 (variable -> ID r_push_id .)
    DIV             reduce using rule 23 (variable -> ID r_push_id .)
    MAS             reduce using rule 23 (variable -> ID r_push_id .)
    MENOS           reduce using rule 23 (variable -> ID r_push_id .)
    MAYORQUE        reduce using rule 23 (variable -> ID r_push_id .)
    MENORQUE        reduce using rule 23 (variable -> ID r_push_id .)
    MAYORIGUAL      reduce using rule 23 (variable -> ID r_push_id .)
    MENORIGUAL      reduce using rule 23 (variable -> ID r_push_id .)
    IGUALIGUAL      reduce using rule 23 (variable -> ID r_push_id .)
    DIFERENTE       reduce using rule 23 (variable -> ID r_push_id .)
    AND             reduce using rule 23 (variable -> ID r_push_id .)
    OR              reduce using rule 23 (variable -> ID r_push_id .)
    PARENT_C        reduce using rule 23 (variable -> ID r_push_id .)
    COMA            reduce using rule 23 (variable -> ID r_push_id .)
    PUNTOCOMA       reduce using rule 23 (variable -> ID r_push_id .)
    CORCHETE_C      reduce using rule 23 (variable -> ID r_push_id .)
    HASTA           reduce using rule 23 (variable -> ID r_push_id .)
    HACER           reduce using rule 23 (variable -> ID r_push_id .)
    CORCHETE_A      shift and go to state 104

    dim                            shift and go to state 103

state 86

    (109) retorno -> REGRESA PARENT_A . expresion PARENT_C r_generate_quad_retorno
    (74) expresion -> . t_expresion r_generate_quad_or
    (75) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (77) t_expresion -> . g_expresion r_generate_quad_and
    (78) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (80) g_expresion -> . m_expresion r_generate_quad_logicos
    (81) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    expresion                      shift and go to state 106
    t_expresion                    shift and go to state 107
    g_expresion                    shift and go to state 108
    m_expresion                    shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 87

    (111) lectura -> LEER PARENT_A . variables PARENT_C
    (26) variables -> . variable r_generate_quad_leer
    (27) variables -> . variable r_generate_quad_leer COMA variables
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim

    ID              shift and go to state 120

    variables                      shift and go to state 118
    variable                       shift and go to state 119

state 88

    (113) escritura -> ESCRIBIR PARENT_A . escr PARENT_C
    (118) escr -> . escritura_dos r_generate_quad_escr
    (119) escr -> . escritura_dos r_generate_quad_escr COMA escr
    (114) escritura_dos -> . CTE_STR r_push_cte_str
    (115) escritura_dos -> . expresion
    (74) expresion -> . t_expresion r_generate_quad_or
    (75) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (77) t_expresion -> . g_expresion r_generate_quad_and
    (78) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (80) g_expresion -> . m_expresion r_generate_quad_logicos
    (81) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    CTE_STR         shift and go to state 123
    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    escr                           shift and go to state 121
    escritura_dos                  shift and go to state 122
    expresion                      shift and go to state 124
    t_expresion                    shift and go to state 107
    g_expresion                    shift and go to state 108
    m_expresion                    shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 89

    (120) decision -> if r_end_if .

    ID              reduce using rule 120 (decision -> if r_end_if .)
    REGRESA         reduce using rule 120 (decision -> if r_end_if .)
    LEER            reduce using rule 120 (decision -> if r_end_if .)
    ESCRIBIR        reduce using rule 120 (decision -> if r_end_if .)
    DESDE           reduce using rule 120 (decision -> if r_end_if .)
    MIENTRAS        reduce using rule 120 (decision -> if r_end_if .)
    SI              reduce using rule 120 (decision -> if r_end_if .)
    LLAVE_C         reduce using rule 120 (decision -> if r_end_if .)


state 90

    (121) decision -> if r_goto_ifelse . else r_end_if
    (126) else -> . SINO LLAVE_A estatutos_dos LLAVE_C

    SINO            shift and go to state 126

    else                           shift and go to state 125

state 91

    (130) ciclo_for -> DESDE ID . r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (132) r_save_var_for -> .

    IGUAL           reduce using rule 132 (r_save_var_for -> .)

    r_save_var_for                 shift and go to state 127

state 92

    (127) ciclo_while -> MIENTRAS r_save_jump . PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while

    PARENT_A        shift and go to state 128


state 93

    (122) if -> SI PARENT_A . expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C
    (74) expresion -> . t_expresion r_generate_quad_or
    (75) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (77) t_expresion -> . g_expresion r_generate_quad_and
    (78) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (80) g_expresion -> . m_expresion r_generate_quad_logicos
    (81) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    expresion                      shift and go to state 129
    t_expresion                    shift and go to state 107
    g_expresion                    shift and go to state 108
    m_expresion                    shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 94

    (20) ids_simple -> ID save_vars_name dimension COMA ids_simple .

    PUNTOCOMA       reduce using rule 20 (ids_simple -> ID save_vars_name dimension COMA ids_simple .)


state 95

    (22) dimension -> CORCHETE_A CTE_I CORCHETE_C .

    COMA            reduce using rule 22 (dimension -> CORCHETE_A CTE_I CORCHETE_C .)
    PUNTOCOMA       reduce using rule 22 (dimension -> CORCHETE_A CTE_I CORCHETE_C .)


state 96

    (39) func_dos -> PARENT_A PARENT_C var_funcs .

    FUNCION         reduce using rule 39 (func_dos -> PARENT_A PARENT_C var_funcs .)
    PRINCIPAL       reduce using rule 39 (func_dos -> PARENT_A PARENT_C var_funcs .)


state 97

    (42) var_funcs -> dec_est .

    FUNCION         reduce using rule 42 (var_funcs -> dec_est .)
    PRINCIPAL       reduce using rule 42 (var_funcs -> dec_est .)


state 98

    (43) var_funcs -> dec_vars . dec_est
    (47) dec_est -> . LLAVE_A LLAVE_C
    (48) dec_est -> . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 41

    dec_est                        shift and go to state 130

state 99

    (40) func_dos -> PARENT_A parametros PARENT_C . save_params var_funcs
    (41) save_params -> .

    LLAVE_A         reduce using rule 41 (save_params -> .)
    VAR             reduce using rule 41 (save_params -> .)

    save_params                    shift and go to state 131

state 100

    (44) parametros -> tipo_simple ID . save_params_list
    (45) parametros -> tipo_simple ID . save_params_list COMA parametros
    (46) save_params_list -> .

    COMA            reduce using rule 46 (save_params_list -> .)
    PARENT_C        reduce using rule 46 (save_params_list -> .)

    save_params_list               shift and go to state 132

state 101

    (59) asignacion -> variable IGUAL r_push_oper . expresion r_generate_quad_asig
    (74) expresion -> . t_expresion r_generate_quad_or
    (75) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (77) t_expresion -> . g_expresion r_generate_quad_and
    (78) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (80) g_expresion -> . m_expresion r_generate_quad_logicos
    (81) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    variable                       shift and go to state 115
    expresion                      shift and go to state 133
    t_expresion                    shift and go to state 107
    g_expresion                    shift and go to state 108
    m_expresion                    shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 111
    llamada_exp                    shift and go to state 116

state 102

    (61) llamada -> ID r_check_func_exists PARENT_A . r_generate_ERA PARENT_C r_generate_gosub
    (62) llamada -> ID r_check_func_exists PARENT_A . r_generate_ERA expresiones PARENT_C r_generate_gosub
    (64) r_generate_ERA -> .

    PARENT_C        reduce using rule 64 (r_generate_ERA -> .)
    PARENT_A        reduce using rule 64 (r_generate_ERA -> .)
    CTE_I           reduce using rule 64 (r_generate_ERA -> .)
    CTE_F           reduce using rule 64 (r_generate_ERA -> .)
    CTE_CH          reduce using rule 64 (r_generate_ERA -> .)
    ID              reduce using rule 64 (r_generate_ERA -> .)

    r_generate_ERA                 shift and go to state 134

state 103

    (24) variable -> ID r_push_id dim .

    IGUAL           reduce using rule 24 (variable -> ID r_push_id dim .)
    POR             reduce using rule 24 (variable -> ID r_push_id dim .)
    DIV             reduce using rule 24 (variable -> ID r_push_id dim .)
    MAS             reduce using rule 24 (variable -> ID r_push_id dim .)
    MENOS           reduce using rule 24 (variable -> ID r_push_id dim .)
    MAYORQUE        reduce using rule 24 (variable -> ID r_push_id dim .)
    MENORQUE        reduce using rule 24 (variable -> ID r_push_id dim .)
    MAYORIGUAL      reduce using rule 24 (variable -> ID r_push_id dim .)
    MENORIGUAL      reduce using rule 24 (variable -> ID r_push_id dim .)
    IGUALIGUAL      reduce using rule 24 (variable -> ID r_push_id dim .)
    DIFERENTE       reduce using rule 24 (variable -> ID r_push_id dim .)
    AND             reduce using rule 24 (variable -> ID r_push_id dim .)
    OR              reduce using rule 24 (variable -> ID r_push_id dim .)
    PARENT_C        reduce using rule 24 (variable -> ID r_push_id dim .)
    COMA            reduce using rule 24 (variable -> ID r_push_id dim .)
    PUNTOCOMA       reduce using rule 24 (variable -> ID r_push_id dim .)
    CORCHETE_C      reduce using rule 24 (variable -> ID r_push_id dim .)
    HASTA           reduce using rule 24 (variable -> ID r_push_id dim .)
    HACER           reduce using rule 24 (variable -> ID r_push_id dim .)


state 104

    (28) dim -> CORCHETE_A . r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr
    (29) r_is_array -> .

    PARENT_A        reduce using rule 29 (r_is_array -> .)
    CTE_I           reduce using rule 29 (r_is_array -> .)
    CTE_F           reduce using rule 29 (r_is_array -> .)
    CTE_CH          reduce using rule 29 (r_is_array -> .)
    ID              reduce using rule 29 (r_is_array -> .)

    r_is_array                     shift and go to state 135

state 105

    (98) factor -> PARENT_A . r_push_ff expresion PARENT_C r_pop_ff
    (107) r_push_ff -> .

    PARENT_A        reduce using rule 107 (r_push_ff -> .)
    CTE_I           reduce using rule 107 (r_push_ff -> .)
    CTE_F           reduce using rule 107 (r_push_ff -> .)
    CTE_CH          reduce using rule 107 (r_push_ff -> .)
    ID              reduce using rule 107 (r_push_ff -> .)

    r_push_ff                      shift and go to state 136

state 106

    (109) retorno -> REGRESA PARENT_A expresion . PARENT_C r_generate_quad_retorno

    PARENT_C        shift and go to state 137


state 107

    (74) expresion -> t_expresion . r_generate_quad_or
    (75) expresion -> t_expresion . r_generate_quad_or OR r_push_oper expresion
    (76) r_generate_quad_or -> .

    OR              reduce using rule 76 (r_generate_quad_or -> .)
    PARENT_C        reduce using rule 76 (r_generate_quad_or -> .)
    COMA            reduce using rule 76 (r_generate_quad_or -> .)
    PUNTOCOMA       reduce using rule 76 (r_generate_quad_or -> .)
    CORCHETE_C      reduce using rule 76 (r_generate_quad_or -> .)
    HASTA           reduce using rule 76 (r_generate_quad_or -> .)
    HACER           reduce using rule 76 (r_generate_quad_or -> .)

    r_generate_quad_or             shift and go to state 138

state 108

    (77) t_expresion -> g_expresion . r_generate_quad_and
    (78) t_expresion -> g_expresion . r_generate_quad_and AND r_push_oper t_expresion
    (79) r_generate_quad_and -> .

    AND             reduce using rule 79 (r_generate_quad_and -> .)
    OR              reduce using rule 79 (r_generate_quad_and -> .)
    PARENT_C        reduce using rule 79 (r_generate_quad_and -> .)
    COMA            reduce using rule 79 (r_generate_quad_and -> .)
    PUNTOCOMA       reduce using rule 79 (r_generate_quad_and -> .)
    CORCHETE_C      reduce using rule 79 (r_generate_quad_and -> .)
    HASTA           reduce using rule 79 (r_generate_quad_and -> .)
    HACER           reduce using rule 79 (r_generate_quad_and -> .)

    r_generate_quad_and            shift and go to state 139

state 109

    (80) g_expresion -> m_expresion . r_generate_quad_logicos
    (81) g_expresion -> m_expresion . op_logicos m_expresion r_generate_quad_logicos
    (82) r_generate_quad_logicos -> .
    (83) op_logicos -> . MAYORQUE r_push_oper
    (84) op_logicos -> . MENORQUE r_push_oper
    (85) op_logicos -> . MAYORIGUAL r_push_oper
    (86) op_logicos -> . MENORIGUAL r_push_oper
    (87) op_logicos -> . IGUALIGUAL r_push_oper
    (88) op_logicos -> . DIFERENTE r_push_oper

    AND             reduce using rule 82 (r_generate_quad_logicos -> .)
    OR              reduce using rule 82 (r_generate_quad_logicos -> .)
    PARENT_C        reduce using rule 82 (r_generate_quad_logicos -> .)
    COMA            reduce using rule 82 (r_generate_quad_logicos -> .)
    PUNTOCOMA       reduce using rule 82 (r_generate_quad_logicos -> .)
    CORCHETE_C      reduce using rule 82 (r_generate_quad_logicos -> .)
    HASTA           reduce using rule 82 (r_generate_quad_logicos -> .)
    HACER           reduce using rule 82 (r_generate_quad_logicos -> .)
    MAYORQUE        shift and go to state 142
    MENORQUE        shift and go to state 143
    MAYORIGUAL      shift and go to state 144
    MENORIGUAL      shift and go to state 145
    IGUALIGUAL      shift and go to state 146
    DIFERENTE       shift and go to state 147

    r_generate_quad_logicos        shift and go to state 140
    op_logicos                     shift and go to state 141

state 110

    (89) m_expresion -> termino . r_generate_quad_masmen
    (90) m_expresion -> termino . r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> termino . r_generate_quad_masmen MENOS r_push_oper m_expresion
    (96) r_generate_quad_masmen -> .

    MAS             reduce using rule 96 (r_generate_quad_masmen -> .)
    MENOS           reduce using rule 96 (r_generate_quad_masmen -> .)
    MAYORQUE        reduce using rule 96 (r_generate_quad_masmen -> .)
    MENORQUE        reduce using rule 96 (r_generate_quad_masmen -> .)
    MAYORIGUAL      reduce using rule 96 (r_generate_quad_masmen -> .)
    MENORIGUAL      reduce using rule 96 (r_generate_quad_masmen -> .)
    IGUALIGUAL      reduce using rule 96 (r_generate_quad_masmen -> .)
    DIFERENTE       reduce using rule 96 (r_generate_quad_masmen -> .)
    AND             reduce using rule 96 (r_generate_quad_masmen -> .)
    OR              reduce using rule 96 (r_generate_quad_masmen -> .)
    PARENT_C        reduce using rule 96 (r_generate_quad_masmen -> .)
    COMA            reduce using rule 96 (r_generate_quad_masmen -> .)
    PUNTOCOMA       reduce using rule 96 (r_generate_quad_masmen -> .)
    CORCHETE_C      reduce using rule 96 (r_generate_quad_masmen -> .)
    HASTA           reduce using rule 96 (r_generate_quad_masmen -> .)
    HACER           reduce using rule 96 (r_generate_quad_masmen -> .)

    r_generate_quad_masmen         shift and go to state 148

state 111

    (92) termino -> factor . r_generate_quad_muldiv
    (93) termino -> factor . r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> factor . r_generate_quad_muldiv DIV r_push_oper termino
    (97) r_generate_quad_muldiv -> .

    POR             reduce using rule 97 (r_generate_quad_muldiv -> .)
    DIV             reduce using rule 97 (r_generate_quad_muldiv -> .)
    MAS             reduce using rule 97 (r_generate_quad_muldiv -> .)
    MENOS           reduce using rule 97 (r_generate_quad_muldiv -> .)
    MAYORQUE        reduce using rule 97 (r_generate_quad_muldiv -> .)
    MENORQUE        reduce using rule 97 (r_generate_quad_muldiv -> .)
    MAYORIGUAL      reduce using rule 97 (r_generate_quad_muldiv -> .)
    MENORIGUAL      reduce using rule 97 (r_generate_quad_muldiv -> .)
    IGUALIGUAL      reduce using rule 97 (r_generate_quad_muldiv -> .)
    DIFERENTE       reduce using rule 97 (r_generate_quad_muldiv -> .)
    AND             reduce using rule 97 (r_generate_quad_muldiv -> .)
    OR              reduce using rule 97 (r_generate_quad_muldiv -> .)
    PARENT_C        reduce using rule 97 (r_generate_quad_muldiv -> .)
    COMA            reduce using rule 97 (r_generate_quad_muldiv -> .)
    PUNTOCOMA       reduce using rule 97 (r_generate_quad_muldiv -> .)
    CORCHETE_C      reduce using rule 97 (r_generate_quad_muldiv -> .)
    HASTA           reduce using rule 97 (r_generate_quad_muldiv -> .)
    HACER           reduce using rule 97 (r_generate_quad_muldiv -> .)

    r_generate_quad_muldiv         shift and go to state 149

state 112

    (99) factor -> CTE_I . r_push_cte_i
    (104) r_push_cte_i -> .

    POR             reduce using rule 104 (r_push_cte_i -> .)
    DIV             reduce using rule 104 (r_push_cte_i -> .)
    MAS             reduce using rule 104 (r_push_cte_i -> .)
    MENOS           reduce using rule 104 (r_push_cte_i -> .)
    MAYORQUE        reduce using rule 104 (r_push_cte_i -> .)
    MENORQUE        reduce using rule 104 (r_push_cte_i -> .)
    MAYORIGUAL      reduce using rule 104 (r_push_cte_i -> .)
    MENORIGUAL      reduce using rule 104 (r_push_cte_i -> .)
    IGUALIGUAL      reduce using rule 104 (r_push_cte_i -> .)
    DIFERENTE       reduce using rule 104 (r_push_cte_i -> .)
    AND             reduce using rule 104 (r_push_cte_i -> .)
    OR              reduce using rule 104 (r_push_cte_i -> .)
    PARENT_C        reduce using rule 104 (r_push_cte_i -> .)
    COMA            reduce using rule 104 (r_push_cte_i -> .)
    PUNTOCOMA       reduce using rule 104 (r_push_cte_i -> .)
    CORCHETE_C      reduce using rule 104 (r_push_cte_i -> .)
    HASTA           reduce using rule 104 (r_push_cte_i -> .)
    HACER           reduce using rule 104 (r_push_cte_i -> .)

    r_push_cte_i                   shift and go to state 150

state 113

    (100) factor -> CTE_F . r_push_cte_f
    (105) r_push_cte_f -> .

    POR             reduce using rule 105 (r_push_cte_f -> .)
    DIV             reduce using rule 105 (r_push_cte_f -> .)
    MAS             reduce using rule 105 (r_push_cte_f -> .)
    MENOS           reduce using rule 105 (r_push_cte_f -> .)
    MAYORQUE        reduce using rule 105 (r_push_cte_f -> .)
    MENORQUE        reduce using rule 105 (r_push_cte_f -> .)
    MAYORIGUAL      reduce using rule 105 (r_push_cte_f -> .)
    MENORIGUAL      reduce using rule 105 (r_push_cte_f -> .)
    IGUALIGUAL      reduce using rule 105 (r_push_cte_f -> .)
    DIFERENTE       reduce using rule 105 (r_push_cte_f -> .)
    AND             reduce using rule 105 (r_push_cte_f -> .)
    OR              reduce using rule 105 (r_push_cte_f -> .)
    PARENT_C        reduce using rule 105 (r_push_cte_f -> .)
    COMA            reduce using rule 105 (r_push_cte_f -> .)
    PUNTOCOMA       reduce using rule 105 (r_push_cte_f -> .)
    CORCHETE_C      reduce using rule 105 (r_push_cte_f -> .)
    HASTA           reduce using rule 105 (r_push_cte_f -> .)
    HACER           reduce using rule 105 (r_push_cte_f -> .)

    r_push_cte_f                   shift and go to state 151

state 114

    (101) factor -> CTE_CH . r_push_cte_c
    (106) r_push_cte_c -> .

    POR             reduce using rule 106 (r_push_cte_c -> .)
    DIV             reduce using rule 106 (r_push_cte_c -> .)
    MAS             reduce using rule 106 (r_push_cte_c -> .)
    MENOS           reduce using rule 106 (r_push_cte_c -> .)
    MAYORQUE        reduce using rule 106 (r_push_cte_c -> .)
    MENORQUE        reduce using rule 106 (r_push_cte_c -> .)
    MAYORIGUAL      reduce using rule 106 (r_push_cte_c -> .)
    MENORIGUAL      reduce using rule 106 (r_push_cte_c -> .)
    IGUALIGUAL      reduce using rule 106 (r_push_cte_c -> .)
    DIFERENTE       reduce using rule 106 (r_push_cte_c -> .)
    AND             reduce using rule 106 (r_push_cte_c -> .)
    OR              reduce using rule 106 (r_push_cte_c -> .)
    PARENT_C        reduce using rule 106 (r_push_cte_c -> .)
    COMA            reduce using rule 106 (r_push_cte_c -> .)
    PUNTOCOMA       reduce using rule 106 (r_push_cte_c -> .)
    CORCHETE_C      reduce using rule 106 (r_push_cte_c -> .)
    HASTA           reduce using rule 106 (r_push_cte_c -> .)
    HACER           reduce using rule 106 (r_push_cte_c -> .)

    r_push_cte_c                   shift and go to state 152

state 115

    (102) factor -> variable .

    POR             reduce using rule 102 (factor -> variable .)
    DIV             reduce using rule 102 (factor -> variable .)
    MAS             reduce using rule 102 (factor -> variable .)
    MENOS           reduce using rule 102 (factor -> variable .)
    MAYORQUE        reduce using rule 102 (factor -> variable .)
    MENORQUE        reduce using rule 102 (factor -> variable .)
    MAYORIGUAL      reduce using rule 102 (factor -> variable .)
    MENORIGUAL      reduce using rule 102 (factor -> variable .)
    IGUALIGUAL      reduce using rule 102 (factor -> variable .)
    DIFERENTE       reduce using rule 102 (factor -> variable .)
    AND             reduce using rule 102 (factor -> variable .)
    OR              reduce using rule 102 (factor -> variable .)
    PARENT_C        reduce using rule 102 (factor -> variable .)
    COMA            reduce using rule 102 (factor -> variable .)
    PUNTOCOMA       reduce using rule 102 (factor -> variable .)
    CORCHETE_C      reduce using rule 102 (factor -> variable .)
    HASTA           reduce using rule 102 (factor -> variable .)
    HACER           reduce using rule 102 (factor -> variable .)


state 116

    (103) factor -> llamada_exp .

    POR             reduce using rule 103 (factor -> llamada_exp .)
    DIV             reduce using rule 103 (factor -> llamada_exp .)
    MAS             reduce using rule 103 (factor -> llamada_exp .)
    MENOS           reduce using rule 103 (factor -> llamada_exp .)
    MAYORQUE        reduce using rule 103 (factor -> llamada_exp .)
    MENORQUE        reduce using rule 103 (factor -> llamada_exp .)
    MAYORIGUAL      reduce using rule 103 (factor -> llamada_exp .)
    MENORIGUAL      reduce using rule 103 (factor -> llamada_exp .)
    IGUALIGUAL      reduce using rule 103 (factor -> llamada_exp .)
    DIFERENTE       reduce using rule 103 (factor -> llamada_exp .)
    AND             reduce using rule 103 (factor -> llamada_exp .)
    OR              reduce using rule 103 (factor -> llamada_exp .)
    PARENT_C        reduce using rule 103 (factor -> llamada_exp .)
    COMA            reduce using rule 103 (factor -> llamada_exp .)
    PUNTOCOMA       reduce using rule 103 (factor -> llamada_exp .)
    CORCHETE_C      reduce using rule 103 (factor -> llamada_exp .)
    HASTA           reduce using rule 103 (factor -> llamada_exp .)
    HACER           reduce using rule 103 (factor -> llamada_exp .)


state 117

    (23) variable -> ID . r_push_id
    (24) variable -> ID . r_push_id dim
    (66) llamada_exp -> ID . r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> ID . r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos
    (25) r_push_id -> .
    (63) r_check_func_exists -> .

    CORCHETE_A      reduce using rule 25 (r_push_id -> .)
    POR             reduce using rule 25 (r_push_id -> .)
    DIV             reduce using rule 25 (r_push_id -> .)
    MAS             reduce using rule 25 (r_push_id -> .)
    MENOS           reduce using rule 25 (r_push_id -> .)
    MAYORQUE        reduce using rule 25 (r_push_id -> .)
    MENORQUE        reduce using rule 25 (r_push_id -> .)
    MAYORIGUAL      reduce using rule 25 (r_push_id -> .)
    MENORIGUAL      reduce using rule 25 (r_push_id -> .)
    IGUALIGUAL      reduce using rule 25 (r_push_id -> .)
    DIFERENTE       reduce using rule 25 (r_push_id -> .)
    AND             reduce using rule 25 (r_push_id -> .)
    OR              reduce using rule 25 (r_push_id -> .)
    PARENT_C        reduce using rule 25 (r_push_id -> .)
    COMA            reduce using rule 25 (r_push_id -> .)
    PUNTOCOMA       reduce using rule 25 (r_push_id -> .)
    CORCHETE_C      reduce using rule 25 (r_push_id -> .)
    HASTA           reduce using rule 25 (r_push_id -> .)
    HACER           reduce using rule 25 (r_push_id -> .)
    PARENT_A        reduce using rule 63 (r_check_func_exists -> .)

    r_push_id                      shift and go to state 85
    r_check_func_exists            shift and go to state 153

state 118

    (111) lectura -> LEER PARENT_A variables . PARENT_C

    PARENT_C        shift and go to state 154


state 119

    (26) variables -> variable . r_generate_quad_leer
    (27) variables -> variable . r_generate_quad_leer COMA variables
    (112) r_generate_quad_leer -> .

    COMA            reduce using rule 112 (r_generate_quad_leer -> .)
    PARENT_C        reduce using rule 112 (r_generate_quad_leer -> .)

    r_generate_quad_leer           shift and go to state 155

state 120

    (23) variable -> ID . r_push_id
    (24) variable -> ID . r_push_id dim
    (25) r_push_id -> .

    CORCHETE_A      reduce using rule 25 (r_push_id -> .)
    COMA            reduce using rule 25 (r_push_id -> .)
    PARENT_C        reduce using rule 25 (r_push_id -> .)

    r_push_id                      shift and go to state 85

state 121

    (113) escritura -> ESCRIBIR PARENT_A escr . PARENT_C

    PARENT_C        shift and go to state 156


state 122

    (118) escr -> escritura_dos . r_generate_quad_escr
    (119) escr -> escritura_dos . r_generate_quad_escr COMA escr
    (117) r_generate_quad_escr -> .

    COMA            reduce using rule 117 (r_generate_quad_escr -> .)
    PARENT_C        reduce using rule 117 (r_generate_quad_escr -> .)

    r_generate_quad_escr           shift and go to state 157

state 123

    (114) escritura_dos -> CTE_STR . r_push_cte_str
    (116) r_push_cte_str -> .

    COMA            reduce using rule 116 (r_push_cte_str -> .)
    PARENT_C        reduce using rule 116 (r_push_cte_str -> .)

    r_push_cte_str                 shift and go to state 158

state 124

    (115) escritura_dos -> expresion .

    COMA            reduce using rule 115 (escritura_dos -> expresion .)
    PARENT_C        reduce using rule 115 (escritura_dos -> expresion .)


state 125

    (121) decision -> if r_goto_ifelse else . r_end_if
    (124) r_end_if -> .

    ID              reduce using rule 124 (r_end_if -> .)
    REGRESA         reduce using rule 124 (r_end_if -> .)
    LEER            reduce using rule 124 (r_end_if -> .)
    ESCRIBIR        reduce using rule 124 (r_end_if -> .)
    DESDE           reduce using rule 124 (r_end_if -> .)
    MIENTRAS        reduce using rule 124 (r_end_if -> .)
    SI              reduce using rule 124 (r_end_if -> .)
    LLAVE_C         reduce using rule 124 (r_end_if -> .)

    r_end_if                       shift and go to state 159

state 126

    (126) else -> SINO . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 160


state 127

    (130) ciclo_for -> DESDE ID r_save_var_for . IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for

    IGUAL           shift and go to state 161


state 128

    (127) ciclo_while -> MIENTRAS r_save_jump PARENT_A . expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (74) expresion -> . t_expresion r_generate_quad_or
    (75) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (77) t_expresion -> . g_expresion r_generate_quad_and
    (78) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (80) g_expresion -> . m_expresion r_generate_quad_logicos
    (81) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    expresion                      shift and go to state 162
    t_expresion                    shift and go to state 107
    g_expresion                    shift and go to state 108
    m_expresion                    shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 129

    (122) if -> SI PARENT_A expresion . PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    PARENT_C        shift and go to state 163


state 130

    (43) var_funcs -> dec_vars dec_est .

    FUNCION         reduce using rule 43 (var_funcs -> dec_vars dec_est .)
    PRINCIPAL       reduce using rule 43 (var_funcs -> dec_vars dec_est .)


state 131

    (40) func_dos -> PARENT_A parametros PARENT_C save_params . var_funcs
    (42) var_funcs -> . dec_est
    (43) var_funcs -> . dec_vars dec_est
    (47) dec_est -> . LLAVE_A LLAVE_C
    (48) dec_est -> . LLAVE_A estatutos_dos LLAVE_C
    (10) dec_vars -> . VAR vars save_vars

    LLAVE_A         shift and go to state 41
    VAR             shift and go to state 12

    var_funcs                      shift and go to state 164
    dec_est                        shift and go to state 97
    dec_vars                       shift and go to state 98

state 132

    (44) parametros -> tipo_simple ID save_params_list .
    (45) parametros -> tipo_simple ID save_params_list . COMA parametros

    PARENT_C        reduce using rule 44 (parametros -> tipo_simple ID save_params_list .)
    COMA            shift and go to state 165


state 133

    (59) asignacion -> variable IGUAL r_push_oper expresion . r_generate_quad_asig
    (60) r_generate_quad_asig -> .

    PUNTOCOMA       reduce using rule 60 (r_generate_quad_asig -> .)

    r_generate_quad_asig           shift and go to state 166

state 134

    (61) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA . PARENT_C r_generate_gosub
    (62) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA . expresiones PARENT_C r_generate_gosub
    (70) expresiones -> . expresion r_generate_parameter
    (71) expresiones -> . expresion r_generate_parameter COMA r_act_param_count expresiones
    (74) expresion -> . t_expresion r_generate_quad_or
    (75) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (77) t_expresion -> . g_expresion r_generate_quad_and
    (78) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (80) g_expresion -> . m_expresion r_generate_quad_logicos
    (81) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_C        shift and go to state 167
    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    expresiones                    shift and go to state 168
    expresion                      shift and go to state 169
    t_expresion                    shift and go to state 107
    g_expresion                    shift and go to state 108
    m_expresion                    shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 135

    (28) dim -> CORCHETE_A r_is_array . expresion r_verify_dim CORCHETE_C r_sum_addr
    (74) expresion -> . t_expresion r_generate_quad_or
    (75) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (77) t_expresion -> . g_expresion r_generate_quad_and
    (78) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (80) g_expresion -> . m_expresion r_generate_quad_logicos
    (81) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    expresion                      shift and go to state 170
    t_expresion                    shift and go to state 107
    g_expresion                    shift and go to state 108
    m_expresion                    shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 136

    (98) factor -> PARENT_A r_push_ff . expresion PARENT_C r_pop_ff
    (74) expresion -> . t_expresion r_generate_quad_or
    (75) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (77) t_expresion -> . g_expresion r_generate_quad_and
    (78) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (80) g_expresion -> . m_expresion r_generate_quad_logicos
    (81) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    expresion                      shift and go to state 171
    t_expresion                    shift and go to state 107
    g_expresion                    shift and go to state 108
    m_expresion                    shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 137

    (109) retorno -> REGRESA PARENT_A expresion PARENT_C . r_generate_quad_retorno
    (110) r_generate_quad_retorno -> .

    PUNTOCOMA       reduce using rule 110 (r_generate_quad_retorno -> .)

    r_generate_quad_retorno        shift and go to state 172

state 138

    (74) expresion -> t_expresion r_generate_quad_or .
    (75) expresion -> t_expresion r_generate_quad_or . OR r_push_oper expresion

    PARENT_C        reduce using rule 74 (expresion -> t_expresion r_generate_quad_or .)
    COMA            reduce using rule 74 (expresion -> t_expresion r_generate_quad_or .)
    PUNTOCOMA       reduce using rule 74 (expresion -> t_expresion r_generate_quad_or .)
    CORCHETE_C      reduce using rule 74 (expresion -> t_expresion r_generate_quad_or .)
    HASTA           reduce using rule 74 (expresion -> t_expresion r_generate_quad_or .)
    HACER           reduce using rule 74 (expresion -> t_expresion r_generate_quad_or .)
    OR              shift and go to state 173


state 139

    (77) t_expresion -> g_expresion r_generate_quad_and .
    (78) t_expresion -> g_expresion r_generate_quad_and . AND r_push_oper t_expresion

    OR              reduce using rule 77 (t_expresion -> g_expresion r_generate_quad_and .)
    PARENT_C        reduce using rule 77 (t_expresion -> g_expresion r_generate_quad_and .)
    COMA            reduce using rule 77 (t_expresion -> g_expresion r_generate_quad_and .)
    PUNTOCOMA       reduce using rule 77 (t_expresion -> g_expresion r_generate_quad_and .)
    CORCHETE_C      reduce using rule 77 (t_expresion -> g_expresion r_generate_quad_and .)
    HASTA           reduce using rule 77 (t_expresion -> g_expresion r_generate_quad_and .)
    HACER           reduce using rule 77 (t_expresion -> g_expresion r_generate_quad_and .)
    AND             shift and go to state 174


state 140

    (80) g_expresion -> m_expresion r_generate_quad_logicos .

    AND             reduce using rule 80 (g_expresion -> m_expresion r_generate_quad_logicos .)
    OR              reduce using rule 80 (g_expresion -> m_expresion r_generate_quad_logicos .)
    PARENT_C        reduce using rule 80 (g_expresion -> m_expresion r_generate_quad_logicos .)
    COMA            reduce using rule 80 (g_expresion -> m_expresion r_generate_quad_logicos .)
    PUNTOCOMA       reduce using rule 80 (g_expresion -> m_expresion r_generate_quad_logicos .)
    CORCHETE_C      reduce using rule 80 (g_expresion -> m_expresion r_generate_quad_logicos .)
    HASTA           reduce using rule 80 (g_expresion -> m_expresion r_generate_quad_logicos .)
    HACER           reduce using rule 80 (g_expresion -> m_expresion r_generate_quad_logicos .)


state 141

    (81) g_expresion -> m_expresion op_logicos . m_expresion r_generate_quad_logicos
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    m_expresion                    shift and go to state 175
    termino                        shift and go to state 110
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 142

    (83) op_logicos -> MAYORQUE . r_push_oper
    (95) r_push_oper -> .

    PARENT_A        reduce using rule 95 (r_push_oper -> .)
    CTE_I           reduce using rule 95 (r_push_oper -> .)
    CTE_F           reduce using rule 95 (r_push_oper -> .)
    CTE_CH          reduce using rule 95 (r_push_oper -> .)
    ID              reduce using rule 95 (r_push_oper -> .)

    r_push_oper                    shift and go to state 176

state 143

    (84) op_logicos -> MENORQUE . r_push_oper
    (95) r_push_oper -> .

    PARENT_A        reduce using rule 95 (r_push_oper -> .)
    CTE_I           reduce using rule 95 (r_push_oper -> .)
    CTE_F           reduce using rule 95 (r_push_oper -> .)
    CTE_CH          reduce using rule 95 (r_push_oper -> .)
    ID              reduce using rule 95 (r_push_oper -> .)

    r_push_oper                    shift and go to state 177

state 144

    (85) op_logicos -> MAYORIGUAL . r_push_oper
    (95) r_push_oper -> .

    PARENT_A        reduce using rule 95 (r_push_oper -> .)
    CTE_I           reduce using rule 95 (r_push_oper -> .)
    CTE_F           reduce using rule 95 (r_push_oper -> .)
    CTE_CH          reduce using rule 95 (r_push_oper -> .)
    ID              reduce using rule 95 (r_push_oper -> .)

    r_push_oper                    shift and go to state 178

state 145

    (86) op_logicos -> MENORIGUAL . r_push_oper
    (95) r_push_oper -> .

    PARENT_A        reduce using rule 95 (r_push_oper -> .)
    CTE_I           reduce using rule 95 (r_push_oper -> .)
    CTE_F           reduce using rule 95 (r_push_oper -> .)
    CTE_CH          reduce using rule 95 (r_push_oper -> .)
    ID              reduce using rule 95 (r_push_oper -> .)

    r_push_oper                    shift and go to state 179

state 146

    (87) op_logicos -> IGUALIGUAL . r_push_oper
    (95) r_push_oper -> .

    PARENT_A        reduce using rule 95 (r_push_oper -> .)
    CTE_I           reduce using rule 95 (r_push_oper -> .)
    CTE_F           reduce using rule 95 (r_push_oper -> .)
    CTE_CH          reduce using rule 95 (r_push_oper -> .)
    ID              reduce using rule 95 (r_push_oper -> .)

    r_push_oper                    shift and go to state 180

state 147

    (88) op_logicos -> DIFERENTE . r_push_oper
    (95) r_push_oper -> .

    PARENT_A        reduce using rule 95 (r_push_oper -> .)
    CTE_I           reduce using rule 95 (r_push_oper -> .)
    CTE_F           reduce using rule 95 (r_push_oper -> .)
    CTE_CH          reduce using rule 95 (r_push_oper -> .)
    ID              reduce using rule 95 (r_push_oper -> .)

    r_push_oper                    shift and go to state 181

state 148

    (89) m_expresion -> termino r_generate_quad_masmen .
    (90) m_expresion -> termino r_generate_quad_masmen . MAS r_push_oper m_expresion
    (91) m_expresion -> termino r_generate_quad_masmen . MENOS r_push_oper m_expresion

    MAYORQUE        reduce using rule 89 (m_expresion -> termino r_generate_quad_masmen .)
    MENORQUE        reduce using rule 89 (m_expresion -> termino r_generate_quad_masmen .)
    MAYORIGUAL      reduce using rule 89 (m_expresion -> termino r_generate_quad_masmen .)
    MENORIGUAL      reduce using rule 89 (m_expresion -> termino r_generate_quad_masmen .)
    IGUALIGUAL      reduce using rule 89 (m_expresion -> termino r_generate_quad_masmen .)
    DIFERENTE       reduce using rule 89 (m_expresion -> termino r_generate_quad_masmen .)
    AND             reduce using rule 89 (m_expresion -> termino r_generate_quad_masmen .)
    OR              reduce using rule 89 (m_expresion -> termino r_generate_quad_masmen .)
    PARENT_C        reduce using rule 89 (m_expresion -> termino r_generate_quad_masmen .)
    COMA            reduce using rule 89 (m_expresion -> termino r_generate_quad_masmen .)
    PUNTOCOMA       reduce using rule 89 (m_expresion -> termino r_generate_quad_masmen .)
    CORCHETE_C      reduce using rule 89 (m_expresion -> termino r_generate_quad_masmen .)
    HASTA           reduce using rule 89 (m_expresion -> termino r_generate_quad_masmen .)
    HACER           reduce using rule 89 (m_expresion -> termino r_generate_quad_masmen .)
    MAS             shift and go to state 182
    MENOS           shift and go to state 183


state 149

    (92) termino -> factor r_generate_quad_muldiv .
    (93) termino -> factor r_generate_quad_muldiv . POR r_push_oper termino
    (94) termino -> factor r_generate_quad_muldiv . DIV r_push_oper termino

    MAS             reduce using rule 92 (termino -> factor r_generate_quad_muldiv .)
    MENOS           reduce using rule 92 (termino -> factor r_generate_quad_muldiv .)
    MAYORQUE        reduce using rule 92 (termino -> factor r_generate_quad_muldiv .)
    MENORQUE        reduce using rule 92 (termino -> factor r_generate_quad_muldiv .)
    MAYORIGUAL      reduce using rule 92 (termino -> factor r_generate_quad_muldiv .)
    MENORIGUAL      reduce using rule 92 (termino -> factor r_generate_quad_muldiv .)
    IGUALIGUAL      reduce using rule 92 (termino -> factor r_generate_quad_muldiv .)
    DIFERENTE       reduce using rule 92 (termino -> factor r_generate_quad_muldiv .)
    AND             reduce using rule 92 (termino -> factor r_generate_quad_muldiv .)
    OR              reduce using rule 92 (termino -> factor r_generate_quad_muldiv .)
    PARENT_C        reduce using rule 92 (termino -> factor r_generate_quad_muldiv .)
    COMA            reduce using rule 92 (termino -> factor r_generate_quad_muldiv .)
    PUNTOCOMA       reduce using rule 92 (termino -> factor r_generate_quad_muldiv .)
    CORCHETE_C      reduce using rule 92 (termino -> factor r_generate_quad_muldiv .)
    HASTA           reduce using rule 92 (termino -> factor r_generate_quad_muldiv .)
    HACER           reduce using rule 92 (termino -> factor r_generate_quad_muldiv .)
    POR             shift and go to state 184
    DIV             shift and go to state 185


state 150

    (99) factor -> CTE_I r_push_cte_i .

    POR             reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    DIV             reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    MAS             reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    MENOS           reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    MAYORQUE        reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    MENORQUE        reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    MAYORIGUAL      reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    MENORIGUAL      reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    IGUALIGUAL      reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    DIFERENTE       reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    AND             reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    OR              reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    PARENT_C        reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    COMA            reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    PUNTOCOMA       reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    CORCHETE_C      reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    HASTA           reduce using rule 99 (factor -> CTE_I r_push_cte_i .)
    HACER           reduce using rule 99 (factor -> CTE_I r_push_cte_i .)


state 151

    (100) factor -> CTE_F r_push_cte_f .

    POR             reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    DIV             reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    MAS             reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    MENOS           reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    MAYORQUE        reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    MENORQUE        reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    MAYORIGUAL      reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    MENORIGUAL      reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    IGUALIGUAL      reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    DIFERENTE       reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    AND             reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    OR              reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    PARENT_C        reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    COMA            reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    PUNTOCOMA       reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    CORCHETE_C      reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    HASTA           reduce using rule 100 (factor -> CTE_F r_push_cte_f .)
    HACER           reduce using rule 100 (factor -> CTE_F r_push_cte_f .)


state 152

    (101) factor -> CTE_CH r_push_cte_c .

    POR             reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    DIV             reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    MAS             reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    MENOS           reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    MAYORQUE        reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    MENORQUE        reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    MAYORIGUAL      reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    MENORIGUAL      reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    IGUALIGUAL      reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    DIFERENTE       reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    AND             reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    OR              reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    PARENT_C        reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    COMA            reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    PUNTOCOMA       reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    CORCHETE_C      reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    HASTA           reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)
    HACER           reduce using rule 101 (factor -> CTE_CH r_push_cte_c .)


state 153

    (66) llamada_exp -> ID r_check_func_exists . PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> ID r_check_func_exists . PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 186


state 154

    (111) lectura -> LEER PARENT_A variables PARENT_C .

    PUNTOCOMA       reduce using rule 111 (lectura -> LEER PARENT_A variables PARENT_C .)


state 155

    (26) variables -> variable r_generate_quad_leer .
    (27) variables -> variable r_generate_quad_leer . COMA variables

    PARENT_C        reduce using rule 26 (variables -> variable r_generate_quad_leer .)
    COMA            shift and go to state 187


state 156

    (113) escritura -> ESCRIBIR PARENT_A escr PARENT_C .

    PUNTOCOMA       reduce using rule 113 (escritura -> ESCRIBIR PARENT_A escr PARENT_C .)


state 157

    (118) escr -> escritura_dos r_generate_quad_escr .
    (119) escr -> escritura_dos r_generate_quad_escr . COMA escr

    PARENT_C        reduce using rule 118 (escr -> escritura_dos r_generate_quad_escr .)
    COMA            shift and go to state 188


state 158

    (114) escritura_dos -> CTE_STR r_push_cte_str .

    COMA            reduce using rule 114 (escritura_dos -> CTE_STR r_push_cte_str .)
    PARENT_C        reduce using rule 114 (escritura_dos -> CTE_STR r_push_cte_str .)


state 159

    (121) decision -> if r_goto_ifelse else r_end_if .

    ID              reduce using rule 121 (decision -> if r_goto_ifelse else r_end_if .)
    REGRESA         reduce using rule 121 (decision -> if r_goto_ifelse else r_end_if .)
    LEER            reduce using rule 121 (decision -> if r_goto_ifelse else r_end_if .)
    ESCRIBIR        reduce using rule 121 (decision -> if r_goto_ifelse else r_end_if .)
    DESDE           reduce using rule 121 (decision -> if r_goto_ifelse else r_end_if .)
    MIENTRAS        reduce using rule 121 (decision -> if r_goto_ifelse else r_end_if .)
    SI              reduce using rule 121 (decision -> if r_goto_ifelse else r_end_if .)
    LLAVE_C         reduce using rule 121 (decision -> if r_goto_ifelse else r_end_if .)


state 160

    (126) else -> SINO LLAVE_A . estatutos_dos LLAVE_C
    (57) estatutos_dos -> . estatutos
    (58) estatutos_dos -> . estatutos estatutos_dos
    (49) estatutos -> . asignacion PUNTOCOMA
    (50) estatutos -> . llamada PUNTOCOMA
    (51) estatutos -> . retorno PUNTOCOMA
    (52) estatutos -> . lectura PUNTOCOMA
    (53) estatutos -> . escritura PUNTOCOMA
    (54) estatutos -> . decision
    (55) estatutos -> . ciclo_for
    (56) estatutos -> . ciclo_while
    (59) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (61) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (62) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (109) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (111) lectura -> . LEER PARENT_A variables PARENT_C
    (113) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (120) decision -> . if r_end_if
    (121) decision -> . if r_goto_ifelse else r_end_if
    (130) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (127) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (122) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 61
    REGRESA         shift and go to state 62
    LEER            shift and go to state 63
    ESCRIBIR        shift and go to state 64
    DESDE           shift and go to state 66
    MIENTRAS        shift and go to state 67
    SI              shift and go to state 68

    estatutos_dos                  shift and go to state 189
    estatutos                      shift and go to state 51
    asignacion                     shift and go to state 52
    llamada                        shift and go to state 53
    retorno                        shift and go to state 54
    lectura                        shift and go to state 55
    escritura                      shift and go to state 56
    decision                       shift and go to state 57
    ciclo_for                      shift and go to state 58
    ciclo_while                    shift and go to state 59
    variable                       shift and go to state 60
    if                             shift and go to state 65

state 161

    (130) ciclo_for -> DESDE ID r_save_var_for IGUAL . expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (74) expresion -> . t_expresion r_generate_quad_or
    (75) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (77) t_expresion -> . g_expresion r_generate_quad_and
    (78) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (80) g_expresion -> . m_expresion r_generate_quad_logicos
    (81) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    expresion                      shift and go to state 190
    t_expresion                    shift and go to state 107
    g_expresion                    shift and go to state 108
    m_expresion                    shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 162

    (127) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion . PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while

    PARENT_C        shift and go to state 191


state 163

    (122) if -> SI PARENT_A expresion PARENT_C . r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C
    (123) r_check_exp_type -> .

    ENTONCES        reduce using rule 123 (r_check_exp_type -> .)

    r_check_exp_type               shift and go to state 192

state 164

    (40) func_dos -> PARENT_A parametros PARENT_C save_params var_funcs .

    FUNCION         reduce using rule 40 (func_dos -> PARENT_A parametros PARENT_C save_params var_funcs .)
    PRINCIPAL       reduce using rule 40 (func_dos -> PARENT_A parametros PARENT_C save_params var_funcs .)


state 165

    (45) parametros -> tipo_simple ID save_params_list COMA . parametros
    (44) parametros -> . tipo_simple ID save_params_list
    (45) parametros -> . tipo_simple ID save_params_list COMA parametros
    (14) tipo_simple -> . INT
    (15) tipo_simple -> . FLOAT
    (16) tipo_simple -> . CHAR

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    CHAR            shift and go to state 23

    tipo_simple                    shift and go to state 74
    parametros                     shift and go to state 193

state 166

    (59) asignacion -> variable IGUAL r_push_oper expresion r_generate_quad_asig .

    PUNTOCOMA       reduce using rule 59 (asignacion -> variable IGUAL r_push_oper expresion r_generate_quad_asig .)


state 167

    (61) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C . r_generate_gosub
    (65) r_generate_gosub -> .

    PUNTOCOMA       reduce using rule 65 (r_generate_gosub -> .)

    r_generate_gosub               shift and go to state 194

state 168

    (62) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA expresiones . PARENT_C r_generate_gosub

    PARENT_C        shift and go to state 195


state 169

    (70) expresiones -> expresion . r_generate_parameter
    (71) expresiones -> expresion . r_generate_parameter COMA r_act_param_count expresiones
    (72) r_generate_parameter -> .

    COMA            reduce using rule 72 (r_generate_parameter -> .)
    PARENT_C        reduce using rule 72 (r_generate_parameter -> .)

    r_generate_parameter           shift and go to state 196

state 170

    (28) dim -> CORCHETE_A r_is_array expresion . r_verify_dim CORCHETE_C r_sum_addr
    (30) r_verify_dim -> .

    CORCHETE_C      reduce using rule 30 (r_verify_dim -> .)

    r_verify_dim                   shift and go to state 197

state 171

    (98) factor -> PARENT_A r_push_ff expresion . PARENT_C r_pop_ff

    PARENT_C        shift and go to state 198


state 172

    (109) retorno -> REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno .

    PUNTOCOMA       reduce using rule 109 (retorno -> REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno .)


state 173

    (75) expresion -> t_expresion r_generate_quad_or OR . r_push_oper expresion
    (95) r_push_oper -> .

    PARENT_A        reduce using rule 95 (r_push_oper -> .)
    CTE_I           reduce using rule 95 (r_push_oper -> .)
    CTE_F           reduce using rule 95 (r_push_oper -> .)
    CTE_CH          reduce using rule 95 (r_push_oper -> .)
    ID              reduce using rule 95 (r_push_oper -> .)

    r_push_oper                    shift and go to state 199

state 174

    (78) t_expresion -> g_expresion r_generate_quad_and AND . r_push_oper t_expresion
    (95) r_push_oper -> .

    PARENT_A        reduce using rule 95 (r_push_oper -> .)
    CTE_I           reduce using rule 95 (r_push_oper -> .)
    CTE_F           reduce using rule 95 (r_push_oper -> .)
    CTE_CH          reduce using rule 95 (r_push_oper -> .)
    ID              reduce using rule 95 (r_push_oper -> .)

    r_push_oper                    shift and go to state 200

state 175

    (81) g_expresion -> m_expresion op_logicos m_expresion . r_generate_quad_logicos
    (82) r_generate_quad_logicos -> .

    AND             reduce using rule 82 (r_generate_quad_logicos -> .)
    OR              reduce using rule 82 (r_generate_quad_logicos -> .)
    PARENT_C        reduce using rule 82 (r_generate_quad_logicos -> .)
    COMA            reduce using rule 82 (r_generate_quad_logicos -> .)
    PUNTOCOMA       reduce using rule 82 (r_generate_quad_logicos -> .)
    CORCHETE_C      reduce using rule 82 (r_generate_quad_logicos -> .)
    HASTA           reduce using rule 82 (r_generate_quad_logicos -> .)
    HACER           reduce using rule 82 (r_generate_quad_logicos -> .)

    r_generate_quad_logicos        shift and go to state 201

state 176

    (83) op_logicos -> MAYORQUE r_push_oper .

    PARENT_A        reduce using rule 83 (op_logicos -> MAYORQUE r_push_oper .)
    CTE_I           reduce using rule 83 (op_logicos -> MAYORQUE r_push_oper .)
    CTE_F           reduce using rule 83 (op_logicos -> MAYORQUE r_push_oper .)
    CTE_CH          reduce using rule 83 (op_logicos -> MAYORQUE r_push_oper .)
    ID              reduce using rule 83 (op_logicos -> MAYORQUE r_push_oper .)


state 177

    (84) op_logicos -> MENORQUE r_push_oper .

    PARENT_A        reduce using rule 84 (op_logicos -> MENORQUE r_push_oper .)
    CTE_I           reduce using rule 84 (op_logicos -> MENORQUE r_push_oper .)
    CTE_F           reduce using rule 84 (op_logicos -> MENORQUE r_push_oper .)
    CTE_CH          reduce using rule 84 (op_logicos -> MENORQUE r_push_oper .)
    ID              reduce using rule 84 (op_logicos -> MENORQUE r_push_oper .)


state 178

    (85) op_logicos -> MAYORIGUAL r_push_oper .

    PARENT_A        reduce using rule 85 (op_logicos -> MAYORIGUAL r_push_oper .)
    CTE_I           reduce using rule 85 (op_logicos -> MAYORIGUAL r_push_oper .)
    CTE_F           reduce using rule 85 (op_logicos -> MAYORIGUAL r_push_oper .)
    CTE_CH          reduce using rule 85 (op_logicos -> MAYORIGUAL r_push_oper .)
    ID              reduce using rule 85 (op_logicos -> MAYORIGUAL r_push_oper .)


state 179

    (86) op_logicos -> MENORIGUAL r_push_oper .

    PARENT_A        reduce using rule 86 (op_logicos -> MENORIGUAL r_push_oper .)
    CTE_I           reduce using rule 86 (op_logicos -> MENORIGUAL r_push_oper .)
    CTE_F           reduce using rule 86 (op_logicos -> MENORIGUAL r_push_oper .)
    CTE_CH          reduce using rule 86 (op_logicos -> MENORIGUAL r_push_oper .)
    ID              reduce using rule 86 (op_logicos -> MENORIGUAL r_push_oper .)


state 180

    (87) op_logicos -> IGUALIGUAL r_push_oper .

    PARENT_A        reduce using rule 87 (op_logicos -> IGUALIGUAL r_push_oper .)
    CTE_I           reduce using rule 87 (op_logicos -> IGUALIGUAL r_push_oper .)
    CTE_F           reduce using rule 87 (op_logicos -> IGUALIGUAL r_push_oper .)
    CTE_CH          reduce using rule 87 (op_logicos -> IGUALIGUAL r_push_oper .)
    ID              reduce using rule 87 (op_logicos -> IGUALIGUAL r_push_oper .)


state 181

    (88) op_logicos -> DIFERENTE r_push_oper .

    PARENT_A        reduce using rule 88 (op_logicos -> DIFERENTE r_push_oper .)
    CTE_I           reduce using rule 88 (op_logicos -> DIFERENTE r_push_oper .)
    CTE_F           reduce using rule 88 (op_logicos -> DIFERENTE r_push_oper .)
    CTE_CH          reduce using rule 88 (op_logicos -> DIFERENTE r_push_oper .)
    ID              reduce using rule 88 (op_logicos -> DIFERENTE r_push_oper .)


state 182

    (90) m_expresion -> termino r_generate_quad_masmen MAS . r_push_oper m_expresion
    (95) r_push_oper -> .

    PARENT_A        reduce using rule 95 (r_push_oper -> .)
    CTE_I           reduce using rule 95 (r_push_oper -> .)
    CTE_F           reduce using rule 95 (r_push_oper -> .)
    CTE_CH          reduce using rule 95 (r_push_oper -> .)
    ID              reduce using rule 95 (r_push_oper -> .)

    r_push_oper                    shift and go to state 202

state 183

    (91) m_expresion -> termino r_generate_quad_masmen MENOS . r_push_oper m_expresion
    (95) r_push_oper -> .

    PARENT_A        reduce using rule 95 (r_push_oper -> .)
    CTE_I           reduce using rule 95 (r_push_oper -> .)
    CTE_F           reduce using rule 95 (r_push_oper -> .)
    CTE_CH          reduce using rule 95 (r_push_oper -> .)
    ID              reduce using rule 95 (r_push_oper -> .)

    r_push_oper                    shift and go to state 203

state 184

    (93) termino -> factor r_generate_quad_muldiv POR . r_push_oper termino
    (95) r_push_oper -> .

    PARENT_A        reduce using rule 95 (r_push_oper -> .)
    CTE_I           reduce using rule 95 (r_push_oper -> .)
    CTE_F           reduce using rule 95 (r_push_oper -> .)
    CTE_CH          reduce using rule 95 (r_push_oper -> .)
    ID              reduce using rule 95 (r_push_oper -> .)

    r_push_oper                    shift and go to state 204

state 185

    (94) termino -> factor r_generate_quad_muldiv DIV . r_push_oper termino
    (95) r_push_oper -> .

    PARENT_A        reduce using rule 95 (r_push_oper -> .)
    CTE_I           reduce using rule 95 (r_push_oper -> .)
    CTE_F           reduce using rule 95 (r_push_oper -> .)
    CTE_CH          reduce using rule 95 (r_push_oper -> .)
    ID              reduce using rule 95 (r_push_oper -> .)

    r_push_oper                    shift and go to state 205

state 186

    (66) llamada_exp -> ID r_check_func_exists PARENT_A . r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> ID r_check_func_exists PARENT_A . r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos
    (68) r_generate_ERA_dos -> .

    PARENT_C        reduce using rule 68 (r_generate_ERA_dos -> .)
    PARENT_A        reduce using rule 68 (r_generate_ERA_dos -> .)
    CTE_I           reduce using rule 68 (r_generate_ERA_dos -> .)
    CTE_F           reduce using rule 68 (r_generate_ERA_dos -> .)
    CTE_CH          reduce using rule 68 (r_generate_ERA_dos -> .)
    ID              reduce using rule 68 (r_generate_ERA_dos -> .)

    r_generate_ERA_dos             shift and go to state 206

state 187

    (27) variables -> variable r_generate_quad_leer COMA . variables
    (26) variables -> . variable r_generate_quad_leer
    (27) variables -> . variable r_generate_quad_leer COMA variables
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim

    ID              shift and go to state 120

    variable                       shift and go to state 119
    variables                      shift and go to state 207

state 188

    (119) escr -> escritura_dos r_generate_quad_escr COMA . escr
    (118) escr -> . escritura_dos r_generate_quad_escr
    (119) escr -> . escritura_dos r_generate_quad_escr COMA escr
    (114) escritura_dos -> . CTE_STR r_push_cte_str
    (115) escritura_dos -> . expresion
    (74) expresion -> . t_expresion r_generate_quad_or
    (75) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (77) t_expresion -> . g_expresion r_generate_quad_and
    (78) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (80) g_expresion -> . m_expresion r_generate_quad_logicos
    (81) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    CTE_STR         shift and go to state 123
    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    escritura_dos                  shift and go to state 122
    escr                           shift and go to state 208
    expresion                      shift and go to state 124
    t_expresion                    shift and go to state 107
    g_expresion                    shift and go to state 108
    m_expresion                    shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 189

    (126) else -> SINO LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 209


state 190

    (130) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion . r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (133) r_generate_quad_asig_for -> .

    HASTA           reduce using rule 133 (r_generate_quad_asig_for -> .)

    r_generate_quad_asig_for       shift and go to state 210

state 191

    (127) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C . r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (123) r_check_exp_type -> .

    HAZ             reduce using rule 123 (r_check_exp_type -> .)

    r_check_exp_type               shift and go to state 211

state 192

    (122) if -> SI PARENT_A expresion PARENT_C r_check_exp_type . ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ENTONCES        shift and go to state 212


state 193

    (45) parametros -> tipo_simple ID save_params_list COMA parametros .

    PARENT_C        reduce using rule 45 (parametros -> tipo_simple ID save_params_list COMA parametros .)


state 194

    (61) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub .

    PUNTOCOMA       reduce using rule 61 (llamada -> ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub .)


state 195

    (62) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C . r_generate_gosub
    (65) r_generate_gosub -> .

    PUNTOCOMA       reduce using rule 65 (r_generate_gosub -> .)

    r_generate_gosub               shift and go to state 213

state 196

    (70) expresiones -> expresion r_generate_parameter .
    (71) expresiones -> expresion r_generate_parameter . COMA r_act_param_count expresiones

    PARENT_C        reduce using rule 70 (expresiones -> expresion r_generate_parameter .)
    COMA            shift and go to state 214


state 197

    (28) dim -> CORCHETE_A r_is_array expresion r_verify_dim . CORCHETE_C r_sum_addr

    CORCHETE_C      shift and go to state 215


state 198

    (98) factor -> PARENT_A r_push_ff expresion PARENT_C . r_pop_ff
    (108) r_pop_ff -> .

    POR             reduce using rule 108 (r_pop_ff -> .)
    DIV             reduce using rule 108 (r_pop_ff -> .)
    MAS             reduce using rule 108 (r_pop_ff -> .)
    MENOS           reduce using rule 108 (r_pop_ff -> .)
    MAYORQUE        reduce using rule 108 (r_pop_ff -> .)
    MENORQUE        reduce using rule 108 (r_pop_ff -> .)
    MAYORIGUAL      reduce using rule 108 (r_pop_ff -> .)
    MENORIGUAL      reduce using rule 108 (r_pop_ff -> .)
    IGUALIGUAL      reduce using rule 108 (r_pop_ff -> .)
    DIFERENTE       reduce using rule 108 (r_pop_ff -> .)
    AND             reduce using rule 108 (r_pop_ff -> .)
    OR              reduce using rule 108 (r_pop_ff -> .)
    PARENT_C        reduce using rule 108 (r_pop_ff -> .)
    COMA            reduce using rule 108 (r_pop_ff -> .)
    PUNTOCOMA       reduce using rule 108 (r_pop_ff -> .)
    CORCHETE_C      reduce using rule 108 (r_pop_ff -> .)
    HASTA           reduce using rule 108 (r_pop_ff -> .)
    HACER           reduce using rule 108 (r_pop_ff -> .)

    r_pop_ff                       shift and go to state 216

state 199

    (75) expresion -> t_expresion r_generate_quad_or OR r_push_oper . expresion
    (74) expresion -> . t_expresion r_generate_quad_or
    (75) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (77) t_expresion -> . g_expresion r_generate_quad_and
    (78) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (80) g_expresion -> . m_expresion r_generate_quad_logicos
    (81) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    t_expresion                    shift and go to state 107
    expresion                      shift and go to state 217
    g_expresion                    shift and go to state 108
    m_expresion                    shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 200

    (78) t_expresion -> g_expresion r_generate_quad_and AND r_push_oper . t_expresion
    (77) t_expresion -> . g_expresion r_generate_quad_and
    (78) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (80) g_expresion -> . m_expresion r_generate_quad_logicos
    (81) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    g_expresion                    shift and go to state 108
    t_expresion                    shift and go to state 218
    m_expresion                    shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 201

    (81) g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .

    AND             reduce using rule 81 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    OR              reduce using rule 81 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    PARENT_C        reduce using rule 81 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    COMA            reduce using rule 81 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    PUNTOCOMA       reduce using rule 81 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    CORCHETE_C      reduce using rule 81 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    HASTA           reduce using rule 81 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    HACER           reduce using rule 81 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)


state 202

    (90) m_expresion -> termino r_generate_quad_masmen MAS r_push_oper . m_expresion
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    termino                        shift and go to state 110
    m_expresion                    shift and go to state 219
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 203

    (91) m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper . m_expresion
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    termino                        shift and go to state 110
    m_expresion                    shift and go to state 220
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 204

    (93) termino -> factor r_generate_quad_muldiv POR r_push_oper . termino
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    factor                         shift and go to state 111
    termino                        shift and go to state 221
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 205

    (94) termino -> factor r_generate_quad_muldiv DIV r_push_oper . termino
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    factor                         shift and go to state 111
    termino                        shift and go to state 222
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 206

    (66) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos . PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos . expresiones PARENT_C r_generate_gosub_dos
    (70) expresiones -> . expresion r_generate_parameter
    (71) expresiones -> . expresion r_generate_parameter COMA r_act_param_count expresiones
    (74) expresion -> . t_expresion r_generate_quad_or
    (75) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (77) t_expresion -> . g_expresion r_generate_quad_and
    (78) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (80) g_expresion -> . m_expresion r_generate_quad_logicos
    (81) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_C        shift and go to state 223
    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    expresiones                    shift and go to state 224
    expresion                      shift and go to state 169
    t_expresion                    shift and go to state 107
    g_expresion                    shift and go to state 108
    m_expresion                    shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 207

    (27) variables -> variable r_generate_quad_leer COMA variables .

    PARENT_C        reduce using rule 27 (variables -> variable r_generate_quad_leer COMA variables .)


state 208

    (119) escr -> escritura_dos r_generate_quad_escr COMA escr .

    PARENT_C        reduce using rule 119 (escr -> escritura_dos r_generate_quad_escr COMA escr .)


state 209

    (126) else -> SINO LLAVE_A estatutos_dos LLAVE_C .

    ID              reduce using rule 126 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 126 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 126 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 126 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 126 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 126 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 126 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 126 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)


state 210

    (130) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for . HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for

    HASTA           shift and go to state 225


state 211

    (127) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type . HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while

    HAZ             shift and go to state 226


state 212

    (122) if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 227


state 213

    (62) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub .

    PUNTOCOMA       reduce using rule 62 (llamada -> ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub .)


state 214

    (71) expresiones -> expresion r_generate_parameter COMA . r_act_param_count expresiones
    (73) r_act_param_count -> .

    PARENT_A        reduce using rule 73 (r_act_param_count -> .)
    CTE_I           reduce using rule 73 (r_act_param_count -> .)
    CTE_F           reduce using rule 73 (r_act_param_count -> .)
    CTE_CH          reduce using rule 73 (r_act_param_count -> .)
    ID              reduce using rule 73 (r_act_param_count -> .)

    r_act_param_count              shift and go to state 228

state 215

    (28) dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C . r_sum_addr
    (31) r_sum_addr -> .

    IGUAL           reduce using rule 31 (r_sum_addr -> .)
    POR             reduce using rule 31 (r_sum_addr -> .)
    DIV             reduce using rule 31 (r_sum_addr -> .)
    MAS             reduce using rule 31 (r_sum_addr -> .)
    MENOS           reduce using rule 31 (r_sum_addr -> .)
    MAYORQUE        reduce using rule 31 (r_sum_addr -> .)
    MENORQUE        reduce using rule 31 (r_sum_addr -> .)
    MAYORIGUAL      reduce using rule 31 (r_sum_addr -> .)
    MENORIGUAL      reduce using rule 31 (r_sum_addr -> .)
    IGUALIGUAL      reduce using rule 31 (r_sum_addr -> .)
    DIFERENTE       reduce using rule 31 (r_sum_addr -> .)
    AND             reduce using rule 31 (r_sum_addr -> .)
    OR              reduce using rule 31 (r_sum_addr -> .)
    PARENT_C        reduce using rule 31 (r_sum_addr -> .)
    COMA            reduce using rule 31 (r_sum_addr -> .)
    PUNTOCOMA       reduce using rule 31 (r_sum_addr -> .)
    CORCHETE_C      reduce using rule 31 (r_sum_addr -> .)
    HASTA           reduce using rule 31 (r_sum_addr -> .)
    HACER           reduce using rule 31 (r_sum_addr -> .)

    r_sum_addr                     shift and go to state 229

state 216

    (98) factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .

    POR             reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    DIV             reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MAS             reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MENOS           reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MAYORQUE        reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MENORQUE        reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MAYORIGUAL      reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MENORIGUAL      reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    IGUALIGUAL      reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    DIFERENTE       reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    AND             reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    OR              reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    PARENT_C        reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    COMA            reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    PUNTOCOMA       reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    CORCHETE_C      reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    HASTA           reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    HACER           reduce using rule 98 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)


state 217

    (75) expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .

    PARENT_C        reduce using rule 75 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    COMA            reduce using rule 75 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    PUNTOCOMA       reduce using rule 75 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    CORCHETE_C      reduce using rule 75 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    HASTA           reduce using rule 75 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    HACER           reduce using rule 75 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)


state 218

    (78) t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .

    OR              reduce using rule 78 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    PARENT_C        reduce using rule 78 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    COMA            reduce using rule 78 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    PUNTOCOMA       reduce using rule 78 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    CORCHETE_C      reduce using rule 78 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    HASTA           reduce using rule 78 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    HACER           reduce using rule 78 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)


state 219

    (90) m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .

    MAYORQUE        reduce using rule 90 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    MENORQUE        reduce using rule 90 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    MAYORIGUAL      reduce using rule 90 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    MENORIGUAL      reduce using rule 90 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    IGUALIGUAL      reduce using rule 90 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    DIFERENTE       reduce using rule 90 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    AND             reduce using rule 90 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    OR              reduce using rule 90 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    PARENT_C        reduce using rule 90 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    COMA            reduce using rule 90 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    PUNTOCOMA       reduce using rule 90 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    CORCHETE_C      reduce using rule 90 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    HASTA           reduce using rule 90 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    HACER           reduce using rule 90 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)


state 220

    (91) m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .

    MAYORQUE        reduce using rule 91 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    MENORQUE        reduce using rule 91 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    MAYORIGUAL      reduce using rule 91 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    MENORIGUAL      reduce using rule 91 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    IGUALIGUAL      reduce using rule 91 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    DIFERENTE       reduce using rule 91 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    AND             reduce using rule 91 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    OR              reduce using rule 91 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    PARENT_C        reduce using rule 91 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    COMA            reduce using rule 91 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    PUNTOCOMA       reduce using rule 91 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    CORCHETE_C      reduce using rule 91 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    HASTA           reduce using rule 91 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    HACER           reduce using rule 91 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)


state 221

    (93) termino -> factor r_generate_quad_muldiv POR r_push_oper termino .

    MAS             reduce using rule 93 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MENOS           reduce using rule 93 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MAYORQUE        reduce using rule 93 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MENORQUE        reduce using rule 93 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MAYORIGUAL      reduce using rule 93 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MENORIGUAL      reduce using rule 93 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    IGUALIGUAL      reduce using rule 93 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    DIFERENTE       reduce using rule 93 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    AND             reduce using rule 93 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    OR              reduce using rule 93 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    PARENT_C        reduce using rule 93 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    COMA            reduce using rule 93 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    PUNTOCOMA       reduce using rule 93 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    CORCHETE_C      reduce using rule 93 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    HASTA           reduce using rule 93 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    HACER           reduce using rule 93 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)


state 222

    (94) termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .

    MAS             reduce using rule 94 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MENOS           reduce using rule 94 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MAYORQUE        reduce using rule 94 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MENORQUE        reduce using rule 94 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MAYORIGUAL      reduce using rule 94 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MENORIGUAL      reduce using rule 94 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    IGUALIGUAL      reduce using rule 94 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    DIFERENTE       reduce using rule 94 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    AND             reduce using rule 94 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    OR              reduce using rule 94 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    PARENT_C        reduce using rule 94 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    COMA            reduce using rule 94 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    PUNTOCOMA       reduce using rule 94 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    CORCHETE_C      reduce using rule 94 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    HASTA           reduce using rule 94 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    HACER           reduce using rule 94 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)


state 223

    (66) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C . r_generate_gosub_dos
    (69) r_generate_gosub_dos -> .

    POR             reduce using rule 69 (r_generate_gosub_dos -> .)
    DIV             reduce using rule 69 (r_generate_gosub_dos -> .)
    MAS             reduce using rule 69 (r_generate_gosub_dos -> .)
    MENOS           reduce using rule 69 (r_generate_gosub_dos -> .)
    MAYORQUE        reduce using rule 69 (r_generate_gosub_dos -> .)
    MENORQUE        reduce using rule 69 (r_generate_gosub_dos -> .)
    MAYORIGUAL      reduce using rule 69 (r_generate_gosub_dos -> .)
    MENORIGUAL      reduce using rule 69 (r_generate_gosub_dos -> .)
    IGUALIGUAL      reduce using rule 69 (r_generate_gosub_dos -> .)
    DIFERENTE       reduce using rule 69 (r_generate_gosub_dos -> .)
    AND             reduce using rule 69 (r_generate_gosub_dos -> .)
    OR              reduce using rule 69 (r_generate_gosub_dos -> .)
    PARENT_C        reduce using rule 69 (r_generate_gosub_dos -> .)
    COMA            reduce using rule 69 (r_generate_gosub_dos -> .)
    PUNTOCOMA       reduce using rule 69 (r_generate_gosub_dos -> .)
    CORCHETE_C      reduce using rule 69 (r_generate_gosub_dos -> .)
    HASTA           reduce using rule 69 (r_generate_gosub_dos -> .)
    HACER           reduce using rule 69 (r_generate_gosub_dos -> .)

    r_generate_gosub_dos           shift and go to state 230

state 224

    (67) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones . PARENT_C r_generate_gosub_dos

    PARENT_C        shift and go to state 231


state 225

    (130) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA . r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (129) r_save_jump -> .

    PARENT_A        reduce using rule 129 (r_save_jump -> .)
    CTE_I           reduce using rule 129 (r_save_jump -> .)
    CTE_F           reduce using rule 129 (r_save_jump -> .)
    CTE_CH          reduce using rule 129 (r_save_jump -> .)
    ID              reduce using rule 129 (r_save_jump -> .)

    r_save_jump                    shift and go to state 232

state 226

    (127) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ . LLAVE_A estatutos_dos LLAVE_C r_goto_while

    LLAVE_A         shift and go to state 233


state 227

    (122) if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A . estatutos_dos LLAVE_C
    (57) estatutos_dos -> . estatutos
    (58) estatutos_dos -> . estatutos estatutos_dos
    (49) estatutos -> . asignacion PUNTOCOMA
    (50) estatutos -> . llamada PUNTOCOMA
    (51) estatutos -> . retorno PUNTOCOMA
    (52) estatutos -> . lectura PUNTOCOMA
    (53) estatutos -> . escritura PUNTOCOMA
    (54) estatutos -> . decision
    (55) estatutos -> . ciclo_for
    (56) estatutos -> . ciclo_while
    (59) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (61) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (62) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (109) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (111) lectura -> . LEER PARENT_A variables PARENT_C
    (113) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (120) decision -> . if r_end_if
    (121) decision -> . if r_goto_ifelse else r_end_if
    (130) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (127) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (122) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 61
    REGRESA         shift and go to state 62
    LEER            shift and go to state 63
    ESCRIBIR        shift and go to state 64
    DESDE           shift and go to state 66
    MIENTRAS        shift and go to state 67
    SI              shift and go to state 68

    estatutos_dos                  shift and go to state 234
    estatutos                      shift and go to state 51
    asignacion                     shift and go to state 52
    llamada                        shift and go to state 53
    retorno                        shift and go to state 54
    lectura                        shift and go to state 55
    escritura                      shift and go to state 56
    decision                       shift and go to state 57
    ciclo_for                      shift and go to state 58
    ciclo_while                    shift and go to state 59
    variable                       shift and go to state 60
    if                             shift and go to state 65

state 228

    (71) expresiones -> expresion r_generate_parameter COMA r_act_param_count . expresiones
    (70) expresiones -> . expresion r_generate_parameter
    (71) expresiones -> . expresion r_generate_parameter COMA r_act_param_count expresiones
    (74) expresion -> . t_expresion r_generate_quad_or
    (75) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (77) t_expresion -> . g_expresion r_generate_quad_and
    (78) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (80) g_expresion -> . m_expresion r_generate_quad_logicos
    (81) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    expresion                      shift and go to state 169
    expresiones                    shift and go to state 235
    t_expresion                    shift and go to state 107
    g_expresion                    shift and go to state 108
    m_expresion                    shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 229

    (28) dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .

    IGUAL           reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    POR             reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    DIV             reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    MAS             reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    MENOS           reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    MAYORQUE        reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    MENORQUE        reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    MAYORIGUAL      reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    MENORIGUAL      reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    IGUALIGUAL      reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    DIFERENTE       reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    AND             reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    OR              reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    PARENT_C        reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    COMA            reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    PUNTOCOMA       reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    CORCHETE_C      reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    HASTA           reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)
    HACER           reduce using rule 28 (dim -> CORCHETE_A r_is_array expresion r_verify_dim CORCHETE_C r_sum_addr .)


state 230

    (66) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .

    POR             reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    DIV             reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MAS             reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MENOS           reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MAYORQUE        reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MENORQUE        reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MAYORIGUAL      reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MENORIGUAL      reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    IGUALIGUAL      reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    DIFERENTE       reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    AND             reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    OR              reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    PARENT_C        reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    COMA            reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    PUNTOCOMA       reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    CORCHETE_C      reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    HASTA           reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    HACER           reduce using rule 66 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)


state 231

    (67) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C . r_generate_gosub_dos
    (69) r_generate_gosub_dos -> .

    POR             reduce using rule 69 (r_generate_gosub_dos -> .)
    DIV             reduce using rule 69 (r_generate_gosub_dos -> .)
    MAS             reduce using rule 69 (r_generate_gosub_dos -> .)
    MENOS           reduce using rule 69 (r_generate_gosub_dos -> .)
    MAYORQUE        reduce using rule 69 (r_generate_gosub_dos -> .)
    MENORQUE        reduce using rule 69 (r_generate_gosub_dos -> .)
    MAYORIGUAL      reduce using rule 69 (r_generate_gosub_dos -> .)
    MENORIGUAL      reduce using rule 69 (r_generate_gosub_dos -> .)
    IGUALIGUAL      reduce using rule 69 (r_generate_gosub_dos -> .)
    DIFERENTE       reduce using rule 69 (r_generate_gosub_dos -> .)
    AND             reduce using rule 69 (r_generate_gosub_dos -> .)
    OR              reduce using rule 69 (r_generate_gosub_dos -> .)
    PARENT_C        reduce using rule 69 (r_generate_gosub_dos -> .)
    COMA            reduce using rule 69 (r_generate_gosub_dos -> .)
    PUNTOCOMA       reduce using rule 69 (r_generate_gosub_dos -> .)
    CORCHETE_C      reduce using rule 69 (r_generate_gosub_dos -> .)
    HASTA           reduce using rule 69 (r_generate_gosub_dos -> .)
    HACER           reduce using rule 69 (r_generate_gosub_dos -> .)

    r_generate_gosub_dos           shift and go to state 236

state 232

    (130) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump . r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (131) r_expresion_for -> .

    PARENT_A        reduce using rule 131 (r_expresion_for -> .)
    CTE_I           reduce using rule 131 (r_expresion_for -> .)
    CTE_F           reduce using rule 131 (r_expresion_for -> .)
    CTE_CH          reduce using rule 131 (r_expresion_for -> .)
    ID              reduce using rule 131 (r_expresion_for -> .)

    r_expresion_for                shift and go to state 237

state 233

    (127) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A . estatutos_dos LLAVE_C r_goto_while
    (57) estatutos_dos -> . estatutos
    (58) estatutos_dos -> . estatutos estatutos_dos
    (49) estatutos -> . asignacion PUNTOCOMA
    (50) estatutos -> . llamada PUNTOCOMA
    (51) estatutos -> . retorno PUNTOCOMA
    (52) estatutos -> . lectura PUNTOCOMA
    (53) estatutos -> . escritura PUNTOCOMA
    (54) estatutos -> . decision
    (55) estatutos -> . ciclo_for
    (56) estatutos -> . ciclo_while
    (59) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (61) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (62) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (109) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (111) lectura -> . LEER PARENT_A variables PARENT_C
    (113) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (120) decision -> . if r_end_if
    (121) decision -> . if r_goto_ifelse else r_end_if
    (130) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (127) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (122) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 61
    REGRESA         shift and go to state 62
    LEER            shift and go to state 63
    ESCRIBIR        shift and go to state 64
    DESDE           shift and go to state 66
    MIENTRAS        shift and go to state 67
    SI              shift and go to state 68

    estatutos_dos                  shift and go to state 238
    estatutos                      shift and go to state 51
    asignacion                     shift and go to state 52
    llamada                        shift and go to state 53
    retorno                        shift and go to state 54
    lectura                        shift and go to state 55
    escritura                      shift and go to state 56
    decision                       shift and go to state 57
    ciclo_for                      shift and go to state 58
    ciclo_while                    shift and go to state 59
    variable                       shift and go to state 60
    if                             shift and go to state 65

state 234

    (122) if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 239


state 235

    (71) expresiones -> expresion r_generate_parameter COMA r_act_param_count expresiones .

    PARENT_C        reduce using rule 71 (expresiones -> expresion r_generate_parameter COMA r_act_param_count expresiones .)


state 236

    (67) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .

    POR             reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    DIV             reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MAS             reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MENOS           reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MAYORQUE        reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MENORQUE        reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MAYORIGUAL      reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MENORIGUAL      reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    IGUALIGUAL      reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    DIFERENTE       reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    AND             reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    OR              reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    PARENT_C        reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    COMA            reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    PUNTOCOMA       reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    CORCHETE_C      reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    HASTA           reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    HACER           reduce using rule 67 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)


state 237

    (130) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for . expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (74) expresion -> . t_expresion r_generate_quad_or
    (75) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (77) t_expresion -> . g_expresion r_generate_quad_and
    (78) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (80) g_expresion -> . m_expresion r_generate_quad_logicos
    (81) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (89) m_expresion -> . termino r_generate_quad_masmen
    (90) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (91) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) termino -> . factor r_generate_quad_muldiv
    (93) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (94) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (98) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (99) factor -> . CTE_I r_push_cte_i
    (100) factor -> . CTE_F r_push_cte_f
    (101) factor -> . CTE_CH r_push_cte_c
    (102) factor -> . variable
    (103) factor -> . llamada_exp
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (66) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (67) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 105
    CTE_I           shift and go to state 112
    CTE_F           shift and go to state 113
    CTE_CH          shift and go to state 114
    ID              shift and go to state 117

    expresion                      shift and go to state 240
    t_expresion                    shift and go to state 107
    g_expresion                    shift and go to state 108
    m_expresion                    shift and go to state 109
    termino                        shift and go to state 110
    factor                         shift and go to state 111
    variable                       shift and go to state 115
    llamada_exp                    shift and go to state 116

state 238

    (127) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos . LLAVE_C r_goto_while

    LLAVE_C         shift and go to state 241


state 239

    (122) if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .

    SINO            reduce using rule 122 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    ID              reduce using rule 122 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 122 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 122 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 122 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 122 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 122 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 122 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 122 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)


state 240

    (130) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion . r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (134) r_check_exp_for -> .

    HACER           reduce using rule 134 (r_check_exp_for -> .)

    r_check_exp_for                shift and go to state 242

state 241

    (127) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C . r_goto_while
    (128) r_goto_while -> .

    ID              reduce using rule 128 (r_goto_while -> .)
    REGRESA         reduce using rule 128 (r_goto_while -> .)
    LEER            reduce using rule 128 (r_goto_while -> .)
    ESCRIBIR        reduce using rule 128 (r_goto_while -> .)
    DESDE           reduce using rule 128 (r_goto_while -> .)
    MIENTRAS        reduce using rule 128 (r_goto_while -> .)
    SI              reduce using rule 128 (r_goto_while -> .)
    LLAVE_C         reduce using rule 128 (r_goto_while -> .)

    r_goto_while                   shift and go to state 243

state 242

    (130) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for . HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for

    HACER           shift and go to state 244


state 243

    (127) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .

    ID              reduce using rule 127 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    REGRESA         reduce using rule 127 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    LEER            reduce using rule 127 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    ESCRIBIR        reduce using rule 127 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    DESDE           reduce using rule 127 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    MIENTRAS        reduce using rule 127 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    SI              reduce using rule 127 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    LLAVE_C         reduce using rule 127 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)


state 244

    (130) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER . LLAVE_A estatutos_dos LLAVE_C r_goto_for

    LLAVE_A         shift and go to state 245


state 245

    (130) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A . estatutos_dos LLAVE_C r_goto_for
    (57) estatutos_dos -> . estatutos
    (58) estatutos_dos -> . estatutos estatutos_dos
    (49) estatutos -> . asignacion PUNTOCOMA
    (50) estatutos -> . llamada PUNTOCOMA
    (51) estatutos -> . retorno PUNTOCOMA
    (52) estatutos -> . lectura PUNTOCOMA
    (53) estatutos -> . escritura PUNTOCOMA
    (54) estatutos -> . decision
    (55) estatutos -> . ciclo_for
    (56) estatutos -> . ciclo_while
    (59) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (61) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (62) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (109) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (111) lectura -> . LEER PARENT_A variables PARENT_C
    (113) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (120) decision -> . if r_end_if
    (121) decision -> . if r_goto_ifelse else r_end_if
    (130) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (127) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (23) variable -> . ID r_push_id
    (24) variable -> . ID r_push_id dim
    (122) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 61
    REGRESA         shift and go to state 62
    LEER            shift and go to state 63
    ESCRIBIR        shift and go to state 64
    DESDE           shift and go to state 66
    MIENTRAS        shift and go to state 67
    SI              shift and go to state 68

    estatutos_dos                  shift and go to state 246
    estatutos                      shift and go to state 51
    asignacion                     shift and go to state 52
    llamada                        shift and go to state 53
    retorno                        shift and go to state 54
    lectura                        shift and go to state 55
    escritura                      shift and go to state 56
    decision                       shift and go to state 57
    ciclo_for                      shift and go to state 58
    ciclo_while                    shift and go to state 59
    variable                       shift and go to state 60
    if                             shift and go to state 65

state 246

    (130) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos . LLAVE_C r_goto_for

    LLAVE_C         shift and go to state 247


state 247

    (130) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C . r_goto_for
    (135) r_goto_for -> .

    ID              reduce using rule 135 (r_goto_for -> .)
    REGRESA         reduce using rule 135 (r_goto_for -> .)
    LEER            reduce using rule 135 (r_goto_for -> .)
    ESCRIBIR        reduce using rule 135 (r_goto_for -> .)
    DESDE           reduce using rule 135 (r_goto_for -> .)
    MIENTRAS        reduce using rule 135 (r_goto_for -> .)
    SI              reduce using rule 135 (r_goto_for -> .)
    LLAVE_C         reduce using rule 135 (r_goto_for -> .)

    r_goto_for                     shift and go to state 248

state 248

    (130) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .

    ID              reduce using rule 130 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    REGRESA         reduce using rule 130 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    LEER            reduce using rule 130 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    ESCRIBIR        reduce using rule 130 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    DESDE           reduce using rule 130 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    MIENTRAS        reduce using rule 130 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    SI              reduce using rule 130 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    LLAVE_C         reduce using rule 130 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)

