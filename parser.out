Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID PUNTOCOMA prog
Rule 2     prog -> main
Rule 3     prog -> dec_vars dec_funciones main
Rule 4     prog -> dec_vars main
Rule 5     prog -> dec_funciones main
Rule 6     main -> PRINCIPAL PARENT_A PARENT_C dec_est
Rule 7     dec_vars -> VAR vars save_vars
Rule 8     vars -> tipo_simple ids_simple PUNTOCOMA
Rule 9     vars -> tipo_simple ids_simple PUNTOCOMA vars
Rule 10    save_vars -> <empty>
Rule 11    tipo_simple -> INT
Rule 12    tipo_simple -> FLOAT
Rule 13    tipo_simple -> CHAR
Rule 14    ids_simple -> ID save_vars_name
Rule 15    ids_simple -> ID save_vars_name dimension
Rule 16    ids_simple -> ID save_vars_name COMA ids_simple
Rule 17    ids_simple -> ID save_vars_name dimension COMA ids_simple
Rule 18    save_vars_name -> <empty>
Rule 19    dimension -> CORCHETE_A CTE_I CORCHETE_C
Rule 20    variable -> ID r_push_id
Rule 21    variable -> ID r_push_id dim
Rule 22    r_push_id -> <empty>
Rule 23    variables -> variable
Rule 24    variables -> variable COMA variables
Rule 25    dim -> CORCHETE_A expresion CORCHETE_C
Rule 26    dec_funciones -> funcion
Rule 27    dec_funciones -> funcion dec_funciones
Rule 28    funcion -> FUNCION tipo_simple ID create_func_table func_dos
Rule 29    funcion -> FUNCION VOID func_type_void ID create_func_table func_dos
Rule 30    func_type_void -> <empty>
Rule 31    create_func_table -> <empty>
Rule 32    func_dos -> PARENT_A PARENT_C var_funcs
Rule 33    func_dos -> PARENT_A parametros PARENT_C save_params var_funcs
Rule 34    save_params -> <empty>
Rule 35    var_funcs -> dec_est
Rule 36    var_funcs -> dec_vars dec_est
Rule 37    parametros -> tipo_simple ID save_params_list
Rule 38    parametros -> tipo_simple ID save_params_list COMA parametros
Rule 39    save_params_list -> <empty>
Rule 40    dec_est -> LLAVE_A LLAVE_C
Rule 41    dec_est -> LLAVE_A estatutos_dos LLAVE_C
Rule 42    estatutos -> asignacion PUNTOCOMA
Rule 43    estatutos -> llamada PUNTOCOMA
Rule 44    estatutos -> retorno PUNTOCOMA
Rule 45    estatutos -> lectura PUNTOCOMA
Rule 46    estatutos -> escritura PUNTOCOMA
Rule 47    estatutos -> decision
Rule 48    estatutos -> ciclo_for
Rule 49    estatutos -> ciclo_while
Rule 50    estatutos_dos -> estatutos
Rule 51    estatutos_dos -> estatutos estatutos_dos
Rule 52    asignacion -> variable IGUAL r_push_oper expresion r_generate_quad_asig
Rule 53    r_generate_quad_asig -> <empty>
Rule 54    llamada -> ID PARENT_A PARENT_C
Rule 55    llamada -> ID PARENT_A expresiones PARENT_C
Rule 56    expresiones -> expresion
Rule 57    expresiones -> expresion COMA expresion
Rule 58    expresion -> t_expresion r_generate_quad_or
Rule 59    expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion
Rule 60    r_generate_quad_or -> <empty>
Rule 61    t_expresion -> g_expresion r_generate_quad_and
Rule 62    t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion
Rule 63    r_generate_quad_and -> <empty>
Rule 64    g_expresion -> m_expresion r_generate_quad_logicos
Rule 65    g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos
Rule 66    r_generate_quad_logicos -> <empty>
Rule 67    op_logicos -> MAYORQUE r_push_oper
Rule 68    op_logicos -> MENORQUE r_push_oper
Rule 69    op_logicos -> MAYORIGUAL r_push_oper
Rule 70    op_logicos -> MENORIGUAL r_push_oper
Rule 71    op_logicos -> IGUALIGUAL r_push_oper
Rule 72    op_logicos -> DIFERENTE r_push_oper
Rule 73    m_expresion -> termino r_generate_quad_masmen
Rule 74    m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion
Rule 75    m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion
Rule 76    termino -> factor r_generate_quad_muldiv
Rule 77    termino -> factor r_generate_quad_muldiv POR r_push_oper termino
Rule 78    termino -> factor r_generate_quad_muldiv DIV r_push_oper termino
Rule 79    r_push_oper -> <empty>
Rule 80    r_generate_quad_masmen -> <empty>
Rule 81    r_generate_quad_muldiv -> <empty>
Rule 82    factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff
Rule 83    factor -> CTE_I r_push_cte_i
Rule 84    factor -> CTE_F r_push_cte_f
Rule 85    factor -> CTE_CH r_push_cte_c
Rule 86    factor -> variable
Rule 87    factor -> llamada
Rule 88    r_push_cte_i -> <empty>
Rule 89    r_push_cte_f -> <empty>
Rule 90    r_push_cte_c -> <empty>
Rule 91    r_push_ff -> <empty>
Rule 92    r_pop_ff -> <empty>
Rule 93    retorno -> REGRESA PARENT_A expresion PARENT_C
Rule 94    lectura -> LEER PARENT_A variables PARENT_C
Rule 95    escritura -> ESCRIBIR PARENT_A escr PARENT_C
Rule 96    escritura_dos -> CTE_STR r_push_cte_str
Rule 97    escritura_dos -> expresion
Rule 98    r_push_cte_str -> <empty>
Rule 99    r_generate_quad_escr -> <empty>
Rule 100   escr -> escritura_dos r_generate_quad_escr
Rule 101   escr -> escritura_dos r_generate_quad_escr COMA escr
Rule 102   decision -> if r_end_if
Rule 103   decision -> if r_goto_ifelse else r_end_if
Rule 104   if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C
Rule 105   r_check_exp_type -> <empty>
Rule 106   r_end_if -> <empty>
Rule 107   r_goto_ifelse -> <empty>
Rule 108   else -> SINO LLAVE_A estatutos_dos LLAVE_C
Rule 109   ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
Rule 110   r_goto_while -> <empty>
Rule 111   r_save_jump -> <empty>
Rule 112   ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C

Terminals, with rules where they appear

AND                  : 62
CHAR                 : 13
COMA                 : 16 17 24 38 57 101
CORCHETE_A           : 19 25
CORCHETE_C           : 19 25
CTE_CH               : 85
CTE_F                : 84
CTE_I                : 19 83
CTE_STR              : 96
DESDE                : 112
DIFERENTE            : 72
DIV                  : 78
ENTONCES             : 104
ESCRIBIR             : 95
FLOAT                : 12
FUNCION              : 28 29
HACER                : 112
HASTA                : 112
HAZ                  : 109
ID                   : 1 14 15 16 17 20 21 28 29 37 38 54 55
IGUAL                : 52 112
IGUALIGUAL           : 71
INT                  : 11
LEER                 : 94
LLAVE_A              : 40 41 104 108 109 112
LLAVE_C              : 40 41 104 108 109 112
MAS                  : 74
MAYORIGUAL           : 69
MAYORQUE             : 67
MENORIGUAL           : 70
MENORQUE             : 68
MENOS                : 75
MIENTRAS             : 109
OR                   : 59
PARENT_A             : 6 32 33 54 55 82 93 94 95 104 109
PARENT_C             : 6 32 33 54 55 82 93 94 95 104 109
POR                  : 77
PRINCIPAL            : 6
PROGRAMA             : 1
PUNTOCOMA            : 1 8 9 42 43 44 45 46
REGRESA              : 93
SI                   : 104
SINO                 : 108
VAR                  : 7
VOID                 : 29
error                : 

Nonterminals, with rules where they appear

asignacion           : 42
ciclo_for            : 48
ciclo_while          : 49
create_func_table    : 28 29
dec_est              : 6 35 36
dec_funciones        : 3 5 27
dec_vars             : 3 4 36
decision             : 47
dim                  : 21
dimension            : 15 17
else                 : 103
escr                 : 95 101
escritura            : 46
escritura_dos        : 100 101
estatutos            : 50 51
estatutos_dos        : 41 51 104 108 109 112
expresion            : 25 52 56 57 57 59 82 93 97 104 109 112 112
expresiones          : 55
factor               : 76 77 78
func_dos             : 28 29
func_type_void       : 29
funcion              : 26 27
g_expresion          : 61 62
ids_simple           : 8 9 16 17
if                   : 102 103
lectura              : 45
llamada              : 43 87
m_expresion          : 64 65 65 74 75
main                 : 2 3 4 5
op_logicos           : 65
parametros           : 33 38
prog                 : 1
programa             : 0
r_check_exp_type     : 104 109
r_end_if             : 102 103
r_generate_quad_and  : 61 62
r_generate_quad_asig : 52
r_generate_quad_escr : 100 101
r_generate_quad_logicos : 64 65
r_generate_quad_masmen : 73 74 75
r_generate_quad_muldiv : 76 77 78
r_generate_quad_or   : 58 59
r_goto_ifelse        : 103
r_goto_while         : 109
r_pop_ff             : 82
r_push_cte_c         : 85
r_push_cte_f         : 84
r_push_cte_i         : 83
r_push_cte_str       : 96
r_push_ff            : 82
r_push_id            : 20 21
r_push_oper          : 52 59 62 67 68 69 70 71 72 74 75 77 78
r_save_jump          : 109
retorno              : 44
save_params          : 33
save_params_list     : 37 38
save_vars            : 7
save_vars_name       : 14 15 16 17
t_expresion          : 58 59 62
termino              : 73 74 75 77 78
tipo_simple          : 8 9 28 37 38
var_funcs            : 32 33
variable             : 23 24 52 86 112
variables            : 24 94
vars                 : 7 9

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID PUNTOCOMA prog

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID PUNTOCOMA prog

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . PUNTOCOMA prog

    PUNTOCOMA       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID PUNTOCOMA . prog
    (2) prog -> . main
    (3) prog -> . dec_vars dec_funciones main
    (4) prog -> . dec_vars main
    (5) prog -> . dec_funciones main
    (6) main -> . PRINCIPAL PARENT_A PARENT_C dec_est
    (7) dec_vars -> . VAR vars save_vars
    (26) dec_funciones -> . funcion
    (27) dec_funciones -> . funcion dec_funciones
    (28) funcion -> . FUNCION tipo_simple ID create_func_table func_dos
    (29) funcion -> . FUNCION VOID func_type_void ID create_func_table func_dos

    PRINCIPAL       shift and go to state 9
    VAR             shift and go to state 10
    FUNCION         shift and go to state 12

    prog                           shift and go to state 5
    main                           shift and go to state 6
    dec_vars                       shift and go to state 7
    dec_funciones                  shift and go to state 8
    funcion                        shift and go to state 11

state 5

    (1) programa -> PROGRAMA ID PUNTOCOMA prog .

    $end            reduce using rule 1 (programa -> PROGRAMA ID PUNTOCOMA prog .)


state 6

    (2) prog -> main .

    $end            reduce using rule 2 (prog -> main .)


state 7

    (3) prog -> dec_vars . dec_funciones main
    (4) prog -> dec_vars . main
    (26) dec_funciones -> . funcion
    (27) dec_funciones -> . funcion dec_funciones
    (6) main -> . PRINCIPAL PARENT_A PARENT_C dec_est
    (28) funcion -> . FUNCION tipo_simple ID create_func_table func_dos
    (29) funcion -> . FUNCION VOID func_type_void ID create_func_table func_dos

    PRINCIPAL       shift and go to state 9
    FUNCION         shift and go to state 12

    dec_funciones                  shift and go to state 13
    main                           shift and go to state 14
    funcion                        shift and go to state 11

state 8

    (5) prog -> dec_funciones . main
    (6) main -> . PRINCIPAL PARENT_A PARENT_C dec_est

    PRINCIPAL       shift and go to state 9

    main                           shift and go to state 15

state 9

    (6) main -> PRINCIPAL . PARENT_A PARENT_C dec_est

    PARENT_A        shift and go to state 16


state 10

    (7) dec_vars -> VAR . vars save_vars
    (8) vars -> . tipo_simple ids_simple PUNTOCOMA
    (9) vars -> . tipo_simple ids_simple PUNTOCOMA vars
    (11) tipo_simple -> . INT
    (12) tipo_simple -> . FLOAT
    (13) tipo_simple -> . CHAR

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    vars                           shift and go to state 17
    tipo_simple                    shift and go to state 18

state 11

    (26) dec_funciones -> funcion .
    (27) dec_funciones -> funcion . dec_funciones
    (26) dec_funciones -> . funcion
    (27) dec_funciones -> . funcion dec_funciones
    (28) funcion -> . FUNCION tipo_simple ID create_func_table func_dos
    (29) funcion -> . FUNCION VOID func_type_void ID create_func_table func_dos

    PRINCIPAL       reduce using rule 26 (dec_funciones -> funcion .)
    FUNCION         shift and go to state 12

    funcion                        shift and go to state 11
    dec_funciones                  shift and go to state 22

state 12

    (28) funcion -> FUNCION . tipo_simple ID create_func_table func_dos
    (29) funcion -> FUNCION . VOID func_type_void ID create_func_table func_dos
    (11) tipo_simple -> . INT
    (12) tipo_simple -> . FLOAT
    (13) tipo_simple -> . CHAR

    VOID            shift and go to state 24
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    tipo_simple                    shift and go to state 23

state 13

    (3) prog -> dec_vars dec_funciones . main
    (6) main -> . PRINCIPAL PARENT_A PARENT_C dec_est

    PRINCIPAL       shift and go to state 9

    main                           shift and go to state 25

state 14

    (4) prog -> dec_vars main .

    $end            reduce using rule 4 (prog -> dec_vars main .)


state 15

    (5) prog -> dec_funciones main .

    $end            reduce using rule 5 (prog -> dec_funciones main .)


state 16

    (6) main -> PRINCIPAL PARENT_A . PARENT_C dec_est

    PARENT_C        shift and go to state 26


state 17

    (7) dec_vars -> VAR vars . save_vars
    (10) save_vars -> .

    PRINCIPAL       reduce using rule 10 (save_vars -> .)
    FUNCION         reduce using rule 10 (save_vars -> .)
    LLAVE_A         reduce using rule 10 (save_vars -> .)

    save_vars                      shift and go to state 27

state 18

    (8) vars -> tipo_simple . ids_simple PUNTOCOMA
    (9) vars -> tipo_simple . ids_simple PUNTOCOMA vars
    (14) ids_simple -> . ID save_vars_name
    (15) ids_simple -> . ID save_vars_name dimension
    (16) ids_simple -> . ID save_vars_name COMA ids_simple
    (17) ids_simple -> . ID save_vars_name dimension COMA ids_simple

    ID              shift and go to state 29

    ids_simple                     shift and go to state 28

state 19

    (11) tipo_simple -> INT .

    ID              reduce using rule 11 (tipo_simple -> INT .)


state 20

    (12) tipo_simple -> FLOAT .

    ID              reduce using rule 12 (tipo_simple -> FLOAT .)


state 21

    (13) tipo_simple -> CHAR .

    ID              reduce using rule 13 (tipo_simple -> CHAR .)


state 22

    (27) dec_funciones -> funcion dec_funciones .

    PRINCIPAL       reduce using rule 27 (dec_funciones -> funcion dec_funciones .)


state 23

    (28) funcion -> FUNCION tipo_simple . ID create_func_table func_dos

    ID              shift and go to state 30


state 24

    (29) funcion -> FUNCION VOID . func_type_void ID create_func_table func_dos
    (30) func_type_void -> .

    ID              reduce using rule 30 (func_type_void -> .)

    func_type_void                 shift and go to state 31

state 25

    (3) prog -> dec_vars dec_funciones main .

    $end            reduce using rule 3 (prog -> dec_vars dec_funciones main .)


state 26

    (6) main -> PRINCIPAL PARENT_A PARENT_C . dec_est
    (40) dec_est -> . LLAVE_A LLAVE_C
    (41) dec_est -> . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 33

    dec_est                        shift and go to state 32

state 27

    (7) dec_vars -> VAR vars save_vars .

    PRINCIPAL       reduce using rule 7 (dec_vars -> VAR vars save_vars .)
    FUNCION         reduce using rule 7 (dec_vars -> VAR vars save_vars .)
    LLAVE_A         reduce using rule 7 (dec_vars -> VAR vars save_vars .)


state 28

    (8) vars -> tipo_simple ids_simple . PUNTOCOMA
    (9) vars -> tipo_simple ids_simple . PUNTOCOMA vars

    PUNTOCOMA       shift and go to state 34


state 29

    (14) ids_simple -> ID . save_vars_name
    (15) ids_simple -> ID . save_vars_name dimension
    (16) ids_simple -> ID . save_vars_name COMA ids_simple
    (17) ids_simple -> ID . save_vars_name dimension COMA ids_simple
    (18) save_vars_name -> .

    COMA            reduce using rule 18 (save_vars_name -> .)
    CORCHETE_A      reduce using rule 18 (save_vars_name -> .)
    PUNTOCOMA       reduce using rule 18 (save_vars_name -> .)

    save_vars_name                 shift and go to state 35

state 30

    (28) funcion -> FUNCION tipo_simple ID . create_func_table func_dos
    (31) create_func_table -> .

    PARENT_A        reduce using rule 31 (create_func_table -> .)

    create_func_table              shift and go to state 36

state 31

    (29) funcion -> FUNCION VOID func_type_void . ID create_func_table func_dos

    ID              shift and go to state 37


state 32

    (6) main -> PRINCIPAL PARENT_A PARENT_C dec_est .

    $end            reduce using rule 6 (main -> PRINCIPAL PARENT_A PARENT_C dec_est .)


state 33

    (40) dec_est -> LLAVE_A . LLAVE_C
    (41) dec_est -> LLAVE_A . estatutos_dos LLAVE_C
    (50) estatutos_dos -> . estatutos
    (51) estatutos_dos -> . estatutos estatutos_dos
    (42) estatutos -> . asignacion PUNTOCOMA
    (43) estatutos -> . llamada PUNTOCOMA
    (44) estatutos -> . retorno PUNTOCOMA
    (45) estatutos -> . lectura PUNTOCOMA
    (46) estatutos -> . escritura PUNTOCOMA
    (47) estatutos -> . decision
    (48) estatutos -> . ciclo_for
    (49) estatutos -> . ciclo_while
    (52) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C
    (93) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (94) lectura -> . LEER PARENT_A variables PARENT_C
    (95) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (102) decision -> . if r_end_if
    (103) decision -> . if r_goto_ifelse else r_end_if
    (112) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (109) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (104) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    LLAVE_C         shift and go to state 38
    ID              shift and go to state 50
    REGRESA         shift and go to state 51
    LEER            shift and go to state 52
    ESCRIBIR        shift and go to state 53
    DESDE           shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57

    estatutos_dos                  shift and go to state 39
    estatutos                      shift and go to state 40
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    retorno                        shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    decision                       shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    variable                       shift and go to state 49
    if                             shift and go to state 54

state 34

    (8) vars -> tipo_simple ids_simple PUNTOCOMA .
    (9) vars -> tipo_simple ids_simple PUNTOCOMA . vars
    (8) vars -> . tipo_simple ids_simple PUNTOCOMA
    (9) vars -> . tipo_simple ids_simple PUNTOCOMA vars
    (11) tipo_simple -> . INT
    (12) tipo_simple -> . FLOAT
    (13) tipo_simple -> . CHAR

    PRINCIPAL       reduce using rule 8 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    FUNCION         reduce using rule 8 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    LLAVE_A         reduce using rule 8 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    tipo_simple                    shift and go to state 18
    vars                           shift and go to state 58

state 35

    (14) ids_simple -> ID save_vars_name .
    (15) ids_simple -> ID save_vars_name . dimension
    (16) ids_simple -> ID save_vars_name . COMA ids_simple
    (17) ids_simple -> ID save_vars_name . dimension COMA ids_simple
    (19) dimension -> . CORCHETE_A CTE_I CORCHETE_C

    PUNTOCOMA       reduce using rule 14 (ids_simple -> ID save_vars_name .)
    COMA            shift and go to state 60
    CORCHETE_A      shift and go to state 61

    dimension                      shift and go to state 59

state 36

    (28) funcion -> FUNCION tipo_simple ID create_func_table . func_dos
    (32) func_dos -> . PARENT_A PARENT_C var_funcs
    (33) func_dos -> . PARENT_A parametros PARENT_C save_params var_funcs

    PARENT_A        shift and go to state 63

    func_dos                       shift and go to state 62

state 37

    (29) funcion -> FUNCION VOID func_type_void ID . create_func_table func_dos
    (31) create_func_table -> .

    PARENT_A        reduce using rule 31 (create_func_table -> .)

    create_func_table              shift and go to state 64

state 38

    (40) dec_est -> LLAVE_A LLAVE_C .

    $end            reduce using rule 40 (dec_est -> LLAVE_A LLAVE_C .)
    FUNCION         reduce using rule 40 (dec_est -> LLAVE_A LLAVE_C .)
    PRINCIPAL       reduce using rule 40 (dec_est -> LLAVE_A LLAVE_C .)


state 39

    (41) dec_est -> LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 65


state 40

    (50) estatutos_dos -> estatutos .
    (51) estatutos_dos -> estatutos . estatutos_dos
    (50) estatutos_dos -> . estatutos
    (51) estatutos_dos -> . estatutos estatutos_dos
    (42) estatutos -> . asignacion PUNTOCOMA
    (43) estatutos -> . llamada PUNTOCOMA
    (44) estatutos -> . retorno PUNTOCOMA
    (45) estatutos -> . lectura PUNTOCOMA
    (46) estatutos -> . escritura PUNTOCOMA
    (47) estatutos -> . decision
    (48) estatutos -> . ciclo_for
    (49) estatutos -> . ciclo_while
    (52) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C
    (93) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (94) lectura -> . LEER PARENT_A variables PARENT_C
    (95) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (102) decision -> . if r_end_if
    (103) decision -> . if r_goto_ifelse else r_end_if
    (112) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (109) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (104) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    LLAVE_C         reduce using rule 50 (estatutos_dos -> estatutos .)
    ID              shift and go to state 50
    REGRESA         shift and go to state 51
    LEER            shift and go to state 52
    ESCRIBIR        shift and go to state 53
    DESDE           shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57

    estatutos                      shift and go to state 40
    estatutos_dos                  shift and go to state 66
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    retorno                        shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    decision                       shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    variable                       shift and go to state 49
    if                             shift and go to state 54

state 41

    (42) estatutos -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 67


state 42

    (43) estatutos -> llamada . PUNTOCOMA

    PUNTOCOMA       shift and go to state 68


state 43

    (44) estatutos -> retorno . PUNTOCOMA

    PUNTOCOMA       shift and go to state 69


state 44

    (45) estatutos -> lectura . PUNTOCOMA

    PUNTOCOMA       shift and go to state 70


state 45

    (46) estatutos -> escritura . PUNTOCOMA

    PUNTOCOMA       shift and go to state 71


state 46

    (47) estatutos -> decision .

    ID              reduce using rule 47 (estatutos -> decision .)
    REGRESA         reduce using rule 47 (estatutos -> decision .)
    LEER            reduce using rule 47 (estatutos -> decision .)
    ESCRIBIR        reduce using rule 47 (estatutos -> decision .)
    DESDE           reduce using rule 47 (estatutos -> decision .)
    MIENTRAS        reduce using rule 47 (estatutos -> decision .)
    SI              reduce using rule 47 (estatutos -> decision .)
    LLAVE_C         reduce using rule 47 (estatutos -> decision .)


state 47

    (48) estatutos -> ciclo_for .

    ID              reduce using rule 48 (estatutos -> ciclo_for .)
    REGRESA         reduce using rule 48 (estatutos -> ciclo_for .)
    LEER            reduce using rule 48 (estatutos -> ciclo_for .)
    ESCRIBIR        reduce using rule 48 (estatutos -> ciclo_for .)
    DESDE           reduce using rule 48 (estatutos -> ciclo_for .)
    MIENTRAS        reduce using rule 48 (estatutos -> ciclo_for .)
    SI              reduce using rule 48 (estatutos -> ciclo_for .)
    LLAVE_C         reduce using rule 48 (estatutos -> ciclo_for .)


state 48

    (49) estatutos -> ciclo_while .

    ID              reduce using rule 49 (estatutos -> ciclo_while .)
    REGRESA         reduce using rule 49 (estatutos -> ciclo_while .)
    LEER            reduce using rule 49 (estatutos -> ciclo_while .)
    ESCRIBIR        reduce using rule 49 (estatutos -> ciclo_while .)
    DESDE           reduce using rule 49 (estatutos -> ciclo_while .)
    MIENTRAS        reduce using rule 49 (estatutos -> ciclo_while .)
    SI              reduce using rule 49 (estatutos -> ciclo_while .)
    LLAVE_C         reduce using rule 49 (estatutos -> ciclo_while .)


state 49

    (52) asignacion -> variable . IGUAL r_push_oper expresion r_generate_quad_asig

    IGUAL           shift and go to state 72


state 50

    (54) llamada -> ID . PARENT_A PARENT_C
    (55) llamada -> ID . PARENT_A expresiones PARENT_C
    (20) variable -> ID . r_push_id
    (21) variable -> ID . r_push_id dim
    (22) r_push_id -> .

    PARENT_A        shift and go to state 73
    CORCHETE_A      reduce using rule 22 (r_push_id -> .)
    IGUAL           reduce using rule 22 (r_push_id -> .)

    r_push_id                      shift and go to state 74

state 51

    (93) retorno -> REGRESA . PARENT_A expresion PARENT_C

    PARENT_A        shift and go to state 75


state 52

    (94) lectura -> LEER . PARENT_A variables PARENT_C

    PARENT_A        shift and go to state 76


state 53

    (95) escritura -> ESCRIBIR . PARENT_A escr PARENT_C

    PARENT_A        shift and go to state 77


state 54

    (102) decision -> if . r_end_if
    (103) decision -> if . r_goto_ifelse else r_end_if
    (106) r_end_if -> .
    (107) r_goto_ifelse -> .

    ID              reduce using rule 106 (r_end_if -> .)
    REGRESA         reduce using rule 106 (r_end_if -> .)
    LEER            reduce using rule 106 (r_end_if -> .)
    ESCRIBIR        reduce using rule 106 (r_end_if -> .)
    DESDE           reduce using rule 106 (r_end_if -> .)
    MIENTRAS        reduce using rule 106 (r_end_if -> .)
    SI              reduce using rule 106 (r_end_if -> .)
    LLAVE_C         reduce using rule 106 (r_end_if -> .)
    SINO            reduce using rule 107 (r_goto_ifelse -> .)

    r_end_if                       shift and go to state 78
    r_goto_ifelse                  shift and go to state 79

state 55

    (112) ciclo_for -> DESDE . variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim

    ID              shift and go to state 81

    variable                       shift and go to state 80

state 56

    (109) ciclo_while -> MIENTRAS . r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (111) r_save_jump -> .

    PARENT_A        reduce using rule 111 (r_save_jump -> .)

    r_save_jump                    shift and go to state 82

state 57

    (104) if -> SI . PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    PARENT_A        shift and go to state 83


state 58

    (9) vars -> tipo_simple ids_simple PUNTOCOMA vars .

    PRINCIPAL       reduce using rule 9 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)
    FUNCION         reduce using rule 9 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)
    LLAVE_A         reduce using rule 9 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)


state 59

    (15) ids_simple -> ID save_vars_name dimension .
    (17) ids_simple -> ID save_vars_name dimension . COMA ids_simple

    PUNTOCOMA       reduce using rule 15 (ids_simple -> ID save_vars_name dimension .)
    COMA            shift and go to state 84


state 60

    (16) ids_simple -> ID save_vars_name COMA . ids_simple
    (14) ids_simple -> . ID save_vars_name
    (15) ids_simple -> . ID save_vars_name dimension
    (16) ids_simple -> . ID save_vars_name COMA ids_simple
    (17) ids_simple -> . ID save_vars_name dimension COMA ids_simple

    ID              shift and go to state 29

    ids_simple                     shift and go to state 85

state 61

    (19) dimension -> CORCHETE_A . CTE_I CORCHETE_C

    CTE_I           shift and go to state 86


state 62

    (28) funcion -> FUNCION tipo_simple ID create_func_table func_dos .

    FUNCION         reduce using rule 28 (funcion -> FUNCION tipo_simple ID create_func_table func_dos .)
    PRINCIPAL       reduce using rule 28 (funcion -> FUNCION tipo_simple ID create_func_table func_dos .)


state 63

    (32) func_dos -> PARENT_A . PARENT_C var_funcs
    (33) func_dos -> PARENT_A . parametros PARENT_C save_params var_funcs
    (37) parametros -> . tipo_simple ID save_params_list
    (38) parametros -> . tipo_simple ID save_params_list COMA parametros
    (11) tipo_simple -> . INT
    (12) tipo_simple -> . FLOAT
    (13) tipo_simple -> . CHAR

    PARENT_C        shift and go to state 87
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    parametros                     shift and go to state 88
    tipo_simple                    shift and go to state 89

state 64

    (29) funcion -> FUNCION VOID func_type_void ID create_func_table . func_dos
    (32) func_dos -> . PARENT_A PARENT_C var_funcs
    (33) func_dos -> . PARENT_A parametros PARENT_C save_params var_funcs

    PARENT_A        shift and go to state 63

    func_dos                       shift and go to state 90

state 65

    (41) dec_est -> LLAVE_A estatutos_dos LLAVE_C .

    $end            reduce using rule 41 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)
    FUNCION         reduce using rule 41 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)
    PRINCIPAL       reduce using rule 41 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)


state 66

    (51) estatutos_dos -> estatutos estatutos_dos .

    LLAVE_C         reduce using rule 51 (estatutos_dos -> estatutos estatutos_dos .)


state 67

    (42) estatutos -> asignacion PUNTOCOMA .

    ID              reduce using rule 42 (estatutos -> asignacion PUNTOCOMA .)
    REGRESA         reduce using rule 42 (estatutos -> asignacion PUNTOCOMA .)
    LEER            reduce using rule 42 (estatutos -> asignacion PUNTOCOMA .)
    ESCRIBIR        reduce using rule 42 (estatutos -> asignacion PUNTOCOMA .)
    DESDE           reduce using rule 42 (estatutos -> asignacion PUNTOCOMA .)
    MIENTRAS        reduce using rule 42 (estatutos -> asignacion PUNTOCOMA .)
    SI              reduce using rule 42 (estatutos -> asignacion PUNTOCOMA .)
    LLAVE_C         reduce using rule 42 (estatutos -> asignacion PUNTOCOMA .)


state 68

    (43) estatutos -> llamada PUNTOCOMA .

    ID              reduce using rule 43 (estatutos -> llamada PUNTOCOMA .)
    REGRESA         reduce using rule 43 (estatutos -> llamada PUNTOCOMA .)
    LEER            reduce using rule 43 (estatutos -> llamada PUNTOCOMA .)
    ESCRIBIR        reduce using rule 43 (estatutos -> llamada PUNTOCOMA .)
    DESDE           reduce using rule 43 (estatutos -> llamada PUNTOCOMA .)
    MIENTRAS        reduce using rule 43 (estatutos -> llamada PUNTOCOMA .)
    SI              reduce using rule 43 (estatutos -> llamada PUNTOCOMA .)
    LLAVE_C         reduce using rule 43 (estatutos -> llamada PUNTOCOMA .)


state 69

    (44) estatutos -> retorno PUNTOCOMA .

    ID              reduce using rule 44 (estatutos -> retorno PUNTOCOMA .)
    REGRESA         reduce using rule 44 (estatutos -> retorno PUNTOCOMA .)
    LEER            reduce using rule 44 (estatutos -> retorno PUNTOCOMA .)
    ESCRIBIR        reduce using rule 44 (estatutos -> retorno PUNTOCOMA .)
    DESDE           reduce using rule 44 (estatutos -> retorno PUNTOCOMA .)
    MIENTRAS        reduce using rule 44 (estatutos -> retorno PUNTOCOMA .)
    SI              reduce using rule 44 (estatutos -> retorno PUNTOCOMA .)
    LLAVE_C         reduce using rule 44 (estatutos -> retorno PUNTOCOMA .)


state 70

    (45) estatutos -> lectura PUNTOCOMA .

    ID              reduce using rule 45 (estatutos -> lectura PUNTOCOMA .)
    REGRESA         reduce using rule 45 (estatutos -> lectura PUNTOCOMA .)
    LEER            reduce using rule 45 (estatutos -> lectura PUNTOCOMA .)
    ESCRIBIR        reduce using rule 45 (estatutos -> lectura PUNTOCOMA .)
    DESDE           reduce using rule 45 (estatutos -> lectura PUNTOCOMA .)
    MIENTRAS        reduce using rule 45 (estatutos -> lectura PUNTOCOMA .)
    SI              reduce using rule 45 (estatutos -> lectura PUNTOCOMA .)
    LLAVE_C         reduce using rule 45 (estatutos -> lectura PUNTOCOMA .)


state 71

    (46) estatutos -> escritura PUNTOCOMA .

    ID              reduce using rule 46 (estatutos -> escritura PUNTOCOMA .)
    REGRESA         reduce using rule 46 (estatutos -> escritura PUNTOCOMA .)
    LEER            reduce using rule 46 (estatutos -> escritura PUNTOCOMA .)
    ESCRIBIR        reduce using rule 46 (estatutos -> escritura PUNTOCOMA .)
    DESDE           reduce using rule 46 (estatutos -> escritura PUNTOCOMA .)
    MIENTRAS        reduce using rule 46 (estatutos -> escritura PUNTOCOMA .)
    SI              reduce using rule 46 (estatutos -> escritura PUNTOCOMA .)
    LLAVE_C         reduce using rule 46 (estatutos -> escritura PUNTOCOMA .)


state 72

    (52) asignacion -> variable IGUAL . r_push_oper expresion r_generate_quad_asig
    (79) r_push_oper -> .

    PARENT_A        reduce using rule 79 (r_push_oper -> .)
    CTE_I           reduce using rule 79 (r_push_oper -> .)
    CTE_F           reduce using rule 79 (r_push_oper -> .)
    CTE_CH          reduce using rule 79 (r_push_oper -> .)
    ID              reduce using rule 79 (r_push_oper -> .)

    r_push_oper                    shift and go to state 91

state 73

    (54) llamada -> ID PARENT_A . PARENT_C
    (55) llamada -> ID PARENT_A . expresiones PARENT_C
    (56) expresiones -> . expresion
    (57) expresiones -> . expresion COMA expresion
    (58) expresion -> . t_expresion r_generate_quad_or
    (59) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (61) t_expresion -> . g_expresion r_generate_quad_and
    (62) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (64) g_expresion -> . m_expresion r_generate_quad_logicos
    (65) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_C        shift and go to state 94
    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    expresiones                    shift and go to state 95
    expresion                      shift and go to state 96
    t_expresion                    shift and go to state 97
    g_expresion                    shift and go to state 98
    m_expresion                    shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    variable                       shift and go to state 105
    llamada                        shift and go to state 106

state 74

    (20) variable -> ID r_push_id .
    (21) variable -> ID r_push_id . dim
    (25) dim -> . CORCHETE_A expresion CORCHETE_C

    IGUAL           reduce using rule 20 (variable -> ID r_push_id .)
    POR             reduce using rule 20 (variable -> ID r_push_id .)
    DIV             reduce using rule 20 (variable -> ID r_push_id .)
    MAS             reduce using rule 20 (variable -> ID r_push_id .)
    MENOS           reduce using rule 20 (variable -> ID r_push_id .)
    MAYORQUE        reduce using rule 20 (variable -> ID r_push_id .)
    MENORQUE        reduce using rule 20 (variable -> ID r_push_id .)
    MAYORIGUAL      reduce using rule 20 (variable -> ID r_push_id .)
    MENORIGUAL      reduce using rule 20 (variable -> ID r_push_id .)
    IGUALIGUAL      reduce using rule 20 (variable -> ID r_push_id .)
    DIFERENTE       reduce using rule 20 (variable -> ID r_push_id .)
    AND             reduce using rule 20 (variable -> ID r_push_id .)
    OR              reduce using rule 20 (variable -> ID r_push_id .)
    COMA            reduce using rule 20 (variable -> ID r_push_id .)
    PARENT_C        reduce using rule 20 (variable -> ID r_push_id .)
    PUNTOCOMA       reduce using rule 20 (variable -> ID r_push_id .)
    CORCHETE_C      reduce using rule 20 (variable -> ID r_push_id .)
    HASTA           reduce using rule 20 (variable -> ID r_push_id .)
    HACER           reduce using rule 20 (variable -> ID r_push_id .)
    CORCHETE_A      shift and go to state 108

    dim                            shift and go to state 107

state 75

    (93) retorno -> REGRESA PARENT_A . expresion PARENT_C
    (58) expresion -> . t_expresion r_generate_quad_or
    (59) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (61) t_expresion -> . g_expresion r_generate_quad_and
    (62) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (64) g_expresion -> . m_expresion r_generate_quad_logicos
    (65) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    expresion                      shift and go to state 109
    t_expresion                    shift and go to state 97
    g_expresion                    shift and go to state 98
    m_expresion                    shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    variable                       shift and go to state 105
    llamada                        shift and go to state 106

state 76

    (94) lectura -> LEER PARENT_A . variables PARENT_C
    (23) variables -> . variable
    (24) variables -> . variable COMA variables
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim

    ID              shift and go to state 81

    variables                      shift and go to state 110
    variable                       shift and go to state 111

state 77

    (95) escritura -> ESCRIBIR PARENT_A . escr PARENT_C
    (100) escr -> . escritura_dos r_generate_quad_escr
    (101) escr -> . escritura_dos r_generate_quad_escr COMA escr
    (96) escritura_dos -> . CTE_STR r_push_cte_str
    (97) escritura_dos -> . expresion
    (58) expresion -> . t_expresion r_generate_quad_or
    (59) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (61) t_expresion -> . g_expresion r_generate_quad_and
    (62) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (64) g_expresion -> . m_expresion r_generate_quad_logicos
    (65) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    CTE_STR         shift and go to state 114
    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    escr                           shift and go to state 112
    escritura_dos                  shift and go to state 113
    expresion                      shift and go to state 115
    t_expresion                    shift and go to state 97
    g_expresion                    shift and go to state 98
    m_expresion                    shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    variable                       shift and go to state 105
    llamada                        shift and go to state 106

state 78

    (102) decision -> if r_end_if .

    ID              reduce using rule 102 (decision -> if r_end_if .)
    REGRESA         reduce using rule 102 (decision -> if r_end_if .)
    LEER            reduce using rule 102 (decision -> if r_end_if .)
    ESCRIBIR        reduce using rule 102 (decision -> if r_end_if .)
    DESDE           reduce using rule 102 (decision -> if r_end_if .)
    MIENTRAS        reduce using rule 102 (decision -> if r_end_if .)
    SI              reduce using rule 102 (decision -> if r_end_if .)
    LLAVE_C         reduce using rule 102 (decision -> if r_end_if .)


state 79

    (103) decision -> if r_goto_ifelse . else r_end_if
    (108) else -> . SINO LLAVE_A estatutos_dos LLAVE_C

    SINO            shift and go to state 117

    else                           shift and go to state 116

state 80

    (112) ciclo_for -> DESDE variable . IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C

    IGUAL           shift and go to state 118


state 81

    (20) variable -> ID . r_push_id
    (21) variable -> ID . r_push_id dim
    (22) r_push_id -> .

    CORCHETE_A      reduce using rule 22 (r_push_id -> .)
    IGUAL           reduce using rule 22 (r_push_id -> .)
    COMA            reduce using rule 22 (r_push_id -> .)
    PARENT_C        reduce using rule 22 (r_push_id -> .)

    r_push_id                      shift and go to state 74

state 82

    (109) ciclo_while -> MIENTRAS r_save_jump . PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while

    PARENT_A        shift and go to state 119


state 83

    (104) if -> SI PARENT_A . expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C
    (58) expresion -> . t_expresion r_generate_quad_or
    (59) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (61) t_expresion -> . g_expresion r_generate_quad_and
    (62) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (64) g_expresion -> . m_expresion r_generate_quad_logicos
    (65) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    expresion                      shift and go to state 120
    t_expresion                    shift and go to state 97
    g_expresion                    shift and go to state 98
    m_expresion                    shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    variable                       shift and go to state 105
    llamada                        shift and go to state 106

state 84

    (17) ids_simple -> ID save_vars_name dimension COMA . ids_simple
    (14) ids_simple -> . ID save_vars_name
    (15) ids_simple -> . ID save_vars_name dimension
    (16) ids_simple -> . ID save_vars_name COMA ids_simple
    (17) ids_simple -> . ID save_vars_name dimension COMA ids_simple

    ID              shift and go to state 29

    ids_simple                     shift and go to state 121

state 85

    (16) ids_simple -> ID save_vars_name COMA ids_simple .

    PUNTOCOMA       reduce using rule 16 (ids_simple -> ID save_vars_name COMA ids_simple .)


state 86

    (19) dimension -> CORCHETE_A CTE_I . CORCHETE_C

    CORCHETE_C      shift and go to state 122


state 87

    (32) func_dos -> PARENT_A PARENT_C . var_funcs
    (35) var_funcs -> . dec_est
    (36) var_funcs -> . dec_vars dec_est
    (40) dec_est -> . LLAVE_A LLAVE_C
    (41) dec_est -> . LLAVE_A estatutos_dos LLAVE_C
    (7) dec_vars -> . VAR vars save_vars

    LLAVE_A         shift and go to state 33
    VAR             shift and go to state 10

    var_funcs                      shift and go to state 123
    dec_est                        shift and go to state 124
    dec_vars                       shift and go to state 125

state 88

    (33) func_dos -> PARENT_A parametros . PARENT_C save_params var_funcs

    PARENT_C        shift and go to state 126


state 89

    (37) parametros -> tipo_simple . ID save_params_list
    (38) parametros -> tipo_simple . ID save_params_list COMA parametros

    ID              shift and go to state 127


state 90

    (29) funcion -> FUNCION VOID func_type_void ID create_func_table func_dos .

    FUNCION         reduce using rule 29 (funcion -> FUNCION VOID func_type_void ID create_func_table func_dos .)
    PRINCIPAL       reduce using rule 29 (funcion -> FUNCION VOID func_type_void ID create_func_table func_dos .)


state 91

    (52) asignacion -> variable IGUAL r_push_oper . expresion r_generate_quad_asig
    (58) expresion -> . t_expresion r_generate_quad_or
    (59) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (61) t_expresion -> . g_expresion r_generate_quad_and
    (62) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (64) g_expresion -> . m_expresion r_generate_quad_logicos
    (65) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    variable                       shift and go to state 105
    expresion                      shift and go to state 128
    t_expresion                    shift and go to state 97
    g_expresion                    shift and go to state 98
    m_expresion                    shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    llamada                        shift and go to state 106

state 92

    (20) variable -> ID . r_push_id
    (21) variable -> ID . r_push_id dim
    (54) llamada -> ID . PARENT_A PARENT_C
    (55) llamada -> ID . PARENT_A expresiones PARENT_C
    (22) r_push_id -> .

    PARENT_A        shift and go to state 73
    CORCHETE_A      reduce using rule 22 (r_push_id -> .)
    POR             reduce using rule 22 (r_push_id -> .)
    DIV             reduce using rule 22 (r_push_id -> .)
    MAS             reduce using rule 22 (r_push_id -> .)
    MENOS           reduce using rule 22 (r_push_id -> .)
    MAYORQUE        reduce using rule 22 (r_push_id -> .)
    MENORQUE        reduce using rule 22 (r_push_id -> .)
    MAYORIGUAL      reduce using rule 22 (r_push_id -> .)
    MENORIGUAL      reduce using rule 22 (r_push_id -> .)
    IGUALIGUAL      reduce using rule 22 (r_push_id -> .)
    DIFERENTE       reduce using rule 22 (r_push_id -> .)
    AND             reduce using rule 22 (r_push_id -> .)
    OR              reduce using rule 22 (r_push_id -> .)
    COMA            reduce using rule 22 (r_push_id -> .)
    PARENT_C        reduce using rule 22 (r_push_id -> .)
    PUNTOCOMA       reduce using rule 22 (r_push_id -> .)
    CORCHETE_C      reduce using rule 22 (r_push_id -> .)
    HASTA           reduce using rule 22 (r_push_id -> .)
    HACER           reduce using rule 22 (r_push_id -> .)

    r_push_id                      shift and go to state 74

state 93

    (82) factor -> PARENT_A . r_push_ff expresion PARENT_C r_pop_ff
    (91) r_push_ff -> .

    PARENT_A        reduce using rule 91 (r_push_ff -> .)
    CTE_I           reduce using rule 91 (r_push_ff -> .)
    CTE_F           reduce using rule 91 (r_push_ff -> .)
    CTE_CH          reduce using rule 91 (r_push_ff -> .)
    ID              reduce using rule 91 (r_push_ff -> .)

    r_push_ff                      shift and go to state 129

state 94

    (54) llamada -> ID PARENT_A PARENT_C .

    PUNTOCOMA       reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    POR             reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    DIV             reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    MAS             reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    MENOS           reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    MAYORQUE        reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    MENORQUE        reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    MAYORIGUAL      reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    MENORIGUAL      reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    IGUALIGUAL      reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    DIFERENTE       reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    AND             reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    OR              reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    COMA            reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    PARENT_C        reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    CORCHETE_C      reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    HASTA           reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)
    HACER           reduce using rule 54 (llamada -> ID PARENT_A PARENT_C .)


state 95

    (55) llamada -> ID PARENT_A expresiones . PARENT_C

    PARENT_C        shift and go to state 130


state 96

    (56) expresiones -> expresion .
    (57) expresiones -> expresion . COMA expresion

    PARENT_C        reduce using rule 56 (expresiones -> expresion .)
    COMA            shift and go to state 131


state 97

    (58) expresion -> t_expresion . r_generate_quad_or
    (59) expresion -> t_expresion . r_generate_quad_or OR r_push_oper expresion
    (60) r_generate_quad_or -> .

    OR              reduce using rule 60 (r_generate_quad_or -> .)
    COMA            reduce using rule 60 (r_generate_quad_or -> .)
    PARENT_C        reduce using rule 60 (r_generate_quad_or -> .)
    PUNTOCOMA       reduce using rule 60 (r_generate_quad_or -> .)
    CORCHETE_C      reduce using rule 60 (r_generate_quad_or -> .)
    HASTA           reduce using rule 60 (r_generate_quad_or -> .)
    HACER           reduce using rule 60 (r_generate_quad_or -> .)

    r_generate_quad_or             shift and go to state 132

state 98

    (61) t_expresion -> g_expresion . r_generate_quad_and
    (62) t_expresion -> g_expresion . r_generate_quad_and AND r_push_oper t_expresion
    (63) r_generate_quad_and -> .

    AND             reduce using rule 63 (r_generate_quad_and -> .)
    OR              reduce using rule 63 (r_generate_quad_and -> .)
    COMA            reduce using rule 63 (r_generate_quad_and -> .)
    PARENT_C        reduce using rule 63 (r_generate_quad_and -> .)
    PUNTOCOMA       reduce using rule 63 (r_generate_quad_and -> .)
    CORCHETE_C      reduce using rule 63 (r_generate_quad_and -> .)
    HASTA           reduce using rule 63 (r_generate_quad_and -> .)
    HACER           reduce using rule 63 (r_generate_quad_and -> .)

    r_generate_quad_and            shift and go to state 133

state 99

    (64) g_expresion -> m_expresion . r_generate_quad_logicos
    (65) g_expresion -> m_expresion . op_logicos m_expresion r_generate_quad_logicos
    (66) r_generate_quad_logicos -> .
    (67) op_logicos -> . MAYORQUE r_push_oper
    (68) op_logicos -> . MENORQUE r_push_oper
    (69) op_logicos -> . MAYORIGUAL r_push_oper
    (70) op_logicos -> . MENORIGUAL r_push_oper
    (71) op_logicos -> . IGUALIGUAL r_push_oper
    (72) op_logicos -> . DIFERENTE r_push_oper

    AND             reduce using rule 66 (r_generate_quad_logicos -> .)
    OR              reduce using rule 66 (r_generate_quad_logicos -> .)
    COMA            reduce using rule 66 (r_generate_quad_logicos -> .)
    PARENT_C        reduce using rule 66 (r_generate_quad_logicos -> .)
    PUNTOCOMA       reduce using rule 66 (r_generate_quad_logicos -> .)
    CORCHETE_C      reduce using rule 66 (r_generate_quad_logicos -> .)
    HASTA           reduce using rule 66 (r_generate_quad_logicos -> .)
    HACER           reduce using rule 66 (r_generate_quad_logicos -> .)
    MAYORQUE        shift and go to state 136
    MENORQUE        shift and go to state 137
    MAYORIGUAL      shift and go to state 138
    MENORIGUAL      shift and go to state 139
    IGUALIGUAL      shift and go to state 140
    DIFERENTE       shift and go to state 141

    r_generate_quad_logicos        shift and go to state 134
    op_logicos                     shift and go to state 135

state 100

    (73) m_expresion -> termino . r_generate_quad_masmen
    (74) m_expresion -> termino . r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> termino . r_generate_quad_masmen MENOS r_push_oper m_expresion
    (80) r_generate_quad_masmen -> .

    MAS             reduce using rule 80 (r_generate_quad_masmen -> .)
    MENOS           reduce using rule 80 (r_generate_quad_masmen -> .)
    MAYORQUE        reduce using rule 80 (r_generate_quad_masmen -> .)
    MENORQUE        reduce using rule 80 (r_generate_quad_masmen -> .)
    MAYORIGUAL      reduce using rule 80 (r_generate_quad_masmen -> .)
    MENORIGUAL      reduce using rule 80 (r_generate_quad_masmen -> .)
    IGUALIGUAL      reduce using rule 80 (r_generate_quad_masmen -> .)
    DIFERENTE       reduce using rule 80 (r_generate_quad_masmen -> .)
    AND             reduce using rule 80 (r_generate_quad_masmen -> .)
    OR              reduce using rule 80 (r_generate_quad_masmen -> .)
    COMA            reduce using rule 80 (r_generate_quad_masmen -> .)
    PARENT_C        reduce using rule 80 (r_generate_quad_masmen -> .)
    PUNTOCOMA       reduce using rule 80 (r_generate_quad_masmen -> .)
    CORCHETE_C      reduce using rule 80 (r_generate_quad_masmen -> .)
    HASTA           reduce using rule 80 (r_generate_quad_masmen -> .)
    HACER           reduce using rule 80 (r_generate_quad_masmen -> .)

    r_generate_quad_masmen         shift and go to state 142

state 101

    (76) termino -> factor . r_generate_quad_muldiv
    (77) termino -> factor . r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> factor . r_generate_quad_muldiv DIV r_push_oper termino
    (81) r_generate_quad_muldiv -> .

    POR             reduce using rule 81 (r_generate_quad_muldiv -> .)
    DIV             reduce using rule 81 (r_generate_quad_muldiv -> .)
    MAS             reduce using rule 81 (r_generate_quad_muldiv -> .)
    MENOS           reduce using rule 81 (r_generate_quad_muldiv -> .)
    MAYORQUE        reduce using rule 81 (r_generate_quad_muldiv -> .)
    MENORQUE        reduce using rule 81 (r_generate_quad_muldiv -> .)
    MAYORIGUAL      reduce using rule 81 (r_generate_quad_muldiv -> .)
    MENORIGUAL      reduce using rule 81 (r_generate_quad_muldiv -> .)
    IGUALIGUAL      reduce using rule 81 (r_generate_quad_muldiv -> .)
    DIFERENTE       reduce using rule 81 (r_generate_quad_muldiv -> .)
    AND             reduce using rule 81 (r_generate_quad_muldiv -> .)
    OR              reduce using rule 81 (r_generate_quad_muldiv -> .)
    COMA            reduce using rule 81 (r_generate_quad_muldiv -> .)
    PARENT_C        reduce using rule 81 (r_generate_quad_muldiv -> .)
    PUNTOCOMA       reduce using rule 81 (r_generate_quad_muldiv -> .)
    CORCHETE_C      reduce using rule 81 (r_generate_quad_muldiv -> .)
    HASTA           reduce using rule 81 (r_generate_quad_muldiv -> .)
    HACER           reduce using rule 81 (r_generate_quad_muldiv -> .)

    r_generate_quad_muldiv         shift and go to state 143

state 102

    (83) factor -> CTE_I . r_push_cte_i
    (88) r_push_cte_i -> .

    POR             reduce using rule 88 (r_push_cte_i -> .)
    DIV             reduce using rule 88 (r_push_cte_i -> .)
    MAS             reduce using rule 88 (r_push_cte_i -> .)
    MENOS           reduce using rule 88 (r_push_cte_i -> .)
    MAYORQUE        reduce using rule 88 (r_push_cte_i -> .)
    MENORQUE        reduce using rule 88 (r_push_cte_i -> .)
    MAYORIGUAL      reduce using rule 88 (r_push_cte_i -> .)
    MENORIGUAL      reduce using rule 88 (r_push_cte_i -> .)
    IGUALIGUAL      reduce using rule 88 (r_push_cte_i -> .)
    DIFERENTE       reduce using rule 88 (r_push_cte_i -> .)
    AND             reduce using rule 88 (r_push_cte_i -> .)
    OR              reduce using rule 88 (r_push_cte_i -> .)
    COMA            reduce using rule 88 (r_push_cte_i -> .)
    PARENT_C        reduce using rule 88 (r_push_cte_i -> .)
    PUNTOCOMA       reduce using rule 88 (r_push_cte_i -> .)
    CORCHETE_C      reduce using rule 88 (r_push_cte_i -> .)
    HASTA           reduce using rule 88 (r_push_cte_i -> .)
    HACER           reduce using rule 88 (r_push_cte_i -> .)

    r_push_cte_i                   shift and go to state 144

state 103

    (84) factor -> CTE_F . r_push_cte_f
    (89) r_push_cte_f -> .

    POR             reduce using rule 89 (r_push_cte_f -> .)
    DIV             reduce using rule 89 (r_push_cte_f -> .)
    MAS             reduce using rule 89 (r_push_cte_f -> .)
    MENOS           reduce using rule 89 (r_push_cte_f -> .)
    MAYORQUE        reduce using rule 89 (r_push_cte_f -> .)
    MENORQUE        reduce using rule 89 (r_push_cte_f -> .)
    MAYORIGUAL      reduce using rule 89 (r_push_cte_f -> .)
    MENORIGUAL      reduce using rule 89 (r_push_cte_f -> .)
    IGUALIGUAL      reduce using rule 89 (r_push_cte_f -> .)
    DIFERENTE       reduce using rule 89 (r_push_cte_f -> .)
    AND             reduce using rule 89 (r_push_cte_f -> .)
    OR              reduce using rule 89 (r_push_cte_f -> .)
    COMA            reduce using rule 89 (r_push_cte_f -> .)
    PARENT_C        reduce using rule 89 (r_push_cte_f -> .)
    PUNTOCOMA       reduce using rule 89 (r_push_cte_f -> .)
    CORCHETE_C      reduce using rule 89 (r_push_cte_f -> .)
    HASTA           reduce using rule 89 (r_push_cte_f -> .)
    HACER           reduce using rule 89 (r_push_cte_f -> .)

    r_push_cte_f                   shift and go to state 145

state 104

    (85) factor -> CTE_CH . r_push_cte_c
    (90) r_push_cte_c -> .

    POR             reduce using rule 90 (r_push_cte_c -> .)
    DIV             reduce using rule 90 (r_push_cte_c -> .)
    MAS             reduce using rule 90 (r_push_cte_c -> .)
    MENOS           reduce using rule 90 (r_push_cte_c -> .)
    MAYORQUE        reduce using rule 90 (r_push_cte_c -> .)
    MENORQUE        reduce using rule 90 (r_push_cte_c -> .)
    MAYORIGUAL      reduce using rule 90 (r_push_cte_c -> .)
    MENORIGUAL      reduce using rule 90 (r_push_cte_c -> .)
    IGUALIGUAL      reduce using rule 90 (r_push_cte_c -> .)
    DIFERENTE       reduce using rule 90 (r_push_cte_c -> .)
    AND             reduce using rule 90 (r_push_cte_c -> .)
    OR              reduce using rule 90 (r_push_cte_c -> .)
    COMA            reduce using rule 90 (r_push_cte_c -> .)
    PARENT_C        reduce using rule 90 (r_push_cte_c -> .)
    PUNTOCOMA       reduce using rule 90 (r_push_cte_c -> .)
    CORCHETE_C      reduce using rule 90 (r_push_cte_c -> .)
    HASTA           reduce using rule 90 (r_push_cte_c -> .)
    HACER           reduce using rule 90 (r_push_cte_c -> .)

    r_push_cte_c                   shift and go to state 146

state 105

    (86) factor -> variable .

    POR             reduce using rule 86 (factor -> variable .)
    DIV             reduce using rule 86 (factor -> variable .)
    MAS             reduce using rule 86 (factor -> variable .)
    MENOS           reduce using rule 86 (factor -> variable .)
    MAYORQUE        reduce using rule 86 (factor -> variable .)
    MENORQUE        reduce using rule 86 (factor -> variable .)
    MAYORIGUAL      reduce using rule 86 (factor -> variable .)
    MENORIGUAL      reduce using rule 86 (factor -> variable .)
    IGUALIGUAL      reduce using rule 86 (factor -> variable .)
    DIFERENTE       reduce using rule 86 (factor -> variable .)
    AND             reduce using rule 86 (factor -> variable .)
    OR              reduce using rule 86 (factor -> variable .)
    COMA            reduce using rule 86 (factor -> variable .)
    PARENT_C        reduce using rule 86 (factor -> variable .)
    PUNTOCOMA       reduce using rule 86 (factor -> variable .)
    CORCHETE_C      reduce using rule 86 (factor -> variable .)
    HASTA           reduce using rule 86 (factor -> variable .)
    HACER           reduce using rule 86 (factor -> variable .)


state 106

    (87) factor -> llamada .

    POR             reduce using rule 87 (factor -> llamada .)
    DIV             reduce using rule 87 (factor -> llamada .)
    MAS             reduce using rule 87 (factor -> llamada .)
    MENOS           reduce using rule 87 (factor -> llamada .)
    MAYORQUE        reduce using rule 87 (factor -> llamada .)
    MENORQUE        reduce using rule 87 (factor -> llamada .)
    MAYORIGUAL      reduce using rule 87 (factor -> llamada .)
    MENORIGUAL      reduce using rule 87 (factor -> llamada .)
    IGUALIGUAL      reduce using rule 87 (factor -> llamada .)
    DIFERENTE       reduce using rule 87 (factor -> llamada .)
    AND             reduce using rule 87 (factor -> llamada .)
    OR              reduce using rule 87 (factor -> llamada .)
    COMA            reduce using rule 87 (factor -> llamada .)
    PARENT_C        reduce using rule 87 (factor -> llamada .)
    PUNTOCOMA       reduce using rule 87 (factor -> llamada .)
    CORCHETE_C      reduce using rule 87 (factor -> llamada .)
    HASTA           reduce using rule 87 (factor -> llamada .)
    HACER           reduce using rule 87 (factor -> llamada .)


state 107

    (21) variable -> ID r_push_id dim .

    IGUAL           reduce using rule 21 (variable -> ID r_push_id dim .)
    POR             reduce using rule 21 (variable -> ID r_push_id dim .)
    DIV             reduce using rule 21 (variable -> ID r_push_id dim .)
    MAS             reduce using rule 21 (variable -> ID r_push_id dim .)
    MENOS           reduce using rule 21 (variable -> ID r_push_id dim .)
    MAYORQUE        reduce using rule 21 (variable -> ID r_push_id dim .)
    MENORQUE        reduce using rule 21 (variable -> ID r_push_id dim .)
    MAYORIGUAL      reduce using rule 21 (variable -> ID r_push_id dim .)
    MENORIGUAL      reduce using rule 21 (variable -> ID r_push_id dim .)
    IGUALIGUAL      reduce using rule 21 (variable -> ID r_push_id dim .)
    DIFERENTE       reduce using rule 21 (variable -> ID r_push_id dim .)
    AND             reduce using rule 21 (variable -> ID r_push_id dim .)
    OR              reduce using rule 21 (variable -> ID r_push_id dim .)
    COMA            reduce using rule 21 (variable -> ID r_push_id dim .)
    PARENT_C        reduce using rule 21 (variable -> ID r_push_id dim .)
    PUNTOCOMA       reduce using rule 21 (variable -> ID r_push_id dim .)
    CORCHETE_C      reduce using rule 21 (variable -> ID r_push_id dim .)
    HASTA           reduce using rule 21 (variable -> ID r_push_id dim .)
    HACER           reduce using rule 21 (variable -> ID r_push_id dim .)


state 108

    (25) dim -> CORCHETE_A . expresion CORCHETE_C
    (58) expresion -> . t_expresion r_generate_quad_or
    (59) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (61) t_expresion -> . g_expresion r_generate_quad_and
    (62) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (64) g_expresion -> . m_expresion r_generate_quad_logicos
    (65) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    expresion                      shift and go to state 147
    t_expresion                    shift and go to state 97
    g_expresion                    shift and go to state 98
    m_expresion                    shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    variable                       shift and go to state 105
    llamada                        shift and go to state 106

state 109

    (93) retorno -> REGRESA PARENT_A expresion . PARENT_C

    PARENT_C        shift and go to state 148


state 110

    (94) lectura -> LEER PARENT_A variables . PARENT_C

    PARENT_C        shift and go to state 149


state 111

    (23) variables -> variable .
    (24) variables -> variable . COMA variables

    PARENT_C        reduce using rule 23 (variables -> variable .)
    COMA            shift and go to state 150


state 112

    (95) escritura -> ESCRIBIR PARENT_A escr . PARENT_C

    PARENT_C        shift and go to state 151


state 113

    (100) escr -> escritura_dos . r_generate_quad_escr
    (101) escr -> escritura_dos . r_generate_quad_escr COMA escr
    (99) r_generate_quad_escr -> .

    COMA            reduce using rule 99 (r_generate_quad_escr -> .)
    PARENT_C        reduce using rule 99 (r_generate_quad_escr -> .)

    r_generate_quad_escr           shift and go to state 152

state 114

    (96) escritura_dos -> CTE_STR . r_push_cte_str
    (98) r_push_cte_str -> .

    COMA            reduce using rule 98 (r_push_cte_str -> .)
    PARENT_C        reduce using rule 98 (r_push_cte_str -> .)

    r_push_cte_str                 shift and go to state 153

state 115

    (97) escritura_dos -> expresion .

    COMA            reduce using rule 97 (escritura_dos -> expresion .)
    PARENT_C        reduce using rule 97 (escritura_dos -> expresion .)


state 116

    (103) decision -> if r_goto_ifelse else . r_end_if
    (106) r_end_if -> .

    ID              reduce using rule 106 (r_end_if -> .)
    REGRESA         reduce using rule 106 (r_end_if -> .)
    LEER            reduce using rule 106 (r_end_if -> .)
    ESCRIBIR        reduce using rule 106 (r_end_if -> .)
    DESDE           reduce using rule 106 (r_end_if -> .)
    MIENTRAS        reduce using rule 106 (r_end_if -> .)
    SI              reduce using rule 106 (r_end_if -> .)
    LLAVE_C         reduce using rule 106 (r_end_if -> .)

    r_end_if                       shift and go to state 154

state 117

    (108) else -> SINO . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 155


state 118

    (112) ciclo_for -> DESDE variable IGUAL . expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (58) expresion -> . t_expresion r_generate_quad_or
    (59) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (61) t_expresion -> . g_expresion r_generate_quad_and
    (62) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (64) g_expresion -> . m_expresion r_generate_quad_logicos
    (65) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    variable                       shift and go to state 105
    expresion                      shift and go to state 156
    t_expresion                    shift and go to state 97
    g_expresion                    shift and go to state 98
    m_expresion                    shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    llamada                        shift and go to state 106

state 119

    (109) ciclo_while -> MIENTRAS r_save_jump PARENT_A . expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (58) expresion -> . t_expresion r_generate_quad_or
    (59) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (61) t_expresion -> . g_expresion r_generate_quad_and
    (62) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (64) g_expresion -> . m_expresion r_generate_quad_logicos
    (65) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    expresion                      shift and go to state 157
    t_expresion                    shift and go to state 97
    g_expresion                    shift and go to state 98
    m_expresion                    shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    variable                       shift and go to state 105
    llamada                        shift and go to state 106

state 120

    (104) if -> SI PARENT_A expresion . PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    PARENT_C        shift and go to state 158


state 121

    (17) ids_simple -> ID save_vars_name dimension COMA ids_simple .

    PUNTOCOMA       reduce using rule 17 (ids_simple -> ID save_vars_name dimension COMA ids_simple .)


state 122

    (19) dimension -> CORCHETE_A CTE_I CORCHETE_C .

    COMA            reduce using rule 19 (dimension -> CORCHETE_A CTE_I CORCHETE_C .)
    PUNTOCOMA       reduce using rule 19 (dimension -> CORCHETE_A CTE_I CORCHETE_C .)


state 123

    (32) func_dos -> PARENT_A PARENT_C var_funcs .

    FUNCION         reduce using rule 32 (func_dos -> PARENT_A PARENT_C var_funcs .)
    PRINCIPAL       reduce using rule 32 (func_dos -> PARENT_A PARENT_C var_funcs .)


state 124

    (35) var_funcs -> dec_est .

    FUNCION         reduce using rule 35 (var_funcs -> dec_est .)
    PRINCIPAL       reduce using rule 35 (var_funcs -> dec_est .)


state 125

    (36) var_funcs -> dec_vars . dec_est
    (40) dec_est -> . LLAVE_A LLAVE_C
    (41) dec_est -> . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 33

    dec_est                        shift and go to state 159

state 126

    (33) func_dos -> PARENT_A parametros PARENT_C . save_params var_funcs
    (34) save_params -> .

    LLAVE_A         reduce using rule 34 (save_params -> .)
    VAR             reduce using rule 34 (save_params -> .)

    save_params                    shift and go to state 160

state 127

    (37) parametros -> tipo_simple ID . save_params_list
    (38) parametros -> tipo_simple ID . save_params_list COMA parametros
    (39) save_params_list -> .

    COMA            reduce using rule 39 (save_params_list -> .)
    PARENT_C        reduce using rule 39 (save_params_list -> .)

    save_params_list               shift and go to state 161

state 128

    (52) asignacion -> variable IGUAL r_push_oper expresion . r_generate_quad_asig
    (53) r_generate_quad_asig -> .

    PUNTOCOMA       reduce using rule 53 (r_generate_quad_asig -> .)

    r_generate_quad_asig           shift and go to state 162

state 129

    (82) factor -> PARENT_A r_push_ff . expresion PARENT_C r_pop_ff
    (58) expresion -> . t_expresion r_generate_quad_or
    (59) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (61) t_expresion -> . g_expresion r_generate_quad_and
    (62) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (64) g_expresion -> . m_expresion r_generate_quad_logicos
    (65) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    expresion                      shift and go to state 163
    t_expresion                    shift and go to state 97
    g_expresion                    shift and go to state 98
    m_expresion                    shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    variable                       shift and go to state 105
    llamada                        shift and go to state 106

state 130

    (55) llamada -> ID PARENT_A expresiones PARENT_C .

    PUNTOCOMA       reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    POR             reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    DIV             reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MAS             reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MENOS           reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MAYORQUE        reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MENORQUE        reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MAYORIGUAL      reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MENORIGUAL      reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    IGUALIGUAL      reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    DIFERENTE       reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    AND             reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    OR              reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    COMA            reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    PARENT_C        reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    CORCHETE_C      reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    HASTA           reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)
    HACER           reduce using rule 55 (llamada -> ID PARENT_A expresiones PARENT_C .)


state 131

    (57) expresiones -> expresion COMA . expresion
    (58) expresion -> . t_expresion r_generate_quad_or
    (59) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (61) t_expresion -> . g_expresion r_generate_quad_and
    (62) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (64) g_expresion -> . m_expresion r_generate_quad_logicos
    (65) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    expresion                      shift and go to state 164
    t_expresion                    shift and go to state 97
    g_expresion                    shift and go to state 98
    m_expresion                    shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    variable                       shift and go to state 105
    llamada                        shift and go to state 106

state 132

    (58) expresion -> t_expresion r_generate_quad_or .
    (59) expresion -> t_expresion r_generate_quad_or . OR r_push_oper expresion

    COMA            reduce using rule 58 (expresion -> t_expresion r_generate_quad_or .)
    PARENT_C        reduce using rule 58 (expresion -> t_expresion r_generate_quad_or .)
    PUNTOCOMA       reduce using rule 58 (expresion -> t_expresion r_generate_quad_or .)
    CORCHETE_C      reduce using rule 58 (expresion -> t_expresion r_generate_quad_or .)
    HASTA           reduce using rule 58 (expresion -> t_expresion r_generate_quad_or .)
    HACER           reduce using rule 58 (expresion -> t_expresion r_generate_quad_or .)
    OR              shift and go to state 165


state 133

    (61) t_expresion -> g_expresion r_generate_quad_and .
    (62) t_expresion -> g_expresion r_generate_quad_and . AND r_push_oper t_expresion

    OR              reduce using rule 61 (t_expresion -> g_expresion r_generate_quad_and .)
    COMA            reduce using rule 61 (t_expresion -> g_expresion r_generate_quad_and .)
    PARENT_C        reduce using rule 61 (t_expresion -> g_expresion r_generate_quad_and .)
    PUNTOCOMA       reduce using rule 61 (t_expresion -> g_expresion r_generate_quad_and .)
    CORCHETE_C      reduce using rule 61 (t_expresion -> g_expresion r_generate_quad_and .)
    HASTA           reduce using rule 61 (t_expresion -> g_expresion r_generate_quad_and .)
    HACER           reduce using rule 61 (t_expresion -> g_expresion r_generate_quad_and .)
    AND             shift and go to state 166


state 134

    (64) g_expresion -> m_expresion r_generate_quad_logicos .

    AND             reduce using rule 64 (g_expresion -> m_expresion r_generate_quad_logicos .)
    OR              reduce using rule 64 (g_expresion -> m_expresion r_generate_quad_logicos .)
    COMA            reduce using rule 64 (g_expresion -> m_expresion r_generate_quad_logicos .)
    PARENT_C        reduce using rule 64 (g_expresion -> m_expresion r_generate_quad_logicos .)
    PUNTOCOMA       reduce using rule 64 (g_expresion -> m_expresion r_generate_quad_logicos .)
    CORCHETE_C      reduce using rule 64 (g_expresion -> m_expresion r_generate_quad_logicos .)
    HASTA           reduce using rule 64 (g_expresion -> m_expresion r_generate_quad_logicos .)
    HACER           reduce using rule 64 (g_expresion -> m_expresion r_generate_quad_logicos .)


state 135

    (65) g_expresion -> m_expresion op_logicos . m_expresion r_generate_quad_logicos
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    m_expresion                    shift and go to state 167
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    variable                       shift and go to state 105
    llamada                        shift and go to state 106

state 136

    (67) op_logicos -> MAYORQUE . r_push_oper
    (79) r_push_oper -> .

    PARENT_A        reduce using rule 79 (r_push_oper -> .)
    CTE_I           reduce using rule 79 (r_push_oper -> .)
    CTE_F           reduce using rule 79 (r_push_oper -> .)
    CTE_CH          reduce using rule 79 (r_push_oper -> .)
    ID              reduce using rule 79 (r_push_oper -> .)

    r_push_oper                    shift and go to state 168

state 137

    (68) op_logicos -> MENORQUE . r_push_oper
    (79) r_push_oper -> .

    PARENT_A        reduce using rule 79 (r_push_oper -> .)
    CTE_I           reduce using rule 79 (r_push_oper -> .)
    CTE_F           reduce using rule 79 (r_push_oper -> .)
    CTE_CH          reduce using rule 79 (r_push_oper -> .)
    ID              reduce using rule 79 (r_push_oper -> .)

    r_push_oper                    shift and go to state 169

state 138

    (69) op_logicos -> MAYORIGUAL . r_push_oper
    (79) r_push_oper -> .

    PARENT_A        reduce using rule 79 (r_push_oper -> .)
    CTE_I           reduce using rule 79 (r_push_oper -> .)
    CTE_F           reduce using rule 79 (r_push_oper -> .)
    CTE_CH          reduce using rule 79 (r_push_oper -> .)
    ID              reduce using rule 79 (r_push_oper -> .)

    r_push_oper                    shift and go to state 170

state 139

    (70) op_logicos -> MENORIGUAL . r_push_oper
    (79) r_push_oper -> .

    PARENT_A        reduce using rule 79 (r_push_oper -> .)
    CTE_I           reduce using rule 79 (r_push_oper -> .)
    CTE_F           reduce using rule 79 (r_push_oper -> .)
    CTE_CH          reduce using rule 79 (r_push_oper -> .)
    ID              reduce using rule 79 (r_push_oper -> .)

    r_push_oper                    shift and go to state 171

state 140

    (71) op_logicos -> IGUALIGUAL . r_push_oper
    (79) r_push_oper -> .

    PARENT_A        reduce using rule 79 (r_push_oper -> .)
    CTE_I           reduce using rule 79 (r_push_oper -> .)
    CTE_F           reduce using rule 79 (r_push_oper -> .)
    CTE_CH          reduce using rule 79 (r_push_oper -> .)
    ID              reduce using rule 79 (r_push_oper -> .)

    r_push_oper                    shift and go to state 172

state 141

    (72) op_logicos -> DIFERENTE . r_push_oper
    (79) r_push_oper -> .

    PARENT_A        reduce using rule 79 (r_push_oper -> .)
    CTE_I           reduce using rule 79 (r_push_oper -> .)
    CTE_F           reduce using rule 79 (r_push_oper -> .)
    CTE_CH          reduce using rule 79 (r_push_oper -> .)
    ID              reduce using rule 79 (r_push_oper -> .)

    r_push_oper                    shift and go to state 173

state 142

    (73) m_expresion -> termino r_generate_quad_masmen .
    (74) m_expresion -> termino r_generate_quad_masmen . MAS r_push_oper m_expresion
    (75) m_expresion -> termino r_generate_quad_masmen . MENOS r_push_oper m_expresion

    MAYORQUE        reduce using rule 73 (m_expresion -> termino r_generate_quad_masmen .)
    MENORQUE        reduce using rule 73 (m_expresion -> termino r_generate_quad_masmen .)
    MAYORIGUAL      reduce using rule 73 (m_expresion -> termino r_generate_quad_masmen .)
    MENORIGUAL      reduce using rule 73 (m_expresion -> termino r_generate_quad_masmen .)
    IGUALIGUAL      reduce using rule 73 (m_expresion -> termino r_generate_quad_masmen .)
    DIFERENTE       reduce using rule 73 (m_expresion -> termino r_generate_quad_masmen .)
    AND             reduce using rule 73 (m_expresion -> termino r_generate_quad_masmen .)
    OR              reduce using rule 73 (m_expresion -> termino r_generate_quad_masmen .)
    COMA            reduce using rule 73 (m_expresion -> termino r_generate_quad_masmen .)
    PARENT_C        reduce using rule 73 (m_expresion -> termino r_generate_quad_masmen .)
    PUNTOCOMA       reduce using rule 73 (m_expresion -> termino r_generate_quad_masmen .)
    CORCHETE_C      reduce using rule 73 (m_expresion -> termino r_generate_quad_masmen .)
    HASTA           reduce using rule 73 (m_expresion -> termino r_generate_quad_masmen .)
    HACER           reduce using rule 73 (m_expresion -> termino r_generate_quad_masmen .)
    MAS             shift and go to state 174
    MENOS           shift and go to state 175


state 143

    (76) termino -> factor r_generate_quad_muldiv .
    (77) termino -> factor r_generate_quad_muldiv . POR r_push_oper termino
    (78) termino -> factor r_generate_quad_muldiv . DIV r_push_oper termino

    MAS             reduce using rule 76 (termino -> factor r_generate_quad_muldiv .)
    MENOS           reduce using rule 76 (termino -> factor r_generate_quad_muldiv .)
    MAYORQUE        reduce using rule 76 (termino -> factor r_generate_quad_muldiv .)
    MENORQUE        reduce using rule 76 (termino -> factor r_generate_quad_muldiv .)
    MAYORIGUAL      reduce using rule 76 (termino -> factor r_generate_quad_muldiv .)
    MENORIGUAL      reduce using rule 76 (termino -> factor r_generate_quad_muldiv .)
    IGUALIGUAL      reduce using rule 76 (termino -> factor r_generate_quad_muldiv .)
    DIFERENTE       reduce using rule 76 (termino -> factor r_generate_quad_muldiv .)
    AND             reduce using rule 76 (termino -> factor r_generate_quad_muldiv .)
    OR              reduce using rule 76 (termino -> factor r_generate_quad_muldiv .)
    COMA            reduce using rule 76 (termino -> factor r_generate_quad_muldiv .)
    PARENT_C        reduce using rule 76 (termino -> factor r_generate_quad_muldiv .)
    PUNTOCOMA       reduce using rule 76 (termino -> factor r_generate_quad_muldiv .)
    CORCHETE_C      reduce using rule 76 (termino -> factor r_generate_quad_muldiv .)
    HASTA           reduce using rule 76 (termino -> factor r_generate_quad_muldiv .)
    HACER           reduce using rule 76 (termino -> factor r_generate_quad_muldiv .)
    POR             shift and go to state 176
    DIV             shift and go to state 177


state 144

    (83) factor -> CTE_I r_push_cte_i .

    POR             reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    DIV             reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    MAS             reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    MENOS           reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    MAYORQUE        reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    MENORQUE        reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    MAYORIGUAL      reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    MENORIGUAL      reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    IGUALIGUAL      reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    DIFERENTE       reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    AND             reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    OR              reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    COMA            reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    PARENT_C        reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    PUNTOCOMA       reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    CORCHETE_C      reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    HASTA           reduce using rule 83 (factor -> CTE_I r_push_cte_i .)
    HACER           reduce using rule 83 (factor -> CTE_I r_push_cte_i .)


state 145

    (84) factor -> CTE_F r_push_cte_f .

    POR             reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    DIV             reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    MAS             reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    MENOS           reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    MAYORQUE        reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    MENORQUE        reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    MAYORIGUAL      reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    MENORIGUAL      reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    IGUALIGUAL      reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    DIFERENTE       reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    AND             reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    OR              reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    COMA            reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    PARENT_C        reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    PUNTOCOMA       reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    CORCHETE_C      reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    HASTA           reduce using rule 84 (factor -> CTE_F r_push_cte_f .)
    HACER           reduce using rule 84 (factor -> CTE_F r_push_cte_f .)


state 146

    (85) factor -> CTE_CH r_push_cte_c .

    POR             reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    DIV             reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    MAS             reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    MENOS           reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    MAYORQUE        reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    MENORQUE        reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    MAYORIGUAL      reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    MENORIGUAL      reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    IGUALIGUAL      reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    DIFERENTE       reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    AND             reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    OR              reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    COMA            reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    PARENT_C        reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    PUNTOCOMA       reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    CORCHETE_C      reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    HASTA           reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)
    HACER           reduce using rule 85 (factor -> CTE_CH r_push_cte_c .)


state 147

    (25) dim -> CORCHETE_A expresion . CORCHETE_C

    CORCHETE_C      shift and go to state 178


state 148

    (93) retorno -> REGRESA PARENT_A expresion PARENT_C .

    PUNTOCOMA       reduce using rule 93 (retorno -> REGRESA PARENT_A expresion PARENT_C .)


state 149

    (94) lectura -> LEER PARENT_A variables PARENT_C .

    PUNTOCOMA       reduce using rule 94 (lectura -> LEER PARENT_A variables PARENT_C .)


state 150

    (24) variables -> variable COMA . variables
    (23) variables -> . variable
    (24) variables -> . variable COMA variables
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim

    ID              shift and go to state 81

    variable                       shift and go to state 111
    variables                      shift and go to state 179

state 151

    (95) escritura -> ESCRIBIR PARENT_A escr PARENT_C .

    PUNTOCOMA       reduce using rule 95 (escritura -> ESCRIBIR PARENT_A escr PARENT_C .)


state 152

    (100) escr -> escritura_dos r_generate_quad_escr .
    (101) escr -> escritura_dos r_generate_quad_escr . COMA escr

    PARENT_C        reduce using rule 100 (escr -> escritura_dos r_generate_quad_escr .)
    COMA            shift and go to state 180


state 153

    (96) escritura_dos -> CTE_STR r_push_cte_str .

    COMA            reduce using rule 96 (escritura_dos -> CTE_STR r_push_cte_str .)
    PARENT_C        reduce using rule 96 (escritura_dos -> CTE_STR r_push_cte_str .)


state 154

    (103) decision -> if r_goto_ifelse else r_end_if .

    ID              reduce using rule 103 (decision -> if r_goto_ifelse else r_end_if .)
    REGRESA         reduce using rule 103 (decision -> if r_goto_ifelse else r_end_if .)
    LEER            reduce using rule 103 (decision -> if r_goto_ifelse else r_end_if .)
    ESCRIBIR        reduce using rule 103 (decision -> if r_goto_ifelse else r_end_if .)
    DESDE           reduce using rule 103 (decision -> if r_goto_ifelse else r_end_if .)
    MIENTRAS        reduce using rule 103 (decision -> if r_goto_ifelse else r_end_if .)
    SI              reduce using rule 103 (decision -> if r_goto_ifelse else r_end_if .)
    LLAVE_C         reduce using rule 103 (decision -> if r_goto_ifelse else r_end_if .)


state 155

    (108) else -> SINO LLAVE_A . estatutos_dos LLAVE_C
    (50) estatutos_dos -> . estatutos
    (51) estatutos_dos -> . estatutos estatutos_dos
    (42) estatutos -> . asignacion PUNTOCOMA
    (43) estatutos -> . llamada PUNTOCOMA
    (44) estatutos -> . retorno PUNTOCOMA
    (45) estatutos -> . lectura PUNTOCOMA
    (46) estatutos -> . escritura PUNTOCOMA
    (47) estatutos -> . decision
    (48) estatutos -> . ciclo_for
    (49) estatutos -> . ciclo_while
    (52) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C
    (93) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (94) lectura -> . LEER PARENT_A variables PARENT_C
    (95) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (102) decision -> . if r_end_if
    (103) decision -> . if r_goto_ifelse else r_end_if
    (112) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (109) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (104) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 50
    REGRESA         shift and go to state 51
    LEER            shift and go to state 52
    ESCRIBIR        shift and go to state 53
    DESDE           shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57

    estatutos_dos                  shift and go to state 181
    estatutos                      shift and go to state 40
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    retorno                        shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    decision                       shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    variable                       shift and go to state 49
    if                             shift and go to state 54

state 156

    (112) ciclo_for -> DESDE variable IGUAL expresion . HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C

    HASTA           shift and go to state 182


state 157

    (109) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion . PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while

    PARENT_C        shift and go to state 183


state 158

    (104) if -> SI PARENT_A expresion PARENT_C . r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C
    (105) r_check_exp_type -> .

    ENTONCES        reduce using rule 105 (r_check_exp_type -> .)

    r_check_exp_type               shift and go to state 184

state 159

    (36) var_funcs -> dec_vars dec_est .

    FUNCION         reduce using rule 36 (var_funcs -> dec_vars dec_est .)
    PRINCIPAL       reduce using rule 36 (var_funcs -> dec_vars dec_est .)


state 160

    (33) func_dos -> PARENT_A parametros PARENT_C save_params . var_funcs
    (35) var_funcs -> . dec_est
    (36) var_funcs -> . dec_vars dec_est
    (40) dec_est -> . LLAVE_A LLAVE_C
    (41) dec_est -> . LLAVE_A estatutos_dos LLAVE_C
    (7) dec_vars -> . VAR vars save_vars

    LLAVE_A         shift and go to state 33
    VAR             shift and go to state 10

    var_funcs                      shift and go to state 185
    dec_est                        shift and go to state 124
    dec_vars                       shift and go to state 125

state 161

    (37) parametros -> tipo_simple ID save_params_list .
    (38) parametros -> tipo_simple ID save_params_list . COMA parametros

    PARENT_C        reduce using rule 37 (parametros -> tipo_simple ID save_params_list .)
    COMA            shift and go to state 186


state 162

    (52) asignacion -> variable IGUAL r_push_oper expresion r_generate_quad_asig .

    PUNTOCOMA       reduce using rule 52 (asignacion -> variable IGUAL r_push_oper expresion r_generate_quad_asig .)


state 163

    (82) factor -> PARENT_A r_push_ff expresion . PARENT_C r_pop_ff

    PARENT_C        shift and go to state 187


state 164

    (57) expresiones -> expresion COMA expresion .

    PARENT_C        reduce using rule 57 (expresiones -> expresion COMA expresion .)


state 165

    (59) expresion -> t_expresion r_generate_quad_or OR . r_push_oper expresion
    (79) r_push_oper -> .

    PARENT_A        reduce using rule 79 (r_push_oper -> .)
    CTE_I           reduce using rule 79 (r_push_oper -> .)
    CTE_F           reduce using rule 79 (r_push_oper -> .)
    CTE_CH          reduce using rule 79 (r_push_oper -> .)
    ID              reduce using rule 79 (r_push_oper -> .)

    r_push_oper                    shift and go to state 188

state 166

    (62) t_expresion -> g_expresion r_generate_quad_and AND . r_push_oper t_expresion
    (79) r_push_oper -> .

    PARENT_A        reduce using rule 79 (r_push_oper -> .)
    CTE_I           reduce using rule 79 (r_push_oper -> .)
    CTE_F           reduce using rule 79 (r_push_oper -> .)
    CTE_CH          reduce using rule 79 (r_push_oper -> .)
    ID              reduce using rule 79 (r_push_oper -> .)

    r_push_oper                    shift and go to state 189

state 167

    (65) g_expresion -> m_expresion op_logicos m_expresion . r_generate_quad_logicos
    (66) r_generate_quad_logicos -> .

    AND             reduce using rule 66 (r_generate_quad_logicos -> .)
    OR              reduce using rule 66 (r_generate_quad_logicos -> .)
    COMA            reduce using rule 66 (r_generate_quad_logicos -> .)
    PARENT_C        reduce using rule 66 (r_generate_quad_logicos -> .)
    PUNTOCOMA       reduce using rule 66 (r_generate_quad_logicos -> .)
    CORCHETE_C      reduce using rule 66 (r_generate_quad_logicos -> .)
    HASTA           reduce using rule 66 (r_generate_quad_logicos -> .)
    HACER           reduce using rule 66 (r_generate_quad_logicos -> .)

    r_generate_quad_logicos        shift and go to state 190

state 168

    (67) op_logicos -> MAYORQUE r_push_oper .

    PARENT_A        reduce using rule 67 (op_logicos -> MAYORQUE r_push_oper .)
    CTE_I           reduce using rule 67 (op_logicos -> MAYORQUE r_push_oper .)
    CTE_F           reduce using rule 67 (op_logicos -> MAYORQUE r_push_oper .)
    CTE_CH          reduce using rule 67 (op_logicos -> MAYORQUE r_push_oper .)
    ID              reduce using rule 67 (op_logicos -> MAYORQUE r_push_oper .)


state 169

    (68) op_logicos -> MENORQUE r_push_oper .

    PARENT_A        reduce using rule 68 (op_logicos -> MENORQUE r_push_oper .)
    CTE_I           reduce using rule 68 (op_logicos -> MENORQUE r_push_oper .)
    CTE_F           reduce using rule 68 (op_logicos -> MENORQUE r_push_oper .)
    CTE_CH          reduce using rule 68 (op_logicos -> MENORQUE r_push_oper .)
    ID              reduce using rule 68 (op_logicos -> MENORQUE r_push_oper .)


state 170

    (69) op_logicos -> MAYORIGUAL r_push_oper .

    PARENT_A        reduce using rule 69 (op_logicos -> MAYORIGUAL r_push_oper .)
    CTE_I           reduce using rule 69 (op_logicos -> MAYORIGUAL r_push_oper .)
    CTE_F           reduce using rule 69 (op_logicos -> MAYORIGUAL r_push_oper .)
    CTE_CH          reduce using rule 69 (op_logicos -> MAYORIGUAL r_push_oper .)
    ID              reduce using rule 69 (op_logicos -> MAYORIGUAL r_push_oper .)


state 171

    (70) op_logicos -> MENORIGUAL r_push_oper .

    PARENT_A        reduce using rule 70 (op_logicos -> MENORIGUAL r_push_oper .)
    CTE_I           reduce using rule 70 (op_logicos -> MENORIGUAL r_push_oper .)
    CTE_F           reduce using rule 70 (op_logicos -> MENORIGUAL r_push_oper .)
    CTE_CH          reduce using rule 70 (op_logicos -> MENORIGUAL r_push_oper .)
    ID              reduce using rule 70 (op_logicos -> MENORIGUAL r_push_oper .)


state 172

    (71) op_logicos -> IGUALIGUAL r_push_oper .

    PARENT_A        reduce using rule 71 (op_logicos -> IGUALIGUAL r_push_oper .)
    CTE_I           reduce using rule 71 (op_logicos -> IGUALIGUAL r_push_oper .)
    CTE_F           reduce using rule 71 (op_logicos -> IGUALIGUAL r_push_oper .)
    CTE_CH          reduce using rule 71 (op_logicos -> IGUALIGUAL r_push_oper .)
    ID              reduce using rule 71 (op_logicos -> IGUALIGUAL r_push_oper .)


state 173

    (72) op_logicos -> DIFERENTE r_push_oper .

    PARENT_A        reduce using rule 72 (op_logicos -> DIFERENTE r_push_oper .)
    CTE_I           reduce using rule 72 (op_logicos -> DIFERENTE r_push_oper .)
    CTE_F           reduce using rule 72 (op_logicos -> DIFERENTE r_push_oper .)
    CTE_CH          reduce using rule 72 (op_logicos -> DIFERENTE r_push_oper .)
    ID              reduce using rule 72 (op_logicos -> DIFERENTE r_push_oper .)


state 174

    (74) m_expresion -> termino r_generate_quad_masmen MAS . r_push_oper m_expresion
    (79) r_push_oper -> .

    PARENT_A        reduce using rule 79 (r_push_oper -> .)
    CTE_I           reduce using rule 79 (r_push_oper -> .)
    CTE_F           reduce using rule 79 (r_push_oper -> .)
    CTE_CH          reduce using rule 79 (r_push_oper -> .)
    ID              reduce using rule 79 (r_push_oper -> .)

    r_push_oper                    shift and go to state 191

state 175

    (75) m_expresion -> termino r_generate_quad_masmen MENOS . r_push_oper m_expresion
    (79) r_push_oper -> .

    PARENT_A        reduce using rule 79 (r_push_oper -> .)
    CTE_I           reduce using rule 79 (r_push_oper -> .)
    CTE_F           reduce using rule 79 (r_push_oper -> .)
    CTE_CH          reduce using rule 79 (r_push_oper -> .)
    ID              reduce using rule 79 (r_push_oper -> .)

    r_push_oper                    shift and go to state 192

state 176

    (77) termino -> factor r_generate_quad_muldiv POR . r_push_oper termino
    (79) r_push_oper -> .

    PARENT_A        reduce using rule 79 (r_push_oper -> .)
    CTE_I           reduce using rule 79 (r_push_oper -> .)
    CTE_F           reduce using rule 79 (r_push_oper -> .)
    CTE_CH          reduce using rule 79 (r_push_oper -> .)
    ID              reduce using rule 79 (r_push_oper -> .)

    r_push_oper                    shift and go to state 193

state 177

    (78) termino -> factor r_generate_quad_muldiv DIV . r_push_oper termino
    (79) r_push_oper -> .

    PARENT_A        reduce using rule 79 (r_push_oper -> .)
    CTE_I           reduce using rule 79 (r_push_oper -> .)
    CTE_F           reduce using rule 79 (r_push_oper -> .)
    CTE_CH          reduce using rule 79 (r_push_oper -> .)
    ID              reduce using rule 79 (r_push_oper -> .)

    r_push_oper                    shift and go to state 194

state 178

    (25) dim -> CORCHETE_A expresion CORCHETE_C .

    IGUAL           reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    POR             reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    DIV             reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MAS             reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MENOS           reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MAYORQUE        reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MENORQUE        reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MAYORIGUAL      reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MENORIGUAL      reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    IGUALIGUAL      reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    DIFERENTE       reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    AND             reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    OR              reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    COMA            reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    PARENT_C        reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    PUNTOCOMA       reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    CORCHETE_C      reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    HASTA           reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)
    HACER           reduce using rule 25 (dim -> CORCHETE_A expresion CORCHETE_C .)


state 179

    (24) variables -> variable COMA variables .

    PARENT_C        reduce using rule 24 (variables -> variable COMA variables .)


state 180

    (101) escr -> escritura_dos r_generate_quad_escr COMA . escr
    (100) escr -> . escritura_dos r_generate_quad_escr
    (101) escr -> . escritura_dos r_generate_quad_escr COMA escr
    (96) escritura_dos -> . CTE_STR r_push_cte_str
    (97) escritura_dos -> . expresion
    (58) expresion -> . t_expresion r_generate_quad_or
    (59) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (61) t_expresion -> . g_expresion r_generate_quad_and
    (62) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (64) g_expresion -> . m_expresion r_generate_quad_logicos
    (65) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    CTE_STR         shift and go to state 114
    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    escritura_dos                  shift and go to state 113
    escr                           shift and go to state 195
    expresion                      shift and go to state 115
    t_expresion                    shift and go to state 97
    g_expresion                    shift and go to state 98
    m_expresion                    shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    variable                       shift and go to state 105
    llamada                        shift and go to state 106

state 181

    (108) else -> SINO LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 196


state 182

    (112) ciclo_for -> DESDE variable IGUAL expresion HASTA . expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (58) expresion -> . t_expresion r_generate_quad_or
    (59) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (61) t_expresion -> . g_expresion r_generate_quad_and
    (62) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (64) g_expresion -> . m_expresion r_generate_quad_logicos
    (65) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    variable                       shift and go to state 105
    expresion                      shift and go to state 197
    t_expresion                    shift and go to state 97
    g_expresion                    shift and go to state 98
    m_expresion                    shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    llamada                        shift and go to state 106

state 183

    (109) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C . r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (105) r_check_exp_type -> .

    HAZ             reduce using rule 105 (r_check_exp_type -> .)

    r_check_exp_type               shift and go to state 198

state 184

    (104) if -> SI PARENT_A expresion PARENT_C r_check_exp_type . ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ENTONCES        shift and go to state 199


state 185

    (33) func_dos -> PARENT_A parametros PARENT_C save_params var_funcs .

    FUNCION         reduce using rule 33 (func_dos -> PARENT_A parametros PARENT_C save_params var_funcs .)
    PRINCIPAL       reduce using rule 33 (func_dos -> PARENT_A parametros PARENT_C save_params var_funcs .)


state 186

    (38) parametros -> tipo_simple ID save_params_list COMA . parametros
    (37) parametros -> . tipo_simple ID save_params_list
    (38) parametros -> . tipo_simple ID save_params_list COMA parametros
    (11) tipo_simple -> . INT
    (12) tipo_simple -> . FLOAT
    (13) tipo_simple -> . CHAR

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    tipo_simple                    shift and go to state 89
    parametros                     shift and go to state 200

state 187

    (82) factor -> PARENT_A r_push_ff expresion PARENT_C . r_pop_ff
    (92) r_pop_ff -> .

    POR             reduce using rule 92 (r_pop_ff -> .)
    DIV             reduce using rule 92 (r_pop_ff -> .)
    MAS             reduce using rule 92 (r_pop_ff -> .)
    MENOS           reduce using rule 92 (r_pop_ff -> .)
    MAYORQUE        reduce using rule 92 (r_pop_ff -> .)
    MENORQUE        reduce using rule 92 (r_pop_ff -> .)
    MAYORIGUAL      reduce using rule 92 (r_pop_ff -> .)
    MENORIGUAL      reduce using rule 92 (r_pop_ff -> .)
    IGUALIGUAL      reduce using rule 92 (r_pop_ff -> .)
    DIFERENTE       reduce using rule 92 (r_pop_ff -> .)
    AND             reduce using rule 92 (r_pop_ff -> .)
    OR              reduce using rule 92 (r_pop_ff -> .)
    COMA            reduce using rule 92 (r_pop_ff -> .)
    PARENT_C        reduce using rule 92 (r_pop_ff -> .)
    PUNTOCOMA       reduce using rule 92 (r_pop_ff -> .)
    CORCHETE_C      reduce using rule 92 (r_pop_ff -> .)
    HASTA           reduce using rule 92 (r_pop_ff -> .)
    HACER           reduce using rule 92 (r_pop_ff -> .)

    r_pop_ff                       shift and go to state 201

state 188

    (59) expresion -> t_expresion r_generate_quad_or OR r_push_oper . expresion
    (58) expresion -> . t_expresion r_generate_quad_or
    (59) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (61) t_expresion -> . g_expresion r_generate_quad_and
    (62) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (64) g_expresion -> . m_expresion r_generate_quad_logicos
    (65) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    t_expresion                    shift and go to state 97
    expresion                      shift and go to state 202
    g_expresion                    shift and go to state 98
    m_expresion                    shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    variable                       shift and go to state 105
    llamada                        shift and go to state 106

state 189

    (62) t_expresion -> g_expresion r_generate_quad_and AND r_push_oper . t_expresion
    (61) t_expresion -> . g_expresion r_generate_quad_and
    (62) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (64) g_expresion -> . m_expresion r_generate_quad_logicos
    (65) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    g_expresion                    shift and go to state 98
    t_expresion                    shift and go to state 203
    m_expresion                    shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    variable                       shift and go to state 105
    llamada                        shift and go to state 106

state 190

    (65) g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .

    AND             reduce using rule 65 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    OR              reduce using rule 65 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    COMA            reduce using rule 65 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    PARENT_C        reduce using rule 65 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    PUNTOCOMA       reduce using rule 65 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    CORCHETE_C      reduce using rule 65 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    HASTA           reduce using rule 65 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    HACER           reduce using rule 65 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)


state 191

    (74) m_expresion -> termino r_generate_quad_masmen MAS r_push_oper . m_expresion
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    termino                        shift and go to state 100
    m_expresion                    shift and go to state 204
    factor                         shift and go to state 101
    variable                       shift and go to state 105
    llamada                        shift and go to state 106

state 192

    (75) m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper . m_expresion
    (73) m_expresion -> . termino r_generate_quad_masmen
    (74) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (75) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    termino                        shift and go to state 100
    m_expresion                    shift and go to state 205
    factor                         shift and go to state 101
    variable                       shift and go to state 105
    llamada                        shift and go to state 106

state 193

    (77) termino -> factor r_generate_quad_muldiv POR r_push_oper . termino
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    factor                         shift and go to state 101
    termino                        shift and go to state 206
    variable                       shift and go to state 105
    llamada                        shift and go to state 106

state 194

    (78) termino -> factor r_generate_quad_muldiv DIV r_push_oper . termino
    (76) termino -> . factor r_generate_quad_muldiv
    (77) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (78) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (82) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (83) factor -> . CTE_I r_push_cte_i
    (84) factor -> . CTE_F r_push_cte_f
    (85) factor -> . CTE_CH r_push_cte_c
    (86) factor -> . variable
    (87) factor -> . llamada
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 93
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 92

    factor                         shift and go to state 101
    termino                        shift and go to state 207
    variable                       shift and go to state 105
    llamada                        shift and go to state 106

state 195

    (101) escr -> escritura_dos r_generate_quad_escr COMA escr .

    PARENT_C        reduce using rule 101 (escr -> escritura_dos r_generate_quad_escr COMA escr .)


state 196

    (108) else -> SINO LLAVE_A estatutos_dos LLAVE_C .

    ID              reduce using rule 108 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 108 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 108 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 108 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 108 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 108 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 108 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 108 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)


state 197

    (112) ciclo_for -> DESDE variable IGUAL expresion HASTA expresion . HACER LLAVE_A estatutos_dos LLAVE_C

    HACER           shift and go to state 208


state 198

    (109) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type . HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while

    HAZ             shift and go to state 209


state 199

    (104) if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 210


state 200

    (38) parametros -> tipo_simple ID save_params_list COMA parametros .

    PARENT_C        reduce using rule 38 (parametros -> tipo_simple ID save_params_list COMA parametros .)


state 201

    (82) factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .

    POR             reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    DIV             reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MAS             reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MENOS           reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MAYORQUE        reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MENORQUE        reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MAYORIGUAL      reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MENORIGUAL      reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    IGUALIGUAL      reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    DIFERENTE       reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    AND             reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    OR              reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    COMA            reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    PARENT_C        reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    PUNTOCOMA       reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    CORCHETE_C      reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    HASTA           reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    HACER           reduce using rule 82 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)


state 202

    (59) expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .

    COMA            reduce using rule 59 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    PARENT_C        reduce using rule 59 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    PUNTOCOMA       reduce using rule 59 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    CORCHETE_C      reduce using rule 59 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    HASTA           reduce using rule 59 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    HACER           reduce using rule 59 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)


state 203

    (62) t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .

    OR              reduce using rule 62 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    COMA            reduce using rule 62 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    PARENT_C        reduce using rule 62 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    PUNTOCOMA       reduce using rule 62 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    CORCHETE_C      reduce using rule 62 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    HASTA           reduce using rule 62 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    HACER           reduce using rule 62 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)


state 204

    (74) m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .

    MAYORQUE        reduce using rule 74 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    MENORQUE        reduce using rule 74 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    MAYORIGUAL      reduce using rule 74 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    MENORIGUAL      reduce using rule 74 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    IGUALIGUAL      reduce using rule 74 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    DIFERENTE       reduce using rule 74 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    AND             reduce using rule 74 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    OR              reduce using rule 74 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    COMA            reduce using rule 74 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    PARENT_C        reduce using rule 74 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    PUNTOCOMA       reduce using rule 74 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    CORCHETE_C      reduce using rule 74 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    HASTA           reduce using rule 74 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    HACER           reduce using rule 74 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)


state 205

    (75) m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .

    MAYORQUE        reduce using rule 75 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    MENORQUE        reduce using rule 75 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    MAYORIGUAL      reduce using rule 75 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    MENORIGUAL      reduce using rule 75 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    IGUALIGUAL      reduce using rule 75 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    DIFERENTE       reduce using rule 75 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    AND             reduce using rule 75 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    OR              reduce using rule 75 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    COMA            reduce using rule 75 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    PARENT_C        reduce using rule 75 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    PUNTOCOMA       reduce using rule 75 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    CORCHETE_C      reduce using rule 75 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    HASTA           reduce using rule 75 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    HACER           reduce using rule 75 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)


state 206

    (77) termino -> factor r_generate_quad_muldiv POR r_push_oper termino .

    MAS             reduce using rule 77 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MENOS           reduce using rule 77 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MAYORQUE        reduce using rule 77 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MENORQUE        reduce using rule 77 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MAYORIGUAL      reduce using rule 77 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MENORIGUAL      reduce using rule 77 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    IGUALIGUAL      reduce using rule 77 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    DIFERENTE       reduce using rule 77 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    AND             reduce using rule 77 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    OR              reduce using rule 77 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    COMA            reduce using rule 77 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    PARENT_C        reduce using rule 77 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    PUNTOCOMA       reduce using rule 77 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    CORCHETE_C      reduce using rule 77 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    HASTA           reduce using rule 77 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    HACER           reduce using rule 77 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)


state 207

    (78) termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .

    MAS             reduce using rule 78 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MENOS           reduce using rule 78 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MAYORQUE        reduce using rule 78 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MENORQUE        reduce using rule 78 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MAYORIGUAL      reduce using rule 78 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MENORIGUAL      reduce using rule 78 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    IGUALIGUAL      reduce using rule 78 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    DIFERENTE       reduce using rule 78 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    AND             reduce using rule 78 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    OR              reduce using rule 78 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    COMA            reduce using rule 78 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    PARENT_C        reduce using rule 78 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    PUNTOCOMA       reduce using rule 78 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    CORCHETE_C      reduce using rule 78 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    HASTA           reduce using rule 78 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    HACER           reduce using rule 78 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)


state 208

    (112) ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 211


state 209

    (109) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ . LLAVE_A estatutos_dos LLAVE_C r_goto_while

    LLAVE_A         shift and go to state 212


state 210

    (104) if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A . estatutos_dos LLAVE_C
    (50) estatutos_dos -> . estatutos
    (51) estatutos_dos -> . estatutos estatutos_dos
    (42) estatutos -> . asignacion PUNTOCOMA
    (43) estatutos -> . llamada PUNTOCOMA
    (44) estatutos -> . retorno PUNTOCOMA
    (45) estatutos -> . lectura PUNTOCOMA
    (46) estatutos -> . escritura PUNTOCOMA
    (47) estatutos -> . decision
    (48) estatutos -> . ciclo_for
    (49) estatutos -> . ciclo_while
    (52) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C
    (93) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (94) lectura -> . LEER PARENT_A variables PARENT_C
    (95) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (102) decision -> . if r_end_if
    (103) decision -> . if r_goto_ifelse else r_end_if
    (112) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (109) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (104) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 50
    REGRESA         shift and go to state 51
    LEER            shift and go to state 52
    ESCRIBIR        shift and go to state 53
    DESDE           shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57

    estatutos_dos                  shift and go to state 213
    estatutos                      shift and go to state 40
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    retorno                        shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    decision                       shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    variable                       shift and go to state 49
    if                             shift and go to state 54

state 211

    (112) ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A . estatutos_dos LLAVE_C
    (50) estatutos_dos -> . estatutos
    (51) estatutos_dos -> . estatutos estatutos_dos
    (42) estatutos -> . asignacion PUNTOCOMA
    (43) estatutos -> . llamada PUNTOCOMA
    (44) estatutos -> . retorno PUNTOCOMA
    (45) estatutos -> . lectura PUNTOCOMA
    (46) estatutos -> . escritura PUNTOCOMA
    (47) estatutos -> . decision
    (48) estatutos -> . ciclo_for
    (49) estatutos -> . ciclo_while
    (52) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C
    (93) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (94) lectura -> . LEER PARENT_A variables PARENT_C
    (95) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (102) decision -> . if r_end_if
    (103) decision -> . if r_goto_ifelse else r_end_if
    (112) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (109) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (104) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 50
    REGRESA         shift and go to state 51
    LEER            shift and go to state 52
    ESCRIBIR        shift and go to state 53
    DESDE           shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57

    variable                       shift and go to state 49
    estatutos_dos                  shift and go to state 214
    estatutos                      shift and go to state 40
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    retorno                        shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    decision                       shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    if                             shift and go to state 54

state 212

    (109) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A . estatutos_dos LLAVE_C r_goto_while
    (50) estatutos_dos -> . estatutos
    (51) estatutos_dos -> . estatutos estatutos_dos
    (42) estatutos -> . asignacion PUNTOCOMA
    (43) estatutos -> . llamada PUNTOCOMA
    (44) estatutos -> . retorno PUNTOCOMA
    (45) estatutos -> . lectura PUNTOCOMA
    (46) estatutos -> . escritura PUNTOCOMA
    (47) estatutos -> . decision
    (48) estatutos -> . ciclo_for
    (49) estatutos -> . ciclo_while
    (52) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (54) llamada -> . ID PARENT_A PARENT_C
    (55) llamada -> . ID PARENT_A expresiones PARENT_C
    (93) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (94) lectura -> . LEER PARENT_A variables PARENT_C
    (95) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (102) decision -> . if r_end_if
    (103) decision -> . if r_goto_ifelse else r_end_if
    (112) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (109) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (20) variable -> . ID r_push_id
    (21) variable -> . ID r_push_id dim
    (104) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 50
    REGRESA         shift and go to state 51
    LEER            shift and go to state 52
    ESCRIBIR        shift and go to state 53
    DESDE           shift and go to state 55
    MIENTRAS        shift and go to state 56
    SI              shift and go to state 57

    estatutos_dos                  shift and go to state 215
    estatutos                      shift and go to state 40
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    retorno                        shift and go to state 43
    lectura                        shift and go to state 44
    escritura                      shift and go to state 45
    decision                       shift and go to state 46
    ciclo_for                      shift and go to state 47
    ciclo_while                    shift and go to state 48
    variable                       shift and go to state 49
    if                             shift and go to state 54

state 213

    (104) if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 216


state 214

    (112) ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 217


state 215

    (109) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos . LLAVE_C r_goto_while

    LLAVE_C         shift and go to state 218


state 216

    (104) if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .

    SINO            reduce using rule 104 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    ID              reduce using rule 104 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 104 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 104 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 104 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 104 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 104 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 104 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 104 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)


state 217

    (112) ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .

    ID              reduce using rule 112 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 112 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 112 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 112 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 112 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 112 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 112 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 112 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)


state 218

    (109) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C . r_goto_while
    (110) r_goto_while -> .

    ID              reduce using rule 110 (r_goto_while -> .)
    REGRESA         reduce using rule 110 (r_goto_while -> .)
    LEER            reduce using rule 110 (r_goto_while -> .)
    ESCRIBIR        reduce using rule 110 (r_goto_while -> .)
    DESDE           reduce using rule 110 (r_goto_while -> .)
    MIENTRAS        reduce using rule 110 (r_goto_while -> .)
    SI              reduce using rule 110 (r_goto_while -> .)
    LLAVE_C         reduce using rule 110 (r_goto_while -> .)

    r_goto_while                   shift and go to state 219

state 219

    (109) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .

    ID              reduce using rule 109 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    REGRESA         reduce using rule 109 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    LEER            reduce using rule 109 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    ESCRIBIR        reduce using rule 109 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    DESDE           reduce using rule 109 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    MIENTRAS        reduce using rule 109 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    SI              reduce using rule 109 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    LLAVE_C         reduce using rule 109 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)

