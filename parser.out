Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID PUNTOCOMA prog
Rule 2     prog -> main
Rule 3     prog -> dec_vars dec_funciones main
Rule 4     prog -> dec_vars main
Rule 5     prog -> dec_funciones main
Rule 6     main -> PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est
Rule 7     actualiza_func_name -> <empty>
Rule 8     dec_vars -> VAR vars save_vars
Rule 9     vars -> tipo_simple ids_simple PUNTOCOMA
Rule 10    vars -> tipo_simple ids_simple PUNTOCOMA vars
Rule 11    save_vars -> <empty>
Rule 12    tipo_simple -> INT
Rule 13    tipo_simple -> FLOAT
Rule 14    tipo_simple -> CHAR
Rule 15    ids_simple -> ID save_vars_name
Rule 16    ids_simple -> ID save_vars_name dimension
Rule 17    ids_simple -> ID save_vars_name COMA ids_simple
Rule 18    ids_simple -> ID save_vars_name dimension COMA ids_simple
Rule 19    save_vars_name -> <empty>
Rule 20    dimension -> CORCHETE_A CTE_I CORCHETE_C
Rule 21    variable -> ID r_push_id
Rule 22    variable -> ID r_push_id dim
Rule 23    r_push_id -> <empty>
Rule 24    variables -> variable r_generate_quad_leer
Rule 25    variables -> variable r_generate_quad_leer COMA variables
Rule 26    dim -> CORCHETE_A expresion CORCHETE_C
Rule 27    dec_funciones -> funcion r_generate_endfunc
Rule 28    dec_funciones -> funcion r_generate_endfunc dec_funciones
Rule 29    r_generate_endfunc -> <empty>
Rule 30    funcion -> FUNCION tipo_simple ID create_func_table func_dos
Rule 31    funcion -> FUNCION VOID func_type_void ID create_func_table func_dos
Rule 32    func_type_void -> <empty>
Rule 33    create_func_table -> <empty>
Rule 34    func_dos -> PARENT_A PARENT_C var_funcs
Rule 35    func_dos -> PARENT_A parametros PARENT_C save_params var_funcs
Rule 36    save_params -> <empty>
Rule 37    var_funcs -> dec_est
Rule 38    var_funcs -> dec_vars dec_est
Rule 39    parametros -> tipo_simple ID save_params_list
Rule 40    parametros -> tipo_simple ID save_params_list COMA parametros
Rule 41    save_params_list -> <empty>
Rule 42    dec_est -> LLAVE_A LLAVE_C
Rule 43    dec_est -> LLAVE_A estatutos_dos LLAVE_C
Rule 44    estatutos -> asignacion PUNTOCOMA
Rule 45    estatutos -> llamada PUNTOCOMA
Rule 46    estatutos -> retorno PUNTOCOMA
Rule 47    estatutos -> lectura PUNTOCOMA
Rule 48    estatutos -> escritura PUNTOCOMA
Rule 49    estatutos -> decision
Rule 50    estatutos -> ciclo_for
Rule 51    estatutos -> ciclo_while
Rule 52    estatutos_dos -> estatutos
Rule 53    estatutos_dos -> estatutos estatutos_dos
Rule 54    asignacion -> variable IGUAL r_push_oper expresion r_generate_quad_asig
Rule 55    r_generate_quad_asig -> <empty>
Rule 56    llamada -> ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
Rule 57    llamada -> ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
Rule 58    r_check_func_exists -> <empty>
Rule 59    r_generate_ERA -> <empty>
Rule 60    r_generate_gosub -> <empty>
Rule 61    llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
Rule 62    llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos
Rule 63    r_generate_ERA_dos -> <empty>
Rule 64    r_generate_gosub_dos -> <empty>
Rule 65    expresiones -> expresion r_generate_parameter
Rule 66    expresiones -> expresion r_generate_parameter COMA r_act_param_count expresiones
Rule 67    r_generate_parameter -> <empty>
Rule 68    r_act_param_count -> <empty>
Rule 69    expresion -> t_expresion r_generate_quad_or
Rule 70    expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion
Rule 71    r_generate_quad_or -> <empty>
Rule 72    t_expresion -> g_expresion r_generate_quad_and
Rule 73    t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion
Rule 74    r_generate_quad_and -> <empty>
Rule 75    g_expresion -> m_expresion r_generate_quad_logicos
Rule 76    g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos
Rule 77    r_generate_quad_logicos -> <empty>
Rule 78    op_logicos -> MAYORQUE r_push_oper
Rule 79    op_logicos -> MENORQUE r_push_oper
Rule 80    op_logicos -> MAYORIGUAL r_push_oper
Rule 81    op_logicos -> MENORIGUAL r_push_oper
Rule 82    op_logicos -> IGUALIGUAL r_push_oper
Rule 83    op_logicos -> DIFERENTE r_push_oper
Rule 84    m_expresion -> termino r_generate_quad_masmen
Rule 85    m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion
Rule 86    m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion
Rule 87    termino -> factor r_generate_quad_muldiv
Rule 88    termino -> factor r_generate_quad_muldiv POR r_push_oper termino
Rule 89    termino -> factor r_generate_quad_muldiv DIV r_push_oper termino
Rule 90    r_push_oper -> <empty>
Rule 91    r_generate_quad_masmen -> <empty>
Rule 92    r_generate_quad_muldiv -> <empty>
Rule 93    factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff
Rule 94    factor -> CTE_I r_push_cte_i
Rule 95    factor -> CTE_F r_push_cte_f
Rule 96    factor -> CTE_CH r_push_cte_c
Rule 97    factor -> variable
Rule 98    factor -> llamada_exp
Rule 99    r_push_cte_i -> <empty>
Rule 100   r_push_cte_f -> <empty>
Rule 101   r_push_cte_c -> <empty>
Rule 102   r_push_ff -> <empty>
Rule 103   r_pop_ff -> <empty>
Rule 104   retorno -> REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
Rule 105   r_generate_quad_retorno -> <empty>
Rule 106   lectura -> LEER PARENT_A variables PARENT_C
Rule 107   r_generate_quad_leer -> <empty>
Rule 108   escritura -> ESCRIBIR PARENT_A escr PARENT_C
Rule 109   escritura_dos -> CTE_STR r_push_cte_str
Rule 110   escritura_dos -> expresion
Rule 111   r_push_cte_str -> <empty>
Rule 112   r_generate_quad_escr -> <empty>
Rule 113   escr -> escritura_dos r_generate_quad_escr
Rule 114   escr -> escritura_dos r_generate_quad_escr COMA escr
Rule 115   decision -> if r_end_if
Rule 116   decision -> if r_goto_ifelse else r_end_if
Rule 117   if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C
Rule 118   r_check_exp_type -> <empty>
Rule 119   r_end_if -> <empty>
Rule 120   r_goto_ifelse -> <empty>
Rule 121   else -> SINO LLAVE_A estatutos_dos LLAVE_C
Rule 122   ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
Rule 123   r_goto_while -> <empty>
Rule 124   r_save_jump -> <empty>
Rule 125   ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
Rule 126   r_expresion_for -> <empty>
Rule 127   r_save_var_for -> <empty>
Rule 128   r_generate_quad_asig_for -> <empty>
Rule 129   r_check_exp_for -> <empty>
Rule 130   r_goto_for -> <empty>

Terminals, with rules where they appear

AND                  : 73
CHAR                 : 14
COMA                 : 17 18 25 40 66 114
CORCHETE_A           : 20 26
CORCHETE_C           : 20 26
CTE_CH               : 96
CTE_F                : 95
CTE_I                : 20 94
CTE_STR              : 109
DESDE                : 125
DIFERENTE            : 83
DIV                  : 89
ENTONCES             : 117
ESCRIBIR             : 108
FLOAT                : 13
FUNCION              : 30 31
HACER                : 125
HASTA                : 125
HAZ                  : 122
ID                   : 1 15 16 17 18 21 22 30 31 39 40 56 57 61 62 125
IGUAL                : 54 125
IGUALIGUAL           : 82
INT                  : 12
LEER                 : 106
LLAVE_A              : 42 43 117 121 122 125
LLAVE_C              : 42 43 117 121 122 125
MAS                  : 85
MAYORIGUAL           : 80
MAYORQUE             : 78
MENORIGUAL           : 81
MENORQUE             : 79
MENOS                : 86
MIENTRAS             : 122
OR                   : 70
PARENT_A             : 6 34 35 56 57 61 62 93 104 106 108 117 122
PARENT_C             : 6 34 35 56 57 61 62 93 104 106 108 117 122
POR                  : 88
PRINCIPAL            : 6
PROGRAMA             : 1
PUNTOCOMA            : 1 9 10 44 45 46 47 48
REGRESA              : 104
SI                   : 117
SINO                 : 121
VAR                  : 8
VOID                 : 31
error                : 

Nonterminals, with rules where they appear

actualiza_func_name  : 6
asignacion           : 44
ciclo_for            : 50
ciclo_while          : 51
create_func_table    : 30 31
dec_est              : 6 37 38
dec_funciones        : 3 5 28
dec_vars             : 3 4 38
decision             : 49
dim                  : 22
dimension            : 16 18
else                 : 116
escr                 : 108 114
escritura            : 48
escritura_dos        : 113 114
estatutos            : 52 53
estatutos_dos        : 43 53 117 121 122 125
expresion            : 26 54 65 66 70 93 104 110 117 122 125 125
expresiones          : 57 62 66
factor               : 87 88 89
func_dos             : 30 31
func_type_void       : 31
funcion              : 27 28
g_expresion          : 72 73
ids_simple           : 9 10 17 18
if                   : 115 116
lectura              : 47
llamada              : 45
llamada_exp          : 98
m_expresion          : 75 76 76 85 86
main                 : 2 3 4 5
op_logicos           : 76
parametros           : 35 40
prog                 : 1
programa             : 0
r_act_param_count    : 66
r_check_exp_for      : 125
r_check_exp_type     : 117 122
r_check_func_exists  : 56 57 61 62
r_end_if             : 115 116
r_expresion_for      : 125
r_generate_ERA       : 56 57
r_generate_ERA_dos   : 61 62
r_generate_endfunc   : 27 28
r_generate_gosub     : 56 57
r_generate_gosub_dos : 61 62
r_generate_parameter : 65 66
r_generate_quad_and  : 72 73
r_generate_quad_asig : 54
r_generate_quad_asig_for : 125
r_generate_quad_escr : 113 114
r_generate_quad_leer : 24 25
r_generate_quad_logicos : 75 76
r_generate_quad_masmen : 84 85 86
r_generate_quad_muldiv : 87 88 89
r_generate_quad_or   : 69 70
r_generate_quad_retorno : 104
r_goto_for           : 125
r_goto_ifelse        : 116
r_goto_while         : 122
r_pop_ff             : 93
r_push_cte_c         : 96
r_push_cte_f         : 95
r_push_cte_i         : 94
r_push_cte_str       : 109
r_push_ff            : 93
r_push_id            : 21 22
r_push_oper          : 54 70 73 78 79 80 81 82 83 85 86 88 89
r_save_jump          : 122 125
r_save_var_for       : 125
retorno              : 46
save_params          : 35
save_params_list     : 39 40
save_vars            : 8
save_vars_name       : 15 16 17 18
t_expresion          : 69 70 73
termino              : 84 85 86 88 89
tipo_simple          : 9 10 30 39 40
var_funcs            : 34 35
variable             : 24 25 54 97
variables            : 25 106
vars                 : 8 10

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID PUNTOCOMA prog

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID PUNTOCOMA prog

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . PUNTOCOMA prog

    PUNTOCOMA       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID PUNTOCOMA . prog
    (2) prog -> . main
    (3) prog -> . dec_vars dec_funciones main
    (4) prog -> . dec_vars main
    (5) prog -> . dec_funciones main
    (6) main -> . PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est
    (8) dec_vars -> . VAR vars save_vars
    (27) dec_funciones -> . funcion r_generate_endfunc
    (28) dec_funciones -> . funcion r_generate_endfunc dec_funciones
    (30) funcion -> . FUNCION tipo_simple ID create_func_table func_dos
    (31) funcion -> . FUNCION VOID func_type_void ID create_func_table func_dos

    PRINCIPAL       shift and go to state 9
    VAR             shift and go to state 10
    FUNCION         shift and go to state 12

    prog                           shift and go to state 5
    main                           shift and go to state 6
    dec_vars                       shift and go to state 7
    dec_funciones                  shift and go to state 8
    funcion                        shift and go to state 11

state 5

    (1) programa -> PROGRAMA ID PUNTOCOMA prog .

    $end            reduce using rule 1 (programa -> PROGRAMA ID PUNTOCOMA prog .)


state 6

    (2) prog -> main .

    $end            reduce using rule 2 (prog -> main .)


state 7

    (3) prog -> dec_vars . dec_funciones main
    (4) prog -> dec_vars . main
    (27) dec_funciones -> . funcion r_generate_endfunc
    (28) dec_funciones -> . funcion r_generate_endfunc dec_funciones
    (6) main -> . PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est
    (30) funcion -> . FUNCION tipo_simple ID create_func_table func_dos
    (31) funcion -> . FUNCION VOID func_type_void ID create_func_table func_dos

    PRINCIPAL       shift and go to state 9
    FUNCION         shift and go to state 12

    dec_funciones                  shift and go to state 13
    main                           shift and go to state 14
    funcion                        shift and go to state 11

state 8

    (5) prog -> dec_funciones . main
    (6) main -> . PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est

    PRINCIPAL       shift and go to state 9

    main                           shift and go to state 15

state 9

    (6) main -> PRINCIPAL . actualiza_func_name PARENT_A PARENT_C dec_est
    (7) actualiza_func_name -> .

    PARENT_A        reduce using rule 7 (actualiza_func_name -> .)

    actualiza_func_name            shift and go to state 16

state 10

    (8) dec_vars -> VAR . vars save_vars
    (9) vars -> . tipo_simple ids_simple PUNTOCOMA
    (10) vars -> . tipo_simple ids_simple PUNTOCOMA vars
    (12) tipo_simple -> . INT
    (13) tipo_simple -> . FLOAT
    (14) tipo_simple -> . CHAR

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    vars                           shift and go to state 17
    tipo_simple                    shift and go to state 18

state 11

    (27) dec_funciones -> funcion . r_generate_endfunc
    (28) dec_funciones -> funcion . r_generate_endfunc dec_funciones
    (29) r_generate_endfunc -> .

    FUNCION         reduce using rule 29 (r_generate_endfunc -> .)
    PRINCIPAL       reduce using rule 29 (r_generate_endfunc -> .)

    r_generate_endfunc             shift and go to state 22

state 12

    (30) funcion -> FUNCION . tipo_simple ID create_func_table func_dos
    (31) funcion -> FUNCION . VOID func_type_void ID create_func_table func_dos
    (12) tipo_simple -> . INT
    (13) tipo_simple -> . FLOAT
    (14) tipo_simple -> . CHAR

    VOID            shift and go to state 24
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    tipo_simple                    shift and go to state 23

state 13

    (3) prog -> dec_vars dec_funciones . main
    (6) main -> . PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est

    PRINCIPAL       shift and go to state 9

    main                           shift and go to state 25

state 14

    (4) prog -> dec_vars main .

    $end            reduce using rule 4 (prog -> dec_vars main .)


state 15

    (5) prog -> dec_funciones main .

    $end            reduce using rule 5 (prog -> dec_funciones main .)


state 16

    (6) main -> PRINCIPAL actualiza_func_name . PARENT_A PARENT_C dec_est

    PARENT_A        shift and go to state 26


state 17

    (8) dec_vars -> VAR vars . save_vars
    (11) save_vars -> .

    PRINCIPAL       reduce using rule 11 (save_vars -> .)
    FUNCION         reduce using rule 11 (save_vars -> .)
    LLAVE_A         reduce using rule 11 (save_vars -> .)

    save_vars                      shift and go to state 27

state 18

    (9) vars -> tipo_simple . ids_simple PUNTOCOMA
    (10) vars -> tipo_simple . ids_simple PUNTOCOMA vars
    (15) ids_simple -> . ID save_vars_name
    (16) ids_simple -> . ID save_vars_name dimension
    (17) ids_simple -> . ID save_vars_name COMA ids_simple
    (18) ids_simple -> . ID save_vars_name dimension COMA ids_simple

    ID              shift and go to state 29

    ids_simple                     shift and go to state 28

state 19

    (12) tipo_simple -> INT .

    ID              reduce using rule 12 (tipo_simple -> INT .)


state 20

    (13) tipo_simple -> FLOAT .

    ID              reduce using rule 13 (tipo_simple -> FLOAT .)


state 21

    (14) tipo_simple -> CHAR .

    ID              reduce using rule 14 (tipo_simple -> CHAR .)


state 22

    (27) dec_funciones -> funcion r_generate_endfunc .
    (28) dec_funciones -> funcion r_generate_endfunc . dec_funciones
    (27) dec_funciones -> . funcion r_generate_endfunc
    (28) dec_funciones -> . funcion r_generate_endfunc dec_funciones
    (30) funcion -> . FUNCION tipo_simple ID create_func_table func_dos
    (31) funcion -> . FUNCION VOID func_type_void ID create_func_table func_dos

    PRINCIPAL       reduce using rule 27 (dec_funciones -> funcion r_generate_endfunc .)
    FUNCION         shift and go to state 12

    funcion                        shift and go to state 11
    dec_funciones                  shift and go to state 30

state 23

    (30) funcion -> FUNCION tipo_simple . ID create_func_table func_dos

    ID              shift and go to state 31


state 24

    (31) funcion -> FUNCION VOID . func_type_void ID create_func_table func_dos
    (32) func_type_void -> .

    ID              reduce using rule 32 (func_type_void -> .)

    func_type_void                 shift and go to state 32

state 25

    (3) prog -> dec_vars dec_funciones main .

    $end            reduce using rule 3 (prog -> dec_vars dec_funciones main .)


state 26

    (6) main -> PRINCIPAL actualiza_func_name PARENT_A . PARENT_C dec_est

    PARENT_C        shift and go to state 33


state 27

    (8) dec_vars -> VAR vars save_vars .

    PRINCIPAL       reduce using rule 8 (dec_vars -> VAR vars save_vars .)
    FUNCION         reduce using rule 8 (dec_vars -> VAR vars save_vars .)
    LLAVE_A         reduce using rule 8 (dec_vars -> VAR vars save_vars .)


state 28

    (9) vars -> tipo_simple ids_simple . PUNTOCOMA
    (10) vars -> tipo_simple ids_simple . PUNTOCOMA vars

    PUNTOCOMA       shift and go to state 34


state 29

    (15) ids_simple -> ID . save_vars_name
    (16) ids_simple -> ID . save_vars_name dimension
    (17) ids_simple -> ID . save_vars_name COMA ids_simple
    (18) ids_simple -> ID . save_vars_name dimension COMA ids_simple
    (19) save_vars_name -> .

    COMA            reduce using rule 19 (save_vars_name -> .)
    CORCHETE_A      reduce using rule 19 (save_vars_name -> .)
    PUNTOCOMA       reduce using rule 19 (save_vars_name -> .)

    save_vars_name                 shift and go to state 35

state 30

    (28) dec_funciones -> funcion r_generate_endfunc dec_funciones .

    PRINCIPAL       reduce using rule 28 (dec_funciones -> funcion r_generate_endfunc dec_funciones .)


state 31

    (30) funcion -> FUNCION tipo_simple ID . create_func_table func_dos
    (33) create_func_table -> .

    PARENT_A        reduce using rule 33 (create_func_table -> .)

    create_func_table              shift and go to state 36

state 32

    (31) funcion -> FUNCION VOID func_type_void . ID create_func_table func_dos

    ID              shift and go to state 37


state 33

    (6) main -> PRINCIPAL actualiza_func_name PARENT_A PARENT_C . dec_est
    (42) dec_est -> . LLAVE_A LLAVE_C
    (43) dec_est -> . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 39

    dec_est                        shift and go to state 38

state 34

    (9) vars -> tipo_simple ids_simple PUNTOCOMA .
    (10) vars -> tipo_simple ids_simple PUNTOCOMA . vars
    (9) vars -> . tipo_simple ids_simple PUNTOCOMA
    (10) vars -> . tipo_simple ids_simple PUNTOCOMA vars
    (12) tipo_simple -> . INT
    (13) tipo_simple -> . FLOAT
    (14) tipo_simple -> . CHAR

    PRINCIPAL       reduce using rule 9 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    FUNCION         reduce using rule 9 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    LLAVE_A         reduce using rule 9 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    tipo_simple                    shift and go to state 18
    vars                           shift and go to state 40

state 35

    (15) ids_simple -> ID save_vars_name .
    (16) ids_simple -> ID save_vars_name . dimension
    (17) ids_simple -> ID save_vars_name . COMA ids_simple
    (18) ids_simple -> ID save_vars_name . dimension COMA ids_simple
    (20) dimension -> . CORCHETE_A CTE_I CORCHETE_C

    PUNTOCOMA       reduce using rule 15 (ids_simple -> ID save_vars_name .)
    COMA            shift and go to state 42
    CORCHETE_A      shift and go to state 43

    dimension                      shift and go to state 41

state 36

    (30) funcion -> FUNCION tipo_simple ID create_func_table . func_dos
    (34) func_dos -> . PARENT_A PARENT_C var_funcs
    (35) func_dos -> . PARENT_A parametros PARENT_C save_params var_funcs

    PARENT_A        shift and go to state 45

    func_dos                       shift and go to state 44

state 37

    (31) funcion -> FUNCION VOID func_type_void ID . create_func_table func_dos
    (33) create_func_table -> .

    PARENT_A        reduce using rule 33 (create_func_table -> .)

    create_func_table              shift and go to state 46

state 38

    (6) main -> PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est .

    $end            reduce using rule 6 (main -> PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est .)


state 39

    (42) dec_est -> LLAVE_A . LLAVE_C
    (43) dec_est -> LLAVE_A . estatutos_dos LLAVE_C
    (52) estatutos_dos -> . estatutos
    (53) estatutos_dos -> . estatutos estatutos_dos
    (44) estatutos -> . asignacion PUNTOCOMA
    (45) estatutos -> . llamada PUNTOCOMA
    (46) estatutos -> . retorno PUNTOCOMA
    (47) estatutos -> . lectura PUNTOCOMA
    (48) estatutos -> . escritura PUNTOCOMA
    (49) estatutos -> . decision
    (50) estatutos -> . ciclo_for
    (51) estatutos -> . ciclo_while
    (54) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (56) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (57) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (104) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (106) lectura -> . LEER PARENT_A variables PARENT_C
    (108) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (115) decision -> . if r_end_if
    (116) decision -> . if r_goto_ifelse else r_end_if
    (125) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (122) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (117) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    LLAVE_C         shift and go to state 47
    ID              shift and go to state 59
    REGRESA         shift and go to state 60
    LEER            shift and go to state 61
    ESCRIBIR        shift and go to state 62
    DESDE           shift and go to state 64
    MIENTRAS        shift and go to state 65
    SI              shift and go to state 66

    estatutos_dos                  shift and go to state 48
    estatutos                      shift and go to state 49
    asignacion                     shift and go to state 50
    llamada                        shift and go to state 51
    retorno                        shift and go to state 52
    lectura                        shift and go to state 53
    escritura                      shift and go to state 54
    decision                       shift and go to state 55
    ciclo_for                      shift and go to state 56
    ciclo_while                    shift and go to state 57
    variable                       shift and go to state 58
    if                             shift and go to state 63

state 40

    (10) vars -> tipo_simple ids_simple PUNTOCOMA vars .

    PRINCIPAL       reduce using rule 10 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)
    FUNCION         reduce using rule 10 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)
    LLAVE_A         reduce using rule 10 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)


state 41

    (16) ids_simple -> ID save_vars_name dimension .
    (18) ids_simple -> ID save_vars_name dimension . COMA ids_simple

    PUNTOCOMA       reduce using rule 16 (ids_simple -> ID save_vars_name dimension .)
    COMA            shift and go to state 67


state 42

    (17) ids_simple -> ID save_vars_name COMA . ids_simple
    (15) ids_simple -> . ID save_vars_name
    (16) ids_simple -> . ID save_vars_name dimension
    (17) ids_simple -> . ID save_vars_name COMA ids_simple
    (18) ids_simple -> . ID save_vars_name dimension COMA ids_simple

    ID              shift and go to state 29

    ids_simple                     shift and go to state 68

state 43

    (20) dimension -> CORCHETE_A . CTE_I CORCHETE_C

    CTE_I           shift and go to state 69


state 44

    (30) funcion -> FUNCION tipo_simple ID create_func_table func_dos .

    FUNCION         reduce using rule 30 (funcion -> FUNCION tipo_simple ID create_func_table func_dos .)
    PRINCIPAL       reduce using rule 30 (funcion -> FUNCION tipo_simple ID create_func_table func_dos .)


state 45

    (34) func_dos -> PARENT_A . PARENT_C var_funcs
    (35) func_dos -> PARENT_A . parametros PARENT_C save_params var_funcs
    (39) parametros -> . tipo_simple ID save_params_list
    (40) parametros -> . tipo_simple ID save_params_list COMA parametros
    (12) tipo_simple -> . INT
    (13) tipo_simple -> . FLOAT
    (14) tipo_simple -> . CHAR

    PARENT_C        shift and go to state 70
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    parametros                     shift and go to state 71
    tipo_simple                    shift and go to state 72

state 46

    (31) funcion -> FUNCION VOID func_type_void ID create_func_table . func_dos
    (34) func_dos -> . PARENT_A PARENT_C var_funcs
    (35) func_dos -> . PARENT_A parametros PARENT_C save_params var_funcs

    PARENT_A        shift and go to state 45

    func_dos                       shift and go to state 73

state 47

    (42) dec_est -> LLAVE_A LLAVE_C .

    $end            reduce using rule 42 (dec_est -> LLAVE_A LLAVE_C .)
    FUNCION         reduce using rule 42 (dec_est -> LLAVE_A LLAVE_C .)
    PRINCIPAL       reduce using rule 42 (dec_est -> LLAVE_A LLAVE_C .)


state 48

    (43) dec_est -> LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 74


state 49

    (52) estatutos_dos -> estatutos .
    (53) estatutos_dos -> estatutos . estatutos_dos
    (52) estatutos_dos -> . estatutos
    (53) estatutos_dos -> . estatutos estatutos_dos
    (44) estatutos -> . asignacion PUNTOCOMA
    (45) estatutos -> . llamada PUNTOCOMA
    (46) estatutos -> . retorno PUNTOCOMA
    (47) estatutos -> . lectura PUNTOCOMA
    (48) estatutos -> . escritura PUNTOCOMA
    (49) estatutos -> . decision
    (50) estatutos -> . ciclo_for
    (51) estatutos -> . ciclo_while
    (54) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (56) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (57) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (104) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (106) lectura -> . LEER PARENT_A variables PARENT_C
    (108) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (115) decision -> . if r_end_if
    (116) decision -> . if r_goto_ifelse else r_end_if
    (125) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (122) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (117) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    LLAVE_C         reduce using rule 52 (estatutos_dos -> estatutos .)
    ID              shift and go to state 59
    REGRESA         shift and go to state 60
    LEER            shift and go to state 61
    ESCRIBIR        shift and go to state 62
    DESDE           shift and go to state 64
    MIENTRAS        shift and go to state 65
    SI              shift and go to state 66

    estatutos                      shift and go to state 49
    estatutos_dos                  shift and go to state 75
    asignacion                     shift and go to state 50
    llamada                        shift and go to state 51
    retorno                        shift and go to state 52
    lectura                        shift and go to state 53
    escritura                      shift and go to state 54
    decision                       shift and go to state 55
    ciclo_for                      shift and go to state 56
    ciclo_while                    shift and go to state 57
    variable                       shift and go to state 58
    if                             shift and go to state 63

state 50

    (44) estatutos -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 76


state 51

    (45) estatutos -> llamada . PUNTOCOMA

    PUNTOCOMA       shift and go to state 77


state 52

    (46) estatutos -> retorno . PUNTOCOMA

    PUNTOCOMA       shift and go to state 78


state 53

    (47) estatutos -> lectura . PUNTOCOMA

    PUNTOCOMA       shift and go to state 79


state 54

    (48) estatutos -> escritura . PUNTOCOMA

    PUNTOCOMA       shift and go to state 80


state 55

    (49) estatutos -> decision .

    ID              reduce using rule 49 (estatutos -> decision .)
    REGRESA         reduce using rule 49 (estatutos -> decision .)
    LEER            reduce using rule 49 (estatutos -> decision .)
    ESCRIBIR        reduce using rule 49 (estatutos -> decision .)
    DESDE           reduce using rule 49 (estatutos -> decision .)
    MIENTRAS        reduce using rule 49 (estatutos -> decision .)
    SI              reduce using rule 49 (estatutos -> decision .)
    LLAVE_C         reduce using rule 49 (estatutos -> decision .)


state 56

    (50) estatutos -> ciclo_for .

    ID              reduce using rule 50 (estatutos -> ciclo_for .)
    REGRESA         reduce using rule 50 (estatutos -> ciclo_for .)
    LEER            reduce using rule 50 (estatutos -> ciclo_for .)
    ESCRIBIR        reduce using rule 50 (estatutos -> ciclo_for .)
    DESDE           reduce using rule 50 (estatutos -> ciclo_for .)
    MIENTRAS        reduce using rule 50 (estatutos -> ciclo_for .)
    SI              reduce using rule 50 (estatutos -> ciclo_for .)
    LLAVE_C         reduce using rule 50 (estatutos -> ciclo_for .)


state 57

    (51) estatutos -> ciclo_while .

    ID              reduce using rule 51 (estatutos -> ciclo_while .)
    REGRESA         reduce using rule 51 (estatutos -> ciclo_while .)
    LEER            reduce using rule 51 (estatutos -> ciclo_while .)
    ESCRIBIR        reduce using rule 51 (estatutos -> ciclo_while .)
    DESDE           reduce using rule 51 (estatutos -> ciclo_while .)
    MIENTRAS        reduce using rule 51 (estatutos -> ciclo_while .)
    SI              reduce using rule 51 (estatutos -> ciclo_while .)
    LLAVE_C         reduce using rule 51 (estatutos -> ciclo_while .)


state 58

    (54) asignacion -> variable . IGUAL r_push_oper expresion r_generate_quad_asig

    IGUAL           shift and go to state 81


state 59

    (56) llamada -> ID . r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (57) llamada -> ID . r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (21) variable -> ID . r_push_id
    (22) variable -> ID . r_push_id dim
    (58) r_check_func_exists -> .
    (23) r_push_id -> .

    PARENT_A        reduce using rule 58 (r_check_func_exists -> .)
    CORCHETE_A      reduce using rule 23 (r_push_id -> .)
    IGUAL           reduce using rule 23 (r_push_id -> .)

    r_check_func_exists            shift and go to state 82
    r_push_id                      shift and go to state 83

state 60

    (104) retorno -> REGRESA . PARENT_A expresion PARENT_C r_generate_quad_retorno

    PARENT_A        shift and go to state 84


state 61

    (106) lectura -> LEER . PARENT_A variables PARENT_C

    PARENT_A        shift and go to state 85


state 62

    (108) escritura -> ESCRIBIR . PARENT_A escr PARENT_C

    PARENT_A        shift and go to state 86


state 63

    (115) decision -> if . r_end_if
    (116) decision -> if . r_goto_ifelse else r_end_if
    (119) r_end_if -> .
    (120) r_goto_ifelse -> .

    ID              reduce using rule 119 (r_end_if -> .)
    REGRESA         reduce using rule 119 (r_end_if -> .)
    LEER            reduce using rule 119 (r_end_if -> .)
    ESCRIBIR        reduce using rule 119 (r_end_if -> .)
    DESDE           reduce using rule 119 (r_end_if -> .)
    MIENTRAS        reduce using rule 119 (r_end_if -> .)
    SI              reduce using rule 119 (r_end_if -> .)
    LLAVE_C         reduce using rule 119 (r_end_if -> .)
    SINO            reduce using rule 120 (r_goto_ifelse -> .)

    r_end_if                       shift and go to state 87
    r_goto_ifelse                  shift and go to state 88

state 64

    (125) ciclo_for -> DESDE . ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for

    ID              shift and go to state 89


state 65

    (122) ciclo_while -> MIENTRAS . r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (124) r_save_jump -> .

    PARENT_A        reduce using rule 124 (r_save_jump -> .)

    r_save_jump                    shift and go to state 90

state 66

    (117) if -> SI . PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    PARENT_A        shift and go to state 91


state 67

    (18) ids_simple -> ID save_vars_name dimension COMA . ids_simple
    (15) ids_simple -> . ID save_vars_name
    (16) ids_simple -> . ID save_vars_name dimension
    (17) ids_simple -> . ID save_vars_name COMA ids_simple
    (18) ids_simple -> . ID save_vars_name dimension COMA ids_simple

    ID              shift and go to state 29

    ids_simple                     shift and go to state 92

state 68

    (17) ids_simple -> ID save_vars_name COMA ids_simple .

    PUNTOCOMA       reduce using rule 17 (ids_simple -> ID save_vars_name COMA ids_simple .)


state 69

    (20) dimension -> CORCHETE_A CTE_I . CORCHETE_C

    CORCHETE_C      shift and go to state 93


state 70

    (34) func_dos -> PARENT_A PARENT_C . var_funcs
    (37) var_funcs -> . dec_est
    (38) var_funcs -> . dec_vars dec_est
    (42) dec_est -> . LLAVE_A LLAVE_C
    (43) dec_est -> . LLAVE_A estatutos_dos LLAVE_C
    (8) dec_vars -> . VAR vars save_vars

    LLAVE_A         shift and go to state 39
    VAR             shift and go to state 10

    var_funcs                      shift and go to state 94
    dec_est                        shift and go to state 95
    dec_vars                       shift and go to state 96

state 71

    (35) func_dos -> PARENT_A parametros . PARENT_C save_params var_funcs

    PARENT_C        shift and go to state 97


state 72

    (39) parametros -> tipo_simple . ID save_params_list
    (40) parametros -> tipo_simple . ID save_params_list COMA parametros

    ID              shift and go to state 98


state 73

    (31) funcion -> FUNCION VOID func_type_void ID create_func_table func_dos .

    FUNCION         reduce using rule 31 (funcion -> FUNCION VOID func_type_void ID create_func_table func_dos .)
    PRINCIPAL       reduce using rule 31 (funcion -> FUNCION VOID func_type_void ID create_func_table func_dos .)


state 74

    (43) dec_est -> LLAVE_A estatutos_dos LLAVE_C .

    $end            reduce using rule 43 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)
    FUNCION         reduce using rule 43 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)
    PRINCIPAL       reduce using rule 43 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)


state 75

    (53) estatutos_dos -> estatutos estatutos_dos .

    LLAVE_C         reduce using rule 53 (estatutos_dos -> estatutos estatutos_dos .)


state 76

    (44) estatutos -> asignacion PUNTOCOMA .

    ID              reduce using rule 44 (estatutos -> asignacion PUNTOCOMA .)
    REGRESA         reduce using rule 44 (estatutos -> asignacion PUNTOCOMA .)
    LEER            reduce using rule 44 (estatutos -> asignacion PUNTOCOMA .)
    ESCRIBIR        reduce using rule 44 (estatutos -> asignacion PUNTOCOMA .)
    DESDE           reduce using rule 44 (estatutos -> asignacion PUNTOCOMA .)
    MIENTRAS        reduce using rule 44 (estatutos -> asignacion PUNTOCOMA .)
    SI              reduce using rule 44 (estatutos -> asignacion PUNTOCOMA .)
    LLAVE_C         reduce using rule 44 (estatutos -> asignacion PUNTOCOMA .)


state 77

    (45) estatutos -> llamada PUNTOCOMA .

    ID              reduce using rule 45 (estatutos -> llamada PUNTOCOMA .)
    REGRESA         reduce using rule 45 (estatutos -> llamada PUNTOCOMA .)
    LEER            reduce using rule 45 (estatutos -> llamada PUNTOCOMA .)
    ESCRIBIR        reduce using rule 45 (estatutos -> llamada PUNTOCOMA .)
    DESDE           reduce using rule 45 (estatutos -> llamada PUNTOCOMA .)
    MIENTRAS        reduce using rule 45 (estatutos -> llamada PUNTOCOMA .)
    SI              reduce using rule 45 (estatutos -> llamada PUNTOCOMA .)
    LLAVE_C         reduce using rule 45 (estatutos -> llamada PUNTOCOMA .)


state 78

    (46) estatutos -> retorno PUNTOCOMA .

    ID              reduce using rule 46 (estatutos -> retorno PUNTOCOMA .)
    REGRESA         reduce using rule 46 (estatutos -> retorno PUNTOCOMA .)
    LEER            reduce using rule 46 (estatutos -> retorno PUNTOCOMA .)
    ESCRIBIR        reduce using rule 46 (estatutos -> retorno PUNTOCOMA .)
    DESDE           reduce using rule 46 (estatutos -> retorno PUNTOCOMA .)
    MIENTRAS        reduce using rule 46 (estatutos -> retorno PUNTOCOMA .)
    SI              reduce using rule 46 (estatutos -> retorno PUNTOCOMA .)
    LLAVE_C         reduce using rule 46 (estatutos -> retorno PUNTOCOMA .)


state 79

    (47) estatutos -> lectura PUNTOCOMA .

    ID              reduce using rule 47 (estatutos -> lectura PUNTOCOMA .)
    REGRESA         reduce using rule 47 (estatutos -> lectura PUNTOCOMA .)
    LEER            reduce using rule 47 (estatutos -> lectura PUNTOCOMA .)
    ESCRIBIR        reduce using rule 47 (estatutos -> lectura PUNTOCOMA .)
    DESDE           reduce using rule 47 (estatutos -> lectura PUNTOCOMA .)
    MIENTRAS        reduce using rule 47 (estatutos -> lectura PUNTOCOMA .)
    SI              reduce using rule 47 (estatutos -> lectura PUNTOCOMA .)
    LLAVE_C         reduce using rule 47 (estatutos -> lectura PUNTOCOMA .)


state 80

    (48) estatutos -> escritura PUNTOCOMA .

    ID              reduce using rule 48 (estatutos -> escritura PUNTOCOMA .)
    REGRESA         reduce using rule 48 (estatutos -> escritura PUNTOCOMA .)
    LEER            reduce using rule 48 (estatutos -> escritura PUNTOCOMA .)
    ESCRIBIR        reduce using rule 48 (estatutos -> escritura PUNTOCOMA .)
    DESDE           reduce using rule 48 (estatutos -> escritura PUNTOCOMA .)
    MIENTRAS        reduce using rule 48 (estatutos -> escritura PUNTOCOMA .)
    SI              reduce using rule 48 (estatutos -> escritura PUNTOCOMA .)
    LLAVE_C         reduce using rule 48 (estatutos -> escritura PUNTOCOMA .)


state 81

    (54) asignacion -> variable IGUAL . r_push_oper expresion r_generate_quad_asig
    (90) r_push_oper -> .

    PARENT_A        reduce using rule 90 (r_push_oper -> .)
    CTE_I           reduce using rule 90 (r_push_oper -> .)
    CTE_F           reduce using rule 90 (r_push_oper -> .)
    CTE_CH          reduce using rule 90 (r_push_oper -> .)
    ID              reduce using rule 90 (r_push_oper -> .)

    r_push_oper                    shift and go to state 99

state 82

    (56) llamada -> ID r_check_func_exists . PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (57) llamada -> ID r_check_func_exists . PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub

    PARENT_A        shift and go to state 100


state 83

    (21) variable -> ID r_push_id .
    (22) variable -> ID r_push_id . dim
    (26) dim -> . CORCHETE_A expresion CORCHETE_C

    IGUAL           reduce using rule 21 (variable -> ID r_push_id .)
    POR             reduce using rule 21 (variable -> ID r_push_id .)
    DIV             reduce using rule 21 (variable -> ID r_push_id .)
    MAS             reduce using rule 21 (variable -> ID r_push_id .)
    MENOS           reduce using rule 21 (variable -> ID r_push_id .)
    MAYORQUE        reduce using rule 21 (variable -> ID r_push_id .)
    MENORQUE        reduce using rule 21 (variable -> ID r_push_id .)
    MAYORIGUAL      reduce using rule 21 (variable -> ID r_push_id .)
    MENORIGUAL      reduce using rule 21 (variable -> ID r_push_id .)
    IGUALIGUAL      reduce using rule 21 (variable -> ID r_push_id .)
    DIFERENTE       reduce using rule 21 (variable -> ID r_push_id .)
    AND             reduce using rule 21 (variable -> ID r_push_id .)
    OR              reduce using rule 21 (variable -> ID r_push_id .)
    PARENT_C        reduce using rule 21 (variable -> ID r_push_id .)
    COMA            reduce using rule 21 (variable -> ID r_push_id .)
    PUNTOCOMA       reduce using rule 21 (variable -> ID r_push_id .)
    CORCHETE_C      reduce using rule 21 (variable -> ID r_push_id .)
    HASTA           reduce using rule 21 (variable -> ID r_push_id .)
    HACER           reduce using rule 21 (variable -> ID r_push_id .)
    CORCHETE_A      shift and go to state 102

    dim                            shift and go to state 101

state 84

    (104) retorno -> REGRESA PARENT_A . expresion PARENT_C r_generate_quad_retorno
    (69) expresion -> . t_expresion r_generate_quad_or
    (70) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (72) t_expresion -> . g_expresion r_generate_quad_and
    (73) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (75) g_expresion -> . m_expresion r_generate_quad_logicos
    (76) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    expresion                      shift and go to state 104
    t_expresion                    shift and go to state 105
    g_expresion                    shift and go to state 106
    m_expresion                    shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 85

    (106) lectura -> LEER PARENT_A . variables PARENT_C
    (24) variables -> . variable r_generate_quad_leer
    (25) variables -> . variable r_generate_quad_leer COMA variables
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim

    ID              shift and go to state 118

    variables                      shift and go to state 116
    variable                       shift and go to state 117

state 86

    (108) escritura -> ESCRIBIR PARENT_A . escr PARENT_C
    (113) escr -> . escritura_dos r_generate_quad_escr
    (114) escr -> . escritura_dos r_generate_quad_escr COMA escr
    (109) escritura_dos -> . CTE_STR r_push_cte_str
    (110) escritura_dos -> . expresion
    (69) expresion -> . t_expresion r_generate_quad_or
    (70) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (72) t_expresion -> . g_expresion r_generate_quad_and
    (73) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (75) g_expresion -> . m_expresion r_generate_quad_logicos
    (76) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    CTE_STR         shift and go to state 121
    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    escr                           shift and go to state 119
    escritura_dos                  shift and go to state 120
    expresion                      shift and go to state 122
    t_expresion                    shift and go to state 105
    g_expresion                    shift and go to state 106
    m_expresion                    shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 87

    (115) decision -> if r_end_if .

    ID              reduce using rule 115 (decision -> if r_end_if .)
    REGRESA         reduce using rule 115 (decision -> if r_end_if .)
    LEER            reduce using rule 115 (decision -> if r_end_if .)
    ESCRIBIR        reduce using rule 115 (decision -> if r_end_if .)
    DESDE           reduce using rule 115 (decision -> if r_end_if .)
    MIENTRAS        reduce using rule 115 (decision -> if r_end_if .)
    SI              reduce using rule 115 (decision -> if r_end_if .)
    LLAVE_C         reduce using rule 115 (decision -> if r_end_if .)


state 88

    (116) decision -> if r_goto_ifelse . else r_end_if
    (121) else -> . SINO LLAVE_A estatutos_dos LLAVE_C

    SINO            shift and go to state 124

    else                           shift and go to state 123

state 89

    (125) ciclo_for -> DESDE ID . r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (127) r_save_var_for -> .

    IGUAL           reduce using rule 127 (r_save_var_for -> .)

    r_save_var_for                 shift and go to state 125

state 90

    (122) ciclo_while -> MIENTRAS r_save_jump . PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while

    PARENT_A        shift and go to state 126


state 91

    (117) if -> SI PARENT_A . expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C
    (69) expresion -> . t_expresion r_generate_quad_or
    (70) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (72) t_expresion -> . g_expresion r_generate_quad_and
    (73) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (75) g_expresion -> . m_expresion r_generate_quad_logicos
    (76) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    expresion                      shift and go to state 127
    t_expresion                    shift and go to state 105
    g_expresion                    shift and go to state 106
    m_expresion                    shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 92

    (18) ids_simple -> ID save_vars_name dimension COMA ids_simple .

    PUNTOCOMA       reduce using rule 18 (ids_simple -> ID save_vars_name dimension COMA ids_simple .)


state 93

    (20) dimension -> CORCHETE_A CTE_I CORCHETE_C .

    COMA            reduce using rule 20 (dimension -> CORCHETE_A CTE_I CORCHETE_C .)
    PUNTOCOMA       reduce using rule 20 (dimension -> CORCHETE_A CTE_I CORCHETE_C .)


state 94

    (34) func_dos -> PARENT_A PARENT_C var_funcs .

    FUNCION         reduce using rule 34 (func_dos -> PARENT_A PARENT_C var_funcs .)
    PRINCIPAL       reduce using rule 34 (func_dos -> PARENT_A PARENT_C var_funcs .)


state 95

    (37) var_funcs -> dec_est .

    FUNCION         reduce using rule 37 (var_funcs -> dec_est .)
    PRINCIPAL       reduce using rule 37 (var_funcs -> dec_est .)


state 96

    (38) var_funcs -> dec_vars . dec_est
    (42) dec_est -> . LLAVE_A LLAVE_C
    (43) dec_est -> . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 39

    dec_est                        shift and go to state 128

state 97

    (35) func_dos -> PARENT_A parametros PARENT_C . save_params var_funcs
    (36) save_params -> .

    LLAVE_A         reduce using rule 36 (save_params -> .)
    VAR             reduce using rule 36 (save_params -> .)

    save_params                    shift and go to state 129

state 98

    (39) parametros -> tipo_simple ID . save_params_list
    (40) parametros -> tipo_simple ID . save_params_list COMA parametros
    (41) save_params_list -> .

    COMA            reduce using rule 41 (save_params_list -> .)
    PARENT_C        reduce using rule 41 (save_params_list -> .)

    save_params_list               shift and go to state 130

state 99

    (54) asignacion -> variable IGUAL r_push_oper . expresion r_generate_quad_asig
    (69) expresion -> . t_expresion r_generate_quad_or
    (70) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (72) t_expresion -> . g_expresion r_generate_quad_and
    (73) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (75) g_expresion -> . m_expresion r_generate_quad_logicos
    (76) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    variable                       shift and go to state 113
    expresion                      shift and go to state 131
    t_expresion                    shift and go to state 105
    g_expresion                    shift and go to state 106
    m_expresion                    shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    llamada_exp                    shift and go to state 114

state 100

    (56) llamada -> ID r_check_func_exists PARENT_A . r_generate_ERA PARENT_C r_generate_gosub
    (57) llamada -> ID r_check_func_exists PARENT_A . r_generate_ERA expresiones PARENT_C r_generate_gosub
    (59) r_generate_ERA -> .

    PARENT_C        reduce using rule 59 (r_generate_ERA -> .)
    PARENT_A        reduce using rule 59 (r_generate_ERA -> .)
    CTE_I           reduce using rule 59 (r_generate_ERA -> .)
    CTE_F           reduce using rule 59 (r_generate_ERA -> .)
    CTE_CH          reduce using rule 59 (r_generate_ERA -> .)
    ID              reduce using rule 59 (r_generate_ERA -> .)

    r_generate_ERA                 shift and go to state 132

state 101

    (22) variable -> ID r_push_id dim .

    IGUAL           reduce using rule 22 (variable -> ID r_push_id dim .)
    POR             reduce using rule 22 (variable -> ID r_push_id dim .)
    DIV             reduce using rule 22 (variable -> ID r_push_id dim .)
    MAS             reduce using rule 22 (variable -> ID r_push_id dim .)
    MENOS           reduce using rule 22 (variable -> ID r_push_id dim .)
    MAYORQUE        reduce using rule 22 (variable -> ID r_push_id dim .)
    MENORQUE        reduce using rule 22 (variable -> ID r_push_id dim .)
    MAYORIGUAL      reduce using rule 22 (variable -> ID r_push_id dim .)
    MENORIGUAL      reduce using rule 22 (variable -> ID r_push_id dim .)
    IGUALIGUAL      reduce using rule 22 (variable -> ID r_push_id dim .)
    DIFERENTE       reduce using rule 22 (variable -> ID r_push_id dim .)
    AND             reduce using rule 22 (variable -> ID r_push_id dim .)
    OR              reduce using rule 22 (variable -> ID r_push_id dim .)
    PARENT_C        reduce using rule 22 (variable -> ID r_push_id dim .)
    COMA            reduce using rule 22 (variable -> ID r_push_id dim .)
    PUNTOCOMA       reduce using rule 22 (variable -> ID r_push_id dim .)
    CORCHETE_C      reduce using rule 22 (variable -> ID r_push_id dim .)
    HASTA           reduce using rule 22 (variable -> ID r_push_id dim .)
    HACER           reduce using rule 22 (variable -> ID r_push_id dim .)


state 102

    (26) dim -> CORCHETE_A . expresion CORCHETE_C
    (69) expresion -> . t_expresion r_generate_quad_or
    (70) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (72) t_expresion -> . g_expresion r_generate_quad_and
    (73) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (75) g_expresion -> . m_expresion r_generate_quad_logicos
    (76) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    expresion                      shift and go to state 133
    t_expresion                    shift and go to state 105
    g_expresion                    shift and go to state 106
    m_expresion                    shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 103

    (93) factor -> PARENT_A . r_push_ff expresion PARENT_C r_pop_ff
    (102) r_push_ff -> .

    PARENT_A        reduce using rule 102 (r_push_ff -> .)
    CTE_I           reduce using rule 102 (r_push_ff -> .)
    CTE_F           reduce using rule 102 (r_push_ff -> .)
    CTE_CH          reduce using rule 102 (r_push_ff -> .)
    ID              reduce using rule 102 (r_push_ff -> .)

    r_push_ff                      shift and go to state 134

state 104

    (104) retorno -> REGRESA PARENT_A expresion . PARENT_C r_generate_quad_retorno

    PARENT_C        shift and go to state 135


state 105

    (69) expresion -> t_expresion . r_generate_quad_or
    (70) expresion -> t_expresion . r_generate_quad_or OR r_push_oper expresion
    (71) r_generate_quad_or -> .

    OR              reduce using rule 71 (r_generate_quad_or -> .)
    PARENT_C        reduce using rule 71 (r_generate_quad_or -> .)
    COMA            reduce using rule 71 (r_generate_quad_or -> .)
    PUNTOCOMA       reduce using rule 71 (r_generate_quad_or -> .)
    CORCHETE_C      reduce using rule 71 (r_generate_quad_or -> .)
    HASTA           reduce using rule 71 (r_generate_quad_or -> .)
    HACER           reduce using rule 71 (r_generate_quad_or -> .)

    r_generate_quad_or             shift and go to state 136

state 106

    (72) t_expresion -> g_expresion . r_generate_quad_and
    (73) t_expresion -> g_expresion . r_generate_quad_and AND r_push_oper t_expresion
    (74) r_generate_quad_and -> .

    AND             reduce using rule 74 (r_generate_quad_and -> .)
    OR              reduce using rule 74 (r_generate_quad_and -> .)
    PARENT_C        reduce using rule 74 (r_generate_quad_and -> .)
    COMA            reduce using rule 74 (r_generate_quad_and -> .)
    PUNTOCOMA       reduce using rule 74 (r_generate_quad_and -> .)
    CORCHETE_C      reduce using rule 74 (r_generate_quad_and -> .)
    HASTA           reduce using rule 74 (r_generate_quad_and -> .)
    HACER           reduce using rule 74 (r_generate_quad_and -> .)

    r_generate_quad_and            shift and go to state 137

state 107

    (75) g_expresion -> m_expresion . r_generate_quad_logicos
    (76) g_expresion -> m_expresion . op_logicos m_expresion r_generate_quad_logicos
    (77) r_generate_quad_logicos -> .
    (78) op_logicos -> . MAYORQUE r_push_oper
    (79) op_logicos -> . MENORQUE r_push_oper
    (80) op_logicos -> . MAYORIGUAL r_push_oper
    (81) op_logicos -> . MENORIGUAL r_push_oper
    (82) op_logicos -> . IGUALIGUAL r_push_oper
    (83) op_logicos -> . DIFERENTE r_push_oper

    AND             reduce using rule 77 (r_generate_quad_logicos -> .)
    OR              reduce using rule 77 (r_generate_quad_logicos -> .)
    PARENT_C        reduce using rule 77 (r_generate_quad_logicos -> .)
    COMA            reduce using rule 77 (r_generate_quad_logicos -> .)
    PUNTOCOMA       reduce using rule 77 (r_generate_quad_logicos -> .)
    CORCHETE_C      reduce using rule 77 (r_generate_quad_logicos -> .)
    HASTA           reduce using rule 77 (r_generate_quad_logicos -> .)
    HACER           reduce using rule 77 (r_generate_quad_logicos -> .)
    MAYORQUE        shift and go to state 140
    MENORQUE        shift and go to state 141
    MAYORIGUAL      shift and go to state 142
    MENORIGUAL      shift and go to state 143
    IGUALIGUAL      shift and go to state 144
    DIFERENTE       shift and go to state 145

    r_generate_quad_logicos        shift and go to state 138
    op_logicos                     shift and go to state 139

state 108

    (84) m_expresion -> termino . r_generate_quad_masmen
    (85) m_expresion -> termino . r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> termino . r_generate_quad_masmen MENOS r_push_oper m_expresion
    (91) r_generate_quad_masmen -> .

    MAS             reduce using rule 91 (r_generate_quad_masmen -> .)
    MENOS           reduce using rule 91 (r_generate_quad_masmen -> .)
    MAYORQUE        reduce using rule 91 (r_generate_quad_masmen -> .)
    MENORQUE        reduce using rule 91 (r_generate_quad_masmen -> .)
    MAYORIGUAL      reduce using rule 91 (r_generate_quad_masmen -> .)
    MENORIGUAL      reduce using rule 91 (r_generate_quad_masmen -> .)
    IGUALIGUAL      reduce using rule 91 (r_generate_quad_masmen -> .)
    DIFERENTE       reduce using rule 91 (r_generate_quad_masmen -> .)
    AND             reduce using rule 91 (r_generate_quad_masmen -> .)
    OR              reduce using rule 91 (r_generate_quad_masmen -> .)
    PARENT_C        reduce using rule 91 (r_generate_quad_masmen -> .)
    COMA            reduce using rule 91 (r_generate_quad_masmen -> .)
    PUNTOCOMA       reduce using rule 91 (r_generate_quad_masmen -> .)
    CORCHETE_C      reduce using rule 91 (r_generate_quad_masmen -> .)
    HASTA           reduce using rule 91 (r_generate_quad_masmen -> .)
    HACER           reduce using rule 91 (r_generate_quad_masmen -> .)

    r_generate_quad_masmen         shift and go to state 146

state 109

    (87) termino -> factor . r_generate_quad_muldiv
    (88) termino -> factor . r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> factor . r_generate_quad_muldiv DIV r_push_oper termino
    (92) r_generate_quad_muldiv -> .

    POR             reduce using rule 92 (r_generate_quad_muldiv -> .)
    DIV             reduce using rule 92 (r_generate_quad_muldiv -> .)
    MAS             reduce using rule 92 (r_generate_quad_muldiv -> .)
    MENOS           reduce using rule 92 (r_generate_quad_muldiv -> .)
    MAYORQUE        reduce using rule 92 (r_generate_quad_muldiv -> .)
    MENORQUE        reduce using rule 92 (r_generate_quad_muldiv -> .)
    MAYORIGUAL      reduce using rule 92 (r_generate_quad_muldiv -> .)
    MENORIGUAL      reduce using rule 92 (r_generate_quad_muldiv -> .)
    IGUALIGUAL      reduce using rule 92 (r_generate_quad_muldiv -> .)
    DIFERENTE       reduce using rule 92 (r_generate_quad_muldiv -> .)
    AND             reduce using rule 92 (r_generate_quad_muldiv -> .)
    OR              reduce using rule 92 (r_generate_quad_muldiv -> .)
    PARENT_C        reduce using rule 92 (r_generate_quad_muldiv -> .)
    COMA            reduce using rule 92 (r_generate_quad_muldiv -> .)
    PUNTOCOMA       reduce using rule 92 (r_generate_quad_muldiv -> .)
    CORCHETE_C      reduce using rule 92 (r_generate_quad_muldiv -> .)
    HASTA           reduce using rule 92 (r_generate_quad_muldiv -> .)
    HACER           reduce using rule 92 (r_generate_quad_muldiv -> .)

    r_generate_quad_muldiv         shift and go to state 147

state 110

    (94) factor -> CTE_I . r_push_cte_i
    (99) r_push_cte_i -> .

    POR             reduce using rule 99 (r_push_cte_i -> .)
    DIV             reduce using rule 99 (r_push_cte_i -> .)
    MAS             reduce using rule 99 (r_push_cte_i -> .)
    MENOS           reduce using rule 99 (r_push_cte_i -> .)
    MAYORQUE        reduce using rule 99 (r_push_cte_i -> .)
    MENORQUE        reduce using rule 99 (r_push_cte_i -> .)
    MAYORIGUAL      reduce using rule 99 (r_push_cte_i -> .)
    MENORIGUAL      reduce using rule 99 (r_push_cte_i -> .)
    IGUALIGUAL      reduce using rule 99 (r_push_cte_i -> .)
    DIFERENTE       reduce using rule 99 (r_push_cte_i -> .)
    AND             reduce using rule 99 (r_push_cte_i -> .)
    OR              reduce using rule 99 (r_push_cte_i -> .)
    PARENT_C        reduce using rule 99 (r_push_cte_i -> .)
    COMA            reduce using rule 99 (r_push_cte_i -> .)
    PUNTOCOMA       reduce using rule 99 (r_push_cte_i -> .)
    CORCHETE_C      reduce using rule 99 (r_push_cte_i -> .)
    HASTA           reduce using rule 99 (r_push_cte_i -> .)
    HACER           reduce using rule 99 (r_push_cte_i -> .)

    r_push_cte_i                   shift and go to state 148

state 111

    (95) factor -> CTE_F . r_push_cte_f
    (100) r_push_cte_f -> .

    POR             reduce using rule 100 (r_push_cte_f -> .)
    DIV             reduce using rule 100 (r_push_cte_f -> .)
    MAS             reduce using rule 100 (r_push_cte_f -> .)
    MENOS           reduce using rule 100 (r_push_cte_f -> .)
    MAYORQUE        reduce using rule 100 (r_push_cte_f -> .)
    MENORQUE        reduce using rule 100 (r_push_cte_f -> .)
    MAYORIGUAL      reduce using rule 100 (r_push_cte_f -> .)
    MENORIGUAL      reduce using rule 100 (r_push_cte_f -> .)
    IGUALIGUAL      reduce using rule 100 (r_push_cte_f -> .)
    DIFERENTE       reduce using rule 100 (r_push_cte_f -> .)
    AND             reduce using rule 100 (r_push_cte_f -> .)
    OR              reduce using rule 100 (r_push_cte_f -> .)
    PARENT_C        reduce using rule 100 (r_push_cte_f -> .)
    COMA            reduce using rule 100 (r_push_cte_f -> .)
    PUNTOCOMA       reduce using rule 100 (r_push_cte_f -> .)
    CORCHETE_C      reduce using rule 100 (r_push_cte_f -> .)
    HASTA           reduce using rule 100 (r_push_cte_f -> .)
    HACER           reduce using rule 100 (r_push_cte_f -> .)

    r_push_cte_f                   shift and go to state 149

state 112

    (96) factor -> CTE_CH . r_push_cte_c
    (101) r_push_cte_c -> .

    POR             reduce using rule 101 (r_push_cte_c -> .)
    DIV             reduce using rule 101 (r_push_cte_c -> .)
    MAS             reduce using rule 101 (r_push_cte_c -> .)
    MENOS           reduce using rule 101 (r_push_cte_c -> .)
    MAYORQUE        reduce using rule 101 (r_push_cte_c -> .)
    MENORQUE        reduce using rule 101 (r_push_cte_c -> .)
    MAYORIGUAL      reduce using rule 101 (r_push_cte_c -> .)
    MENORIGUAL      reduce using rule 101 (r_push_cte_c -> .)
    IGUALIGUAL      reduce using rule 101 (r_push_cte_c -> .)
    DIFERENTE       reduce using rule 101 (r_push_cte_c -> .)
    AND             reduce using rule 101 (r_push_cte_c -> .)
    OR              reduce using rule 101 (r_push_cte_c -> .)
    PARENT_C        reduce using rule 101 (r_push_cte_c -> .)
    COMA            reduce using rule 101 (r_push_cte_c -> .)
    PUNTOCOMA       reduce using rule 101 (r_push_cte_c -> .)
    CORCHETE_C      reduce using rule 101 (r_push_cte_c -> .)
    HASTA           reduce using rule 101 (r_push_cte_c -> .)
    HACER           reduce using rule 101 (r_push_cte_c -> .)

    r_push_cte_c                   shift and go to state 150

state 113

    (97) factor -> variable .

    POR             reduce using rule 97 (factor -> variable .)
    DIV             reduce using rule 97 (factor -> variable .)
    MAS             reduce using rule 97 (factor -> variable .)
    MENOS           reduce using rule 97 (factor -> variable .)
    MAYORQUE        reduce using rule 97 (factor -> variable .)
    MENORQUE        reduce using rule 97 (factor -> variable .)
    MAYORIGUAL      reduce using rule 97 (factor -> variable .)
    MENORIGUAL      reduce using rule 97 (factor -> variable .)
    IGUALIGUAL      reduce using rule 97 (factor -> variable .)
    DIFERENTE       reduce using rule 97 (factor -> variable .)
    AND             reduce using rule 97 (factor -> variable .)
    OR              reduce using rule 97 (factor -> variable .)
    PARENT_C        reduce using rule 97 (factor -> variable .)
    COMA            reduce using rule 97 (factor -> variable .)
    PUNTOCOMA       reduce using rule 97 (factor -> variable .)
    CORCHETE_C      reduce using rule 97 (factor -> variable .)
    HASTA           reduce using rule 97 (factor -> variable .)
    HACER           reduce using rule 97 (factor -> variable .)


state 114

    (98) factor -> llamada_exp .

    POR             reduce using rule 98 (factor -> llamada_exp .)
    DIV             reduce using rule 98 (factor -> llamada_exp .)
    MAS             reduce using rule 98 (factor -> llamada_exp .)
    MENOS           reduce using rule 98 (factor -> llamada_exp .)
    MAYORQUE        reduce using rule 98 (factor -> llamada_exp .)
    MENORQUE        reduce using rule 98 (factor -> llamada_exp .)
    MAYORIGUAL      reduce using rule 98 (factor -> llamada_exp .)
    MENORIGUAL      reduce using rule 98 (factor -> llamada_exp .)
    IGUALIGUAL      reduce using rule 98 (factor -> llamada_exp .)
    DIFERENTE       reduce using rule 98 (factor -> llamada_exp .)
    AND             reduce using rule 98 (factor -> llamada_exp .)
    OR              reduce using rule 98 (factor -> llamada_exp .)
    PARENT_C        reduce using rule 98 (factor -> llamada_exp .)
    COMA            reduce using rule 98 (factor -> llamada_exp .)
    PUNTOCOMA       reduce using rule 98 (factor -> llamada_exp .)
    CORCHETE_C      reduce using rule 98 (factor -> llamada_exp .)
    HASTA           reduce using rule 98 (factor -> llamada_exp .)
    HACER           reduce using rule 98 (factor -> llamada_exp .)


state 115

    (21) variable -> ID . r_push_id
    (22) variable -> ID . r_push_id dim
    (61) llamada_exp -> ID . r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> ID . r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos
    (23) r_push_id -> .
    (58) r_check_func_exists -> .

    CORCHETE_A      reduce using rule 23 (r_push_id -> .)
    POR             reduce using rule 23 (r_push_id -> .)
    DIV             reduce using rule 23 (r_push_id -> .)
    MAS             reduce using rule 23 (r_push_id -> .)
    MENOS           reduce using rule 23 (r_push_id -> .)
    MAYORQUE        reduce using rule 23 (r_push_id -> .)
    MENORQUE        reduce using rule 23 (r_push_id -> .)
    MAYORIGUAL      reduce using rule 23 (r_push_id -> .)
    MENORIGUAL      reduce using rule 23 (r_push_id -> .)
    IGUALIGUAL      reduce using rule 23 (r_push_id -> .)
    DIFERENTE       reduce using rule 23 (r_push_id -> .)
    AND             reduce using rule 23 (r_push_id -> .)
    OR              reduce using rule 23 (r_push_id -> .)
    PARENT_C        reduce using rule 23 (r_push_id -> .)
    COMA            reduce using rule 23 (r_push_id -> .)
    PUNTOCOMA       reduce using rule 23 (r_push_id -> .)
    CORCHETE_C      reduce using rule 23 (r_push_id -> .)
    HASTA           reduce using rule 23 (r_push_id -> .)
    HACER           reduce using rule 23 (r_push_id -> .)
    PARENT_A        reduce using rule 58 (r_check_func_exists -> .)

    r_push_id                      shift and go to state 83
    r_check_func_exists            shift and go to state 151

state 116

    (106) lectura -> LEER PARENT_A variables . PARENT_C

    PARENT_C        shift and go to state 152


state 117

    (24) variables -> variable . r_generate_quad_leer
    (25) variables -> variable . r_generate_quad_leer COMA variables
    (107) r_generate_quad_leer -> .

    COMA            reduce using rule 107 (r_generate_quad_leer -> .)
    PARENT_C        reduce using rule 107 (r_generate_quad_leer -> .)

    r_generate_quad_leer           shift and go to state 153

state 118

    (21) variable -> ID . r_push_id
    (22) variable -> ID . r_push_id dim
    (23) r_push_id -> .

    CORCHETE_A      reduce using rule 23 (r_push_id -> .)
    COMA            reduce using rule 23 (r_push_id -> .)
    PARENT_C        reduce using rule 23 (r_push_id -> .)

    r_push_id                      shift and go to state 83

state 119

    (108) escritura -> ESCRIBIR PARENT_A escr . PARENT_C

    PARENT_C        shift and go to state 154


state 120

    (113) escr -> escritura_dos . r_generate_quad_escr
    (114) escr -> escritura_dos . r_generate_quad_escr COMA escr
    (112) r_generate_quad_escr -> .

    COMA            reduce using rule 112 (r_generate_quad_escr -> .)
    PARENT_C        reduce using rule 112 (r_generate_quad_escr -> .)

    r_generate_quad_escr           shift and go to state 155

state 121

    (109) escritura_dos -> CTE_STR . r_push_cte_str
    (111) r_push_cte_str -> .

    COMA            reduce using rule 111 (r_push_cte_str -> .)
    PARENT_C        reduce using rule 111 (r_push_cte_str -> .)

    r_push_cte_str                 shift and go to state 156

state 122

    (110) escritura_dos -> expresion .

    COMA            reduce using rule 110 (escritura_dos -> expresion .)
    PARENT_C        reduce using rule 110 (escritura_dos -> expresion .)


state 123

    (116) decision -> if r_goto_ifelse else . r_end_if
    (119) r_end_if -> .

    ID              reduce using rule 119 (r_end_if -> .)
    REGRESA         reduce using rule 119 (r_end_if -> .)
    LEER            reduce using rule 119 (r_end_if -> .)
    ESCRIBIR        reduce using rule 119 (r_end_if -> .)
    DESDE           reduce using rule 119 (r_end_if -> .)
    MIENTRAS        reduce using rule 119 (r_end_if -> .)
    SI              reduce using rule 119 (r_end_if -> .)
    LLAVE_C         reduce using rule 119 (r_end_if -> .)

    r_end_if                       shift and go to state 157

state 124

    (121) else -> SINO . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 158


state 125

    (125) ciclo_for -> DESDE ID r_save_var_for . IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for

    IGUAL           shift and go to state 159


state 126

    (122) ciclo_while -> MIENTRAS r_save_jump PARENT_A . expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (69) expresion -> . t_expresion r_generate_quad_or
    (70) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (72) t_expresion -> . g_expresion r_generate_quad_and
    (73) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (75) g_expresion -> . m_expresion r_generate_quad_logicos
    (76) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    expresion                      shift and go to state 160
    t_expresion                    shift and go to state 105
    g_expresion                    shift and go to state 106
    m_expresion                    shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 127

    (117) if -> SI PARENT_A expresion . PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    PARENT_C        shift and go to state 161


state 128

    (38) var_funcs -> dec_vars dec_est .

    FUNCION         reduce using rule 38 (var_funcs -> dec_vars dec_est .)
    PRINCIPAL       reduce using rule 38 (var_funcs -> dec_vars dec_est .)


state 129

    (35) func_dos -> PARENT_A parametros PARENT_C save_params . var_funcs
    (37) var_funcs -> . dec_est
    (38) var_funcs -> . dec_vars dec_est
    (42) dec_est -> . LLAVE_A LLAVE_C
    (43) dec_est -> . LLAVE_A estatutos_dos LLAVE_C
    (8) dec_vars -> . VAR vars save_vars

    LLAVE_A         shift and go to state 39
    VAR             shift and go to state 10

    var_funcs                      shift and go to state 162
    dec_est                        shift and go to state 95
    dec_vars                       shift and go to state 96

state 130

    (39) parametros -> tipo_simple ID save_params_list .
    (40) parametros -> tipo_simple ID save_params_list . COMA parametros

    PARENT_C        reduce using rule 39 (parametros -> tipo_simple ID save_params_list .)
    COMA            shift and go to state 163


state 131

    (54) asignacion -> variable IGUAL r_push_oper expresion . r_generate_quad_asig
    (55) r_generate_quad_asig -> .

    PUNTOCOMA       reduce using rule 55 (r_generate_quad_asig -> .)

    r_generate_quad_asig           shift and go to state 164

state 132

    (56) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA . PARENT_C r_generate_gosub
    (57) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA . expresiones PARENT_C r_generate_gosub
    (65) expresiones -> . expresion r_generate_parameter
    (66) expresiones -> . expresion r_generate_parameter COMA r_act_param_count expresiones
    (69) expresion -> . t_expresion r_generate_quad_or
    (70) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (72) t_expresion -> . g_expresion r_generate_quad_and
    (73) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (75) g_expresion -> . m_expresion r_generate_quad_logicos
    (76) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_C        shift and go to state 165
    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    expresiones                    shift and go to state 166
    expresion                      shift and go to state 167
    t_expresion                    shift and go to state 105
    g_expresion                    shift and go to state 106
    m_expresion                    shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 133

    (26) dim -> CORCHETE_A expresion . CORCHETE_C

    CORCHETE_C      shift and go to state 168


state 134

    (93) factor -> PARENT_A r_push_ff . expresion PARENT_C r_pop_ff
    (69) expresion -> . t_expresion r_generate_quad_or
    (70) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (72) t_expresion -> . g_expresion r_generate_quad_and
    (73) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (75) g_expresion -> . m_expresion r_generate_quad_logicos
    (76) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    expresion                      shift and go to state 169
    t_expresion                    shift and go to state 105
    g_expresion                    shift and go to state 106
    m_expresion                    shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 135

    (104) retorno -> REGRESA PARENT_A expresion PARENT_C . r_generate_quad_retorno
    (105) r_generate_quad_retorno -> .

    PUNTOCOMA       reduce using rule 105 (r_generate_quad_retorno -> .)

    r_generate_quad_retorno        shift and go to state 170

state 136

    (69) expresion -> t_expresion r_generate_quad_or .
    (70) expresion -> t_expresion r_generate_quad_or . OR r_push_oper expresion

    PARENT_C        reduce using rule 69 (expresion -> t_expresion r_generate_quad_or .)
    COMA            reduce using rule 69 (expresion -> t_expresion r_generate_quad_or .)
    PUNTOCOMA       reduce using rule 69 (expresion -> t_expresion r_generate_quad_or .)
    CORCHETE_C      reduce using rule 69 (expresion -> t_expresion r_generate_quad_or .)
    HASTA           reduce using rule 69 (expresion -> t_expresion r_generate_quad_or .)
    HACER           reduce using rule 69 (expresion -> t_expresion r_generate_quad_or .)
    OR              shift and go to state 171


state 137

    (72) t_expresion -> g_expresion r_generate_quad_and .
    (73) t_expresion -> g_expresion r_generate_quad_and . AND r_push_oper t_expresion

    OR              reduce using rule 72 (t_expresion -> g_expresion r_generate_quad_and .)
    PARENT_C        reduce using rule 72 (t_expresion -> g_expresion r_generate_quad_and .)
    COMA            reduce using rule 72 (t_expresion -> g_expresion r_generate_quad_and .)
    PUNTOCOMA       reduce using rule 72 (t_expresion -> g_expresion r_generate_quad_and .)
    CORCHETE_C      reduce using rule 72 (t_expresion -> g_expresion r_generate_quad_and .)
    HASTA           reduce using rule 72 (t_expresion -> g_expresion r_generate_quad_and .)
    HACER           reduce using rule 72 (t_expresion -> g_expresion r_generate_quad_and .)
    AND             shift and go to state 172


state 138

    (75) g_expresion -> m_expresion r_generate_quad_logicos .

    AND             reduce using rule 75 (g_expresion -> m_expresion r_generate_quad_logicos .)
    OR              reduce using rule 75 (g_expresion -> m_expresion r_generate_quad_logicos .)
    PARENT_C        reduce using rule 75 (g_expresion -> m_expresion r_generate_quad_logicos .)
    COMA            reduce using rule 75 (g_expresion -> m_expresion r_generate_quad_logicos .)
    PUNTOCOMA       reduce using rule 75 (g_expresion -> m_expresion r_generate_quad_logicos .)
    CORCHETE_C      reduce using rule 75 (g_expresion -> m_expresion r_generate_quad_logicos .)
    HASTA           reduce using rule 75 (g_expresion -> m_expresion r_generate_quad_logicos .)
    HACER           reduce using rule 75 (g_expresion -> m_expresion r_generate_quad_logicos .)


state 139

    (76) g_expresion -> m_expresion op_logicos . m_expresion r_generate_quad_logicos
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    m_expresion                    shift and go to state 173
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 140

    (78) op_logicos -> MAYORQUE . r_push_oper
    (90) r_push_oper -> .

    PARENT_A        reduce using rule 90 (r_push_oper -> .)
    CTE_I           reduce using rule 90 (r_push_oper -> .)
    CTE_F           reduce using rule 90 (r_push_oper -> .)
    CTE_CH          reduce using rule 90 (r_push_oper -> .)
    ID              reduce using rule 90 (r_push_oper -> .)

    r_push_oper                    shift and go to state 174

state 141

    (79) op_logicos -> MENORQUE . r_push_oper
    (90) r_push_oper -> .

    PARENT_A        reduce using rule 90 (r_push_oper -> .)
    CTE_I           reduce using rule 90 (r_push_oper -> .)
    CTE_F           reduce using rule 90 (r_push_oper -> .)
    CTE_CH          reduce using rule 90 (r_push_oper -> .)
    ID              reduce using rule 90 (r_push_oper -> .)

    r_push_oper                    shift and go to state 175

state 142

    (80) op_logicos -> MAYORIGUAL . r_push_oper
    (90) r_push_oper -> .

    PARENT_A        reduce using rule 90 (r_push_oper -> .)
    CTE_I           reduce using rule 90 (r_push_oper -> .)
    CTE_F           reduce using rule 90 (r_push_oper -> .)
    CTE_CH          reduce using rule 90 (r_push_oper -> .)
    ID              reduce using rule 90 (r_push_oper -> .)

    r_push_oper                    shift and go to state 176

state 143

    (81) op_logicos -> MENORIGUAL . r_push_oper
    (90) r_push_oper -> .

    PARENT_A        reduce using rule 90 (r_push_oper -> .)
    CTE_I           reduce using rule 90 (r_push_oper -> .)
    CTE_F           reduce using rule 90 (r_push_oper -> .)
    CTE_CH          reduce using rule 90 (r_push_oper -> .)
    ID              reduce using rule 90 (r_push_oper -> .)

    r_push_oper                    shift and go to state 177

state 144

    (82) op_logicos -> IGUALIGUAL . r_push_oper
    (90) r_push_oper -> .

    PARENT_A        reduce using rule 90 (r_push_oper -> .)
    CTE_I           reduce using rule 90 (r_push_oper -> .)
    CTE_F           reduce using rule 90 (r_push_oper -> .)
    CTE_CH          reduce using rule 90 (r_push_oper -> .)
    ID              reduce using rule 90 (r_push_oper -> .)

    r_push_oper                    shift and go to state 178

state 145

    (83) op_logicos -> DIFERENTE . r_push_oper
    (90) r_push_oper -> .

    PARENT_A        reduce using rule 90 (r_push_oper -> .)
    CTE_I           reduce using rule 90 (r_push_oper -> .)
    CTE_F           reduce using rule 90 (r_push_oper -> .)
    CTE_CH          reduce using rule 90 (r_push_oper -> .)
    ID              reduce using rule 90 (r_push_oper -> .)

    r_push_oper                    shift and go to state 179

state 146

    (84) m_expresion -> termino r_generate_quad_masmen .
    (85) m_expresion -> termino r_generate_quad_masmen . MAS r_push_oper m_expresion
    (86) m_expresion -> termino r_generate_quad_masmen . MENOS r_push_oper m_expresion

    MAYORQUE        reduce using rule 84 (m_expresion -> termino r_generate_quad_masmen .)
    MENORQUE        reduce using rule 84 (m_expresion -> termino r_generate_quad_masmen .)
    MAYORIGUAL      reduce using rule 84 (m_expresion -> termino r_generate_quad_masmen .)
    MENORIGUAL      reduce using rule 84 (m_expresion -> termino r_generate_quad_masmen .)
    IGUALIGUAL      reduce using rule 84 (m_expresion -> termino r_generate_quad_masmen .)
    DIFERENTE       reduce using rule 84 (m_expresion -> termino r_generate_quad_masmen .)
    AND             reduce using rule 84 (m_expresion -> termino r_generate_quad_masmen .)
    OR              reduce using rule 84 (m_expresion -> termino r_generate_quad_masmen .)
    PARENT_C        reduce using rule 84 (m_expresion -> termino r_generate_quad_masmen .)
    COMA            reduce using rule 84 (m_expresion -> termino r_generate_quad_masmen .)
    PUNTOCOMA       reduce using rule 84 (m_expresion -> termino r_generate_quad_masmen .)
    CORCHETE_C      reduce using rule 84 (m_expresion -> termino r_generate_quad_masmen .)
    HASTA           reduce using rule 84 (m_expresion -> termino r_generate_quad_masmen .)
    HACER           reduce using rule 84 (m_expresion -> termino r_generate_quad_masmen .)
    MAS             shift and go to state 180
    MENOS           shift and go to state 181


state 147

    (87) termino -> factor r_generate_quad_muldiv .
    (88) termino -> factor r_generate_quad_muldiv . POR r_push_oper termino
    (89) termino -> factor r_generate_quad_muldiv . DIV r_push_oper termino

    MAS             reduce using rule 87 (termino -> factor r_generate_quad_muldiv .)
    MENOS           reduce using rule 87 (termino -> factor r_generate_quad_muldiv .)
    MAYORQUE        reduce using rule 87 (termino -> factor r_generate_quad_muldiv .)
    MENORQUE        reduce using rule 87 (termino -> factor r_generate_quad_muldiv .)
    MAYORIGUAL      reduce using rule 87 (termino -> factor r_generate_quad_muldiv .)
    MENORIGUAL      reduce using rule 87 (termino -> factor r_generate_quad_muldiv .)
    IGUALIGUAL      reduce using rule 87 (termino -> factor r_generate_quad_muldiv .)
    DIFERENTE       reduce using rule 87 (termino -> factor r_generate_quad_muldiv .)
    AND             reduce using rule 87 (termino -> factor r_generate_quad_muldiv .)
    OR              reduce using rule 87 (termino -> factor r_generate_quad_muldiv .)
    PARENT_C        reduce using rule 87 (termino -> factor r_generate_quad_muldiv .)
    COMA            reduce using rule 87 (termino -> factor r_generate_quad_muldiv .)
    PUNTOCOMA       reduce using rule 87 (termino -> factor r_generate_quad_muldiv .)
    CORCHETE_C      reduce using rule 87 (termino -> factor r_generate_quad_muldiv .)
    HASTA           reduce using rule 87 (termino -> factor r_generate_quad_muldiv .)
    HACER           reduce using rule 87 (termino -> factor r_generate_quad_muldiv .)
    POR             shift and go to state 182
    DIV             shift and go to state 183


state 148

    (94) factor -> CTE_I r_push_cte_i .

    POR             reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    DIV             reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    MAS             reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    MENOS           reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    MAYORQUE        reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    MENORQUE        reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    MAYORIGUAL      reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    MENORIGUAL      reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    IGUALIGUAL      reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    DIFERENTE       reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    AND             reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    OR              reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    PARENT_C        reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    COMA            reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    PUNTOCOMA       reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    CORCHETE_C      reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    HASTA           reduce using rule 94 (factor -> CTE_I r_push_cte_i .)
    HACER           reduce using rule 94 (factor -> CTE_I r_push_cte_i .)


state 149

    (95) factor -> CTE_F r_push_cte_f .

    POR             reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    DIV             reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    MAS             reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    MENOS           reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    MAYORQUE        reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    MENORQUE        reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    MAYORIGUAL      reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    MENORIGUAL      reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    IGUALIGUAL      reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    DIFERENTE       reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    AND             reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    OR              reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    PARENT_C        reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    COMA            reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    PUNTOCOMA       reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    CORCHETE_C      reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    HASTA           reduce using rule 95 (factor -> CTE_F r_push_cte_f .)
    HACER           reduce using rule 95 (factor -> CTE_F r_push_cte_f .)


state 150

    (96) factor -> CTE_CH r_push_cte_c .

    POR             reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    DIV             reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    MAS             reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    MENOS           reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    MAYORQUE        reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    MENORQUE        reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    MAYORIGUAL      reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    MENORIGUAL      reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    IGUALIGUAL      reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    DIFERENTE       reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    AND             reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    OR              reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    PARENT_C        reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    COMA            reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    PUNTOCOMA       reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    CORCHETE_C      reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    HASTA           reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)
    HACER           reduce using rule 96 (factor -> CTE_CH r_push_cte_c .)


state 151

    (61) llamada_exp -> ID r_check_func_exists . PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> ID r_check_func_exists . PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 184


state 152

    (106) lectura -> LEER PARENT_A variables PARENT_C .

    PUNTOCOMA       reduce using rule 106 (lectura -> LEER PARENT_A variables PARENT_C .)


state 153

    (24) variables -> variable r_generate_quad_leer .
    (25) variables -> variable r_generate_quad_leer . COMA variables

    PARENT_C        reduce using rule 24 (variables -> variable r_generate_quad_leer .)
    COMA            shift and go to state 185


state 154

    (108) escritura -> ESCRIBIR PARENT_A escr PARENT_C .

    PUNTOCOMA       reduce using rule 108 (escritura -> ESCRIBIR PARENT_A escr PARENT_C .)


state 155

    (113) escr -> escritura_dos r_generate_quad_escr .
    (114) escr -> escritura_dos r_generate_quad_escr . COMA escr

    PARENT_C        reduce using rule 113 (escr -> escritura_dos r_generate_quad_escr .)
    COMA            shift and go to state 186


state 156

    (109) escritura_dos -> CTE_STR r_push_cte_str .

    COMA            reduce using rule 109 (escritura_dos -> CTE_STR r_push_cte_str .)
    PARENT_C        reduce using rule 109 (escritura_dos -> CTE_STR r_push_cte_str .)


state 157

    (116) decision -> if r_goto_ifelse else r_end_if .

    ID              reduce using rule 116 (decision -> if r_goto_ifelse else r_end_if .)
    REGRESA         reduce using rule 116 (decision -> if r_goto_ifelse else r_end_if .)
    LEER            reduce using rule 116 (decision -> if r_goto_ifelse else r_end_if .)
    ESCRIBIR        reduce using rule 116 (decision -> if r_goto_ifelse else r_end_if .)
    DESDE           reduce using rule 116 (decision -> if r_goto_ifelse else r_end_if .)
    MIENTRAS        reduce using rule 116 (decision -> if r_goto_ifelse else r_end_if .)
    SI              reduce using rule 116 (decision -> if r_goto_ifelse else r_end_if .)
    LLAVE_C         reduce using rule 116 (decision -> if r_goto_ifelse else r_end_if .)


state 158

    (121) else -> SINO LLAVE_A . estatutos_dos LLAVE_C
    (52) estatutos_dos -> . estatutos
    (53) estatutos_dos -> . estatutos estatutos_dos
    (44) estatutos -> . asignacion PUNTOCOMA
    (45) estatutos -> . llamada PUNTOCOMA
    (46) estatutos -> . retorno PUNTOCOMA
    (47) estatutos -> . lectura PUNTOCOMA
    (48) estatutos -> . escritura PUNTOCOMA
    (49) estatutos -> . decision
    (50) estatutos -> . ciclo_for
    (51) estatutos -> . ciclo_while
    (54) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (56) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (57) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (104) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (106) lectura -> . LEER PARENT_A variables PARENT_C
    (108) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (115) decision -> . if r_end_if
    (116) decision -> . if r_goto_ifelse else r_end_if
    (125) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (122) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (117) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 59
    REGRESA         shift and go to state 60
    LEER            shift and go to state 61
    ESCRIBIR        shift and go to state 62
    DESDE           shift and go to state 64
    MIENTRAS        shift and go to state 65
    SI              shift and go to state 66

    estatutos_dos                  shift and go to state 187
    estatutos                      shift and go to state 49
    asignacion                     shift and go to state 50
    llamada                        shift and go to state 51
    retorno                        shift and go to state 52
    lectura                        shift and go to state 53
    escritura                      shift and go to state 54
    decision                       shift and go to state 55
    ciclo_for                      shift and go to state 56
    ciclo_while                    shift and go to state 57
    variable                       shift and go to state 58
    if                             shift and go to state 63

state 159

    (125) ciclo_for -> DESDE ID r_save_var_for IGUAL . expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (69) expresion -> . t_expresion r_generate_quad_or
    (70) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (72) t_expresion -> . g_expresion r_generate_quad_and
    (73) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (75) g_expresion -> . m_expresion r_generate_quad_logicos
    (76) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    expresion                      shift and go to state 188
    t_expresion                    shift and go to state 105
    g_expresion                    shift and go to state 106
    m_expresion                    shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 160

    (122) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion . PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while

    PARENT_C        shift and go to state 189


state 161

    (117) if -> SI PARENT_A expresion PARENT_C . r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C
    (118) r_check_exp_type -> .

    ENTONCES        reduce using rule 118 (r_check_exp_type -> .)

    r_check_exp_type               shift and go to state 190

state 162

    (35) func_dos -> PARENT_A parametros PARENT_C save_params var_funcs .

    FUNCION         reduce using rule 35 (func_dos -> PARENT_A parametros PARENT_C save_params var_funcs .)
    PRINCIPAL       reduce using rule 35 (func_dos -> PARENT_A parametros PARENT_C save_params var_funcs .)


state 163

    (40) parametros -> tipo_simple ID save_params_list COMA . parametros
    (39) parametros -> . tipo_simple ID save_params_list
    (40) parametros -> . tipo_simple ID save_params_list COMA parametros
    (12) tipo_simple -> . INT
    (13) tipo_simple -> . FLOAT
    (14) tipo_simple -> . CHAR

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    tipo_simple                    shift and go to state 72
    parametros                     shift and go to state 191

state 164

    (54) asignacion -> variable IGUAL r_push_oper expresion r_generate_quad_asig .

    PUNTOCOMA       reduce using rule 54 (asignacion -> variable IGUAL r_push_oper expresion r_generate_quad_asig .)


state 165

    (56) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C . r_generate_gosub
    (60) r_generate_gosub -> .

    PUNTOCOMA       reduce using rule 60 (r_generate_gosub -> .)

    r_generate_gosub               shift and go to state 192

state 166

    (57) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA expresiones . PARENT_C r_generate_gosub

    PARENT_C        shift and go to state 193


state 167

    (65) expresiones -> expresion . r_generate_parameter
    (66) expresiones -> expresion . r_generate_parameter COMA r_act_param_count expresiones
    (67) r_generate_parameter -> .

    COMA            reduce using rule 67 (r_generate_parameter -> .)
    PARENT_C        reduce using rule 67 (r_generate_parameter -> .)

    r_generate_parameter           shift and go to state 194

state 168

    (26) dim -> CORCHETE_A expresion CORCHETE_C .

    IGUAL           reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    POR             reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    DIV             reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MAS             reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MENOS           reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MAYORQUE        reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MENORQUE        reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MAYORIGUAL      reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MENORIGUAL      reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    IGUALIGUAL      reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    DIFERENTE       reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    AND             reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    OR              reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    PARENT_C        reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    COMA            reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    PUNTOCOMA       reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    CORCHETE_C      reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    HASTA           reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)
    HACER           reduce using rule 26 (dim -> CORCHETE_A expresion CORCHETE_C .)


state 169

    (93) factor -> PARENT_A r_push_ff expresion . PARENT_C r_pop_ff

    PARENT_C        shift and go to state 195


state 170

    (104) retorno -> REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno .

    PUNTOCOMA       reduce using rule 104 (retorno -> REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno .)


state 171

    (70) expresion -> t_expresion r_generate_quad_or OR . r_push_oper expresion
    (90) r_push_oper -> .

    PARENT_A        reduce using rule 90 (r_push_oper -> .)
    CTE_I           reduce using rule 90 (r_push_oper -> .)
    CTE_F           reduce using rule 90 (r_push_oper -> .)
    CTE_CH          reduce using rule 90 (r_push_oper -> .)
    ID              reduce using rule 90 (r_push_oper -> .)

    r_push_oper                    shift and go to state 196

state 172

    (73) t_expresion -> g_expresion r_generate_quad_and AND . r_push_oper t_expresion
    (90) r_push_oper -> .

    PARENT_A        reduce using rule 90 (r_push_oper -> .)
    CTE_I           reduce using rule 90 (r_push_oper -> .)
    CTE_F           reduce using rule 90 (r_push_oper -> .)
    CTE_CH          reduce using rule 90 (r_push_oper -> .)
    ID              reduce using rule 90 (r_push_oper -> .)

    r_push_oper                    shift and go to state 197

state 173

    (76) g_expresion -> m_expresion op_logicos m_expresion . r_generate_quad_logicos
    (77) r_generate_quad_logicos -> .

    AND             reduce using rule 77 (r_generate_quad_logicos -> .)
    OR              reduce using rule 77 (r_generate_quad_logicos -> .)
    PARENT_C        reduce using rule 77 (r_generate_quad_logicos -> .)
    COMA            reduce using rule 77 (r_generate_quad_logicos -> .)
    PUNTOCOMA       reduce using rule 77 (r_generate_quad_logicos -> .)
    CORCHETE_C      reduce using rule 77 (r_generate_quad_logicos -> .)
    HASTA           reduce using rule 77 (r_generate_quad_logicos -> .)
    HACER           reduce using rule 77 (r_generate_quad_logicos -> .)

    r_generate_quad_logicos        shift and go to state 198

state 174

    (78) op_logicos -> MAYORQUE r_push_oper .

    PARENT_A        reduce using rule 78 (op_logicos -> MAYORQUE r_push_oper .)
    CTE_I           reduce using rule 78 (op_logicos -> MAYORQUE r_push_oper .)
    CTE_F           reduce using rule 78 (op_logicos -> MAYORQUE r_push_oper .)
    CTE_CH          reduce using rule 78 (op_logicos -> MAYORQUE r_push_oper .)
    ID              reduce using rule 78 (op_logicos -> MAYORQUE r_push_oper .)


state 175

    (79) op_logicos -> MENORQUE r_push_oper .

    PARENT_A        reduce using rule 79 (op_logicos -> MENORQUE r_push_oper .)
    CTE_I           reduce using rule 79 (op_logicos -> MENORQUE r_push_oper .)
    CTE_F           reduce using rule 79 (op_logicos -> MENORQUE r_push_oper .)
    CTE_CH          reduce using rule 79 (op_logicos -> MENORQUE r_push_oper .)
    ID              reduce using rule 79 (op_logicos -> MENORQUE r_push_oper .)


state 176

    (80) op_logicos -> MAYORIGUAL r_push_oper .

    PARENT_A        reduce using rule 80 (op_logicos -> MAYORIGUAL r_push_oper .)
    CTE_I           reduce using rule 80 (op_logicos -> MAYORIGUAL r_push_oper .)
    CTE_F           reduce using rule 80 (op_logicos -> MAYORIGUAL r_push_oper .)
    CTE_CH          reduce using rule 80 (op_logicos -> MAYORIGUAL r_push_oper .)
    ID              reduce using rule 80 (op_logicos -> MAYORIGUAL r_push_oper .)


state 177

    (81) op_logicos -> MENORIGUAL r_push_oper .

    PARENT_A        reduce using rule 81 (op_logicos -> MENORIGUAL r_push_oper .)
    CTE_I           reduce using rule 81 (op_logicos -> MENORIGUAL r_push_oper .)
    CTE_F           reduce using rule 81 (op_logicos -> MENORIGUAL r_push_oper .)
    CTE_CH          reduce using rule 81 (op_logicos -> MENORIGUAL r_push_oper .)
    ID              reduce using rule 81 (op_logicos -> MENORIGUAL r_push_oper .)


state 178

    (82) op_logicos -> IGUALIGUAL r_push_oper .

    PARENT_A        reduce using rule 82 (op_logicos -> IGUALIGUAL r_push_oper .)
    CTE_I           reduce using rule 82 (op_logicos -> IGUALIGUAL r_push_oper .)
    CTE_F           reduce using rule 82 (op_logicos -> IGUALIGUAL r_push_oper .)
    CTE_CH          reduce using rule 82 (op_logicos -> IGUALIGUAL r_push_oper .)
    ID              reduce using rule 82 (op_logicos -> IGUALIGUAL r_push_oper .)


state 179

    (83) op_logicos -> DIFERENTE r_push_oper .

    PARENT_A        reduce using rule 83 (op_logicos -> DIFERENTE r_push_oper .)
    CTE_I           reduce using rule 83 (op_logicos -> DIFERENTE r_push_oper .)
    CTE_F           reduce using rule 83 (op_logicos -> DIFERENTE r_push_oper .)
    CTE_CH          reduce using rule 83 (op_logicos -> DIFERENTE r_push_oper .)
    ID              reduce using rule 83 (op_logicos -> DIFERENTE r_push_oper .)


state 180

    (85) m_expresion -> termino r_generate_quad_masmen MAS . r_push_oper m_expresion
    (90) r_push_oper -> .

    PARENT_A        reduce using rule 90 (r_push_oper -> .)
    CTE_I           reduce using rule 90 (r_push_oper -> .)
    CTE_F           reduce using rule 90 (r_push_oper -> .)
    CTE_CH          reduce using rule 90 (r_push_oper -> .)
    ID              reduce using rule 90 (r_push_oper -> .)

    r_push_oper                    shift and go to state 199

state 181

    (86) m_expresion -> termino r_generate_quad_masmen MENOS . r_push_oper m_expresion
    (90) r_push_oper -> .

    PARENT_A        reduce using rule 90 (r_push_oper -> .)
    CTE_I           reduce using rule 90 (r_push_oper -> .)
    CTE_F           reduce using rule 90 (r_push_oper -> .)
    CTE_CH          reduce using rule 90 (r_push_oper -> .)
    ID              reduce using rule 90 (r_push_oper -> .)

    r_push_oper                    shift and go to state 200

state 182

    (88) termino -> factor r_generate_quad_muldiv POR . r_push_oper termino
    (90) r_push_oper -> .

    PARENT_A        reduce using rule 90 (r_push_oper -> .)
    CTE_I           reduce using rule 90 (r_push_oper -> .)
    CTE_F           reduce using rule 90 (r_push_oper -> .)
    CTE_CH          reduce using rule 90 (r_push_oper -> .)
    ID              reduce using rule 90 (r_push_oper -> .)

    r_push_oper                    shift and go to state 201

state 183

    (89) termino -> factor r_generate_quad_muldiv DIV . r_push_oper termino
    (90) r_push_oper -> .

    PARENT_A        reduce using rule 90 (r_push_oper -> .)
    CTE_I           reduce using rule 90 (r_push_oper -> .)
    CTE_F           reduce using rule 90 (r_push_oper -> .)
    CTE_CH          reduce using rule 90 (r_push_oper -> .)
    ID              reduce using rule 90 (r_push_oper -> .)

    r_push_oper                    shift and go to state 202

state 184

    (61) llamada_exp -> ID r_check_func_exists PARENT_A . r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> ID r_check_func_exists PARENT_A . r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos
    (63) r_generate_ERA_dos -> .

    PARENT_C        reduce using rule 63 (r_generate_ERA_dos -> .)
    PARENT_A        reduce using rule 63 (r_generate_ERA_dos -> .)
    CTE_I           reduce using rule 63 (r_generate_ERA_dos -> .)
    CTE_F           reduce using rule 63 (r_generate_ERA_dos -> .)
    CTE_CH          reduce using rule 63 (r_generate_ERA_dos -> .)
    ID              reduce using rule 63 (r_generate_ERA_dos -> .)

    r_generate_ERA_dos             shift and go to state 203

state 185

    (25) variables -> variable r_generate_quad_leer COMA . variables
    (24) variables -> . variable r_generate_quad_leer
    (25) variables -> . variable r_generate_quad_leer COMA variables
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim

    ID              shift and go to state 118

    variable                       shift and go to state 117
    variables                      shift and go to state 204

state 186

    (114) escr -> escritura_dos r_generate_quad_escr COMA . escr
    (113) escr -> . escritura_dos r_generate_quad_escr
    (114) escr -> . escritura_dos r_generate_quad_escr COMA escr
    (109) escritura_dos -> . CTE_STR r_push_cte_str
    (110) escritura_dos -> . expresion
    (69) expresion -> . t_expresion r_generate_quad_or
    (70) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (72) t_expresion -> . g_expresion r_generate_quad_and
    (73) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (75) g_expresion -> . m_expresion r_generate_quad_logicos
    (76) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    CTE_STR         shift and go to state 121
    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    escritura_dos                  shift and go to state 120
    escr                           shift and go to state 205
    expresion                      shift and go to state 122
    t_expresion                    shift and go to state 105
    g_expresion                    shift and go to state 106
    m_expresion                    shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 187

    (121) else -> SINO LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 206


state 188

    (125) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion . r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (128) r_generate_quad_asig_for -> .

    HASTA           reduce using rule 128 (r_generate_quad_asig_for -> .)

    r_generate_quad_asig_for       shift and go to state 207

state 189

    (122) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C . r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (118) r_check_exp_type -> .

    HAZ             reduce using rule 118 (r_check_exp_type -> .)

    r_check_exp_type               shift and go to state 208

state 190

    (117) if -> SI PARENT_A expresion PARENT_C r_check_exp_type . ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ENTONCES        shift and go to state 209


state 191

    (40) parametros -> tipo_simple ID save_params_list COMA parametros .

    PARENT_C        reduce using rule 40 (parametros -> tipo_simple ID save_params_list COMA parametros .)


state 192

    (56) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub .

    PUNTOCOMA       reduce using rule 56 (llamada -> ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub .)


state 193

    (57) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C . r_generate_gosub
    (60) r_generate_gosub -> .

    PUNTOCOMA       reduce using rule 60 (r_generate_gosub -> .)

    r_generate_gosub               shift and go to state 210

state 194

    (65) expresiones -> expresion r_generate_parameter .
    (66) expresiones -> expresion r_generate_parameter . COMA r_act_param_count expresiones

    PARENT_C        reduce using rule 65 (expresiones -> expresion r_generate_parameter .)
    COMA            shift and go to state 211


state 195

    (93) factor -> PARENT_A r_push_ff expresion PARENT_C . r_pop_ff
    (103) r_pop_ff -> .

    POR             reduce using rule 103 (r_pop_ff -> .)
    DIV             reduce using rule 103 (r_pop_ff -> .)
    MAS             reduce using rule 103 (r_pop_ff -> .)
    MENOS           reduce using rule 103 (r_pop_ff -> .)
    MAYORQUE        reduce using rule 103 (r_pop_ff -> .)
    MENORQUE        reduce using rule 103 (r_pop_ff -> .)
    MAYORIGUAL      reduce using rule 103 (r_pop_ff -> .)
    MENORIGUAL      reduce using rule 103 (r_pop_ff -> .)
    IGUALIGUAL      reduce using rule 103 (r_pop_ff -> .)
    DIFERENTE       reduce using rule 103 (r_pop_ff -> .)
    AND             reduce using rule 103 (r_pop_ff -> .)
    OR              reduce using rule 103 (r_pop_ff -> .)
    PARENT_C        reduce using rule 103 (r_pop_ff -> .)
    COMA            reduce using rule 103 (r_pop_ff -> .)
    PUNTOCOMA       reduce using rule 103 (r_pop_ff -> .)
    CORCHETE_C      reduce using rule 103 (r_pop_ff -> .)
    HASTA           reduce using rule 103 (r_pop_ff -> .)
    HACER           reduce using rule 103 (r_pop_ff -> .)

    r_pop_ff                       shift and go to state 212

state 196

    (70) expresion -> t_expresion r_generate_quad_or OR r_push_oper . expresion
    (69) expresion -> . t_expresion r_generate_quad_or
    (70) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (72) t_expresion -> . g_expresion r_generate_quad_and
    (73) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (75) g_expresion -> . m_expresion r_generate_quad_logicos
    (76) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    t_expresion                    shift and go to state 105
    expresion                      shift and go to state 213
    g_expresion                    shift and go to state 106
    m_expresion                    shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 197

    (73) t_expresion -> g_expresion r_generate_quad_and AND r_push_oper . t_expresion
    (72) t_expresion -> . g_expresion r_generate_quad_and
    (73) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (75) g_expresion -> . m_expresion r_generate_quad_logicos
    (76) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    g_expresion                    shift and go to state 106
    t_expresion                    shift and go to state 214
    m_expresion                    shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 198

    (76) g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .

    AND             reduce using rule 76 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    OR              reduce using rule 76 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    PARENT_C        reduce using rule 76 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    COMA            reduce using rule 76 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    PUNTOCOMA       reduce using rule 76 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    CORCHETE_C      reduce using rule 76 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    HASTA           reduce using rule 76 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    HACER           reduce using rule 76 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)


state 199

    (85) m_expresion -> termino r_generate_quad_masmen MAS r_push_oper . m_expresion
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    termino                        shift and go to state 108
    m_expresion                    shift and go to state 215
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 200

    (86) m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper . m_expresion
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    termino                        shift and go to state 108
    m_expresion                    shift and go to state 216
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 201

    (88) termino -> factor r_generate_quad_muldiv POR r_push_oper . termino
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    factor                         shift and go to state 109
    termino                        shift and go to state 217
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 202

    (89) termino -> factor r_generate_quad_muldiv DIV r_push_oper . termino
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    factor                         shift and go to state 109
    termino                        shift and go to state 218
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 203

    (61) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos . PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos . expresiones PARENT_C r_generate_gosub_dos
    (65) expresiones -> . expresion r_generate_parameter
    (66) expresiones -> . expresion r_generate_parameter COMA r_act_param_count expresiones
    (69) expresion -> . t_expresion r_generate_quad_or
    (70) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (72) t_expresion -> . g_expresion r_generate_quad_and
    (73) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (75) g_expresion -> . m_expresion r_generate_quad_logicos
    (76) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_C        shift and go to state 219
    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    expresiones                    shift and go to state 220
    expresion                      shift and go to state 167
    t_expresion                    shift and go to state 105
    g_expresion                    shift and go to state 106
    m_expresion                    shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 204

    (25) variables -> variable r_generate_quad_leer COMA variables .

    PARENT_C        reduce using rule 25 (variables -> variable r_generate_quad_leer COMA variables .)


state 205

    (114) escr -> escritura_dos r_generate_quad_escr COMA escr .

    PARENT_C        reduce using rule 114 (escr -> escritura_dos r_generate_quad_escr COMA escr .)


state 206

    (121) else -> SINO LLAVE_A estatutos_dos LLAVE_C .

    ID              reduce using rule 121 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 121 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 121 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 121 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 121 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 121 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 121 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 121 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)


state 207

    (125) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for . HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for

    HASTA           shift and go to state 221


state 208

    (122) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type . HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while

    HAZ             shift and go to state 222


state 209

    (117) if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 223


state 210

    (57) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub .

    PUNTOCOMA       reduce using rule 57 (llamada -> ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub .)


state 211

    (66) expresiones -> expresion r_generate_parameter COMA . r_act_param_count expresiones
    (68) r_act_param_count -> .

    PARENT_A        reduce using rule 68 (r_act_param_count -> .)
    CTE_I           reduce using rule 68 (r_act_param_count -> .)
    CTE_F           reduce using rule 68 (r_act_param_count -> .)
    CTE_CH          reduce using rule 68 (r_act_param_count -> .)
    ID              reduce using rule 68 (r_act_param_count -> .)

    r_act_param_count              shift and go to state 224

state 212

    (93) factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .

    POR             reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    DIV             reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MAS             reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MENOS           reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MAYORQUE        reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MENORQUE        reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MAYORIGUAL      reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MENORIGUAL      reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    IGUALIGUAL      reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    DIFERENTE       reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    AND             reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    OR              reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    PARENT_C        reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    COMA            reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    PUNTOCOMA       reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    CORCHETE_C      reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    HASTA           reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    HACER           reduce using rule 93 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)


state 213

    (70) expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .

    PARENT_C        reduce using rule 70 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    COMA            reduce using rule 70 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    PUNTOCOMA       reduce using rule 70 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    CORCHETE_C      reduce using rule 70 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    HASTA           reduce using rule 70 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    HACER           reduce using rule 70 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)


state 214

    (73) t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .

    OR              reduce using rule 73 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    PARENT_C        reduce using rule 73 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    COMA            reduce using rule 73 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    PUNTOCOMA       reduce using rule 73 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    CORCHETE_C      reduce using rule 73 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    HASTA           reduce using rule 73 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    HACER           reduce using rule 73 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)


state 215

    (85) m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .

    MAYORQUE        reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    MENORQUE        reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    MAYORIGUAL      reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    MENORIGUAL      reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    IGUALIGUAL      reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    DIFERENTE       reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    AND             reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    OR              reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    PARENT_C        reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    COMA            reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    PUNTOCOMA       reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    CORCHETE_C      reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    HASTA           reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    HACER           reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)


state 216

    (86) m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .

    MAYORQUE        reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    MENORQUE        reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    MAYORIGUAL      reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    MENORIGUAL      reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    IGUALIGUAL      reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    DIFERENTE       reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    AND             reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    OR              reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    PARENT_C        reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    COMA            reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    PUNTOCOMA       reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    CORCHETE_C      reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    HASTA           reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    HACER           reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)


state 217

    (88) termino -> factor r_generate_quad_muldiv POR r_push_oper termino .

    MAS             reduce using rule 88 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MENOS           reduce using rule 88 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MAYORQUE        reduce using rule 88 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MENORQUE        reduce using rule 88 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MAYORIGUAL      reduce using rule 88 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MENORIGUAL      reduce using rule 88 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    IGUALIGUAL      reduce using rule 88 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    DIFERENTE       reduce using rule 88 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    AND             reduce using rule 88 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    OR              reduce using rule 88 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    PARENT_C        reduce using rule 88 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    COMA            reduce using rule 88 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    PUNTOCOMA       reduce using rule 88 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    CORCHETE_C      reduce using rule 88 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    HASTA           reduce using rule 88 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    HACER           reduce using rule 88 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)


state 218

    (89) termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .

    MAS             reduce using rule 89 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MENOS           reduce using rule 89 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MAYORQUE        reduce using rule 89 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MENORQUE        reduce using rule 89 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MAYORIGUAL      reduce using rule 89 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MENORIGUAL      reduce using rule 89 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    IGUALIGUAL      reduce using rule 89 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    DIFERENTE       reduce using rule 89 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    AND             reduce using rule 89 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    OR              reduce using rule 89 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    PARENT_C        reduce using rule 89 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    COMA            reduce using rule 89 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    PUNTOCOMA       reduce using rule 89 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    CORCHETE_C      reduce using rule 89 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    HASTA           reduce using rule 89 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    HACER           reduce using rule 89 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)


state 219

    (61) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C . r_generate_gosub_dos
    (64) r_generate_gosub_dos -> .

    POR             reduce using rule 64 (r_generate_gosub_dos -> .)
    DIV             reduce using rule 64 (r_generate_gosub_dos -> .)
    MAS             reduce using rule 64 (r_generate_gosub_dos -> .)
    MENOS           reduce using rule 64 (r_generate_gosub_dos -> .)
    MAYORQUE        reduce using rule 64 (r_generate_gosub_dos -> .)
    MENORQUE        reduce using rule 64 (r_generate_gosub_dos -> .)
    MAYORIGUAL      reduce using rule 64 (r_generate_gosub_dos -> .)
    MENORIGUAL      reduce using rule 64 (r_generate_gosub_dos -> .)
    IGUALIGUAL      reduce using rule 64 (r_generate_gosub_dos -> .)
    DIFERENTE       reduce using rule 64 (r_generate_gosub_dos -> .)
    AND             reduce using rule 64 (r_generate_gosub_dos -> .)
    OR              reduce using rule 64 (r_generate_gosub_dos -> .)
    PARENT_C        reduce using rule 64 (r_generate_gosub_dos -> .)
    COMA            reduce using rule 64 (r_generate_gosub_dos -> .)
    PUNTOCOMA       reduce using rule 64 (r_generate_gosub_dos -> .)
    CORCHETE_C      reduce using rule 64 (r_generate_gosub_dos -> .)
    HASTA           reduce using rule 64 (r_generate_gosub_dos -> .)
    HACER           reduce using rule 64 (r_generate_gosub_dos -> .)

    r_generate_gosub_dos           shift and go to state 225

state 220

    (62) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones . PARENT_C r_generate_gosub_dos

    PARENT_C        shift and go to state 226


state 221

    (125) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA . r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (124) r_save_jump -> .

    PARENT_A        reduce using rule 124 (r_save_jump -> .)
    CTE_I           reduce using rule 124 (r_save_jump -> .)
    CTE_F           reduce using rule 124 (r_save_jump -> .)
    CTE_CH          reduce using rule 124 (r_save_jump -> .)
    ID              reduce using rule 124 (r_save_jump -> .)

    r_save_jump                    shift and go to state 227

state 222

    (122) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ . LLAVE_A estatutos_dos LLAVE_C r_goto_while

    LLAVE_A         shift and go to state 228


state 223

    (117) if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A . estatutos_dos LLAVE_C
    (52) estatutos_dos -> . estatutos
    (53) estatutos_dos -> . estatutos estatutos_dos
    (44) estatutos -> . asignacion PUNTOCOMA
    (45) estatutos -> . llamada PUNTOCOMA
    (46) estatutos -> . retorno PUNTOCOMA
    (47) estatutos -> . lectura PUNTOCOMA
    (48) estatutos -> . escritura PUNTOCOMA
    (49) estatutos -> . decision
    (50) estatutos -> . ciclo_for
    (51) estatutos -> . ciclo_while
    (54) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (56) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (57) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (104) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (106) lectura -> . LEER PARENT_A variables PARENT_C
    (108) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (115) decision -> . if r_end_if
    (116) decision -> . if r_goto_ifelse else r_end_if
    (125) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (122) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (117) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 59
    REGRESA         shift and go to state 60
    LEER            shift and go to state 61
    ESCRIBIR        shift and go to state 62
    DESDE           shift and go to state 64
    MIENTRAS        shift and go to state 65
    SI              shift and go to state 66

    estatutos_dos                  shift and go to state 229
    estatutos                      shift and go to state 49
    asignacion                     shift and go to state 50
    llamada                        shift and go to state 51
    retorno                        shift and go to state 52
    lectura                        shift and go to state 53
    escritura                      shift and go to state 54
    decision                       shift and go to state 55
    ciclo_for                      shift and go to state 56
    ciclo_while                    shift and go to state 57
    variable                       shift and go to state 58
    if                             shift and go to state 63

state 224

    (66) expresiones -> expresion r_generate_parameter COMA r_act_param_count . expresiones
    (65) expresiones -> . expresion r_generate_parameter
    (66) expresiones -> . expresion r_generate_parameter COMA r_act_param_count expresiones
    (69) expresion -> . t_expresion r_generate_quad_or
    (70) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (72) t_expresion -> . g_expresion r_generate_quad_and
    (73) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (75) g_expresion -> . m_expresion r_generate_quad_logicos
    (76) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    expresion                      shift and go to state 167
    expresiones                    shift and go to state 230
    t_expresion                    shift and go to state 105
    g_expresion                    shift and go to state 106
    m_expresion                    shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 225

    (61) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .

    POR             reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    DIV             reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MAS             reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MENOS           reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MAYORQUE        reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MENORQUE        reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MAYORIGUAL      reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MENORIGUAL      reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    IGUALIGUAL      reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    DIFERENTE       reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    AND             reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    OR              reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    PARENT_C        reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    COMA            reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    PUNTOCOMA       reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    CORCHETE_C      reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    HASTA           reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    HACER           reduce using rule 61 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)


state 226

    (62) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C . r_generate_gosub_dos
    (64) r_generate_gosub_dos -> .

    POR             reduce using rule 64 (r_generate_gosub_dos -> .)
    DIV             reduce using rule 64 (r_generate_gosub_dos -> .)
    MAS             reduce using rule 64 (r_generate_gosub_dos -> .)
    MENOS           reduce using rule 64 (r_generate_gosub_dos -> .)
    MAYORQUE        reduce using rule 64 (r_generate_gosub_dos -> .)
    MENORQUE        reduce using rule 64 (r_generate_gosub_dos -> .)
    MAYORIGUAL      reduce using rule 64 (r_generate_gosub_dos -> .)
    MENORIGUAL      reduce using rule 64 (r_generate_gosub_dos -> .)
    IGUALIGUAL      reduce using rule 64 (r_generate_gosub_dos -> .)
    DIFERENTE       reduce using rule 64 (r_generate_gosub_dos -> .)
    AND             reduce using rule 64 (r_generate_gosub_dos -> .)
    OR              reduce using rule 64 (r_generate_gosub_dos -> .)
    PARENT_C        reduce using rule 64 (r_generate_gosub_dos -> .)
    COMA            reduce using rule 64 (r_generate_gosub_dos -> .)
    PUNTOCOMA       reduce using rule 64 (r_generate_gosub_dos -> .)
    CORCHETE_C      reduce using rule 64 (r_generate_gosub_dos -> .)
    HASTA           reduce using rule 64 (r_generate_gosub_dos -> .)
    HACER           reduce using rule 64 (r_generate_gosub_dos -> .)

    r_generate_gosub_dos           shift and go to state 231

state 227

    (125) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump . r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (126) r_expresion_for -> .

    PARENT_A        reduce using rule 126 (r_expresion_for -> .)
    CTE_I           reduce using rule 126 (r_expresion_for -> .)
    CTE_F           reduce using rule 126 (r_expresion_for -> .)
    CTE_CH          reduce using rule 126 (r_expresion_for -> .)
    ID              reduce using rule 126 (r_expresion_for -> .)

    r_expresion_for                shift and go to state 232

state 228

    (122) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A . estatutos_dos LLAVE_C r_goto_while
    (52) estatutos_dos -> . estatutos
    (53) estatutos_dos -> . estatutos estatutos_dos
    (44) estatutos -> . asignacion PUNTOCOMA
    (45) estatutos -> . llamada PUNTOCOMA
    (46) estatutos -> . retorno PUNTOCOMA
    (47) estatutos -> . lectura PUNTOCOMA
    (48) estatutos -> . escritura PUNTOCOMA
    (49) estatutos -> . decision
    (50) estatutos -> . ciclo_for
    (51) estatutos -> . ciclo_while
    (54) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (56) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (57) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (104) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (106) lectura -> . LEER PARENT_A variables PARENT_C
    (108) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (115) decision -> . if r_end_if
    (116) decision -> . if r_goto_ifelse else r_end_if
    (125) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (122) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (117) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 59
    REGRESA         shift and go to state 60
    LEER            shift and go to state 61
    ESCRIBIR        shift and go to state 62
    DESDE           shift and go to state 64
    MIENTRAS        shift and go to state 65
    SI              shift and go to state 66

    estatutos_dos                  shift and go to state 233
    estatutos                      shift and go to state 49
    asignacion                     shift and go to state 50
    llamada                        shift and go to state 51
    retorno                        shift and go to state 52
    lectura                        shift and go to state 53
    escritura                      shift and go to state 54
    decision                       shift and go to state 55
    ciclo_for                      shift and go to state 56
    ciclo_while                    shift and go to state 57
    variable                       shift and go to state 58
    if                             shift and go to state 63

state 229

    (117) if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 234


state 230

    (66) expresiones -> expresion r_generate_parameter COMA r_act_param_count expresiones .

    PARENT_C        reduce using rule 66 (expresiones -> expresion r_generate_parameter COMA r_act_param_count expresiones .)


state 231

    (62) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .

    POR             reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    DIV             reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MAS             reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MENOS           reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MAYORQUE        reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MENORQUE        reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MAYORIGUAL      reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MENORIGUAL      reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    IGUALIGUAL      reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    DIFERENTE       reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    AND             reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    OR              reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    PARENT_C        reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    COMA            reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    PUNTOCOMA       reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    CORCHETE_C      reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    HASTA           reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    HACER           reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)


state 232

    (125) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for . expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (69) expresion -> . t_expresion r_generate_quad_or
    (70) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (72) t_expresion -> . g_expresion r_generate_quad_and
    (73) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (75) g_expresion -> . m_expresion r_generate_quad_logicos
    (76) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (84) m_expresion -> . termino r_generate_quad_masmen
    (85) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (86) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (87) termino -> . factor r_generate_quad_muldiv
    (88) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (89) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (93) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (94) factor -> . CTE_I r_push_cte_i
    (95) factor -> . CTE_F r_push_cte_f
    (96) factor -> . CTE_CH r_push_cte_c
    (97) factor -> . variable
    (98) factor -> . llamada_exp
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (61) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 103
    CTE_I           shift and go to state 110
    CTE_F           shift and go to state 111
    CTE_CH          shift and go to state 112
    ID              shift and go to state 115

    expresion                      shift and go to state 235
    t_expresion                    shift and go to state 105
    g_expresion                    shift and go to state 106
    m_expresion                    shift and go to state 107
    termino                        shift and go to state 108
    factor                         shift and go to state 109
    variable                       shift and go to state 113
    llamada_exp                    shift and go to state 114

state 233

    (122) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos . LLAVE_C r_goto_while

    LLAVE_C         shift and go to state 236


state 234

    (117) if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .

    SINO            reduce using rule 117 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    ID              reduce using rule 117 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 117 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 117 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 117 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 117 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 117 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 117 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 117 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)


state 235

    (125) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion . r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (129) r_check_exp_for -> .

    HACER           reduce using rule 129 (r_check_exp_for -> .)

    r_check_exp_for                shift and go to state 237

state 236

    (122) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C . r_goto_while
    (123) r_goto_while -> .

    ID              reduce using rule 123 (r_goto_while -> .)
    REGRESA         reduce using rule 123 (r_goto_while -> .)
    LEER            reduce using rule 123 (r_goto_while -> .)
    ESCRIBIR        reduce using rule 123 (r_goto_while -> .)
    DESDE           reduce using rule 123 (r_goto_while -> .)
    MIENTRAS        reduce using rule 123 (r_goto_while -> .)
    SI              reduce using rule 123 (r_goto_while -> .)
    LLAVE_C         reduce using rule 123 (r_goto_while -> .)

    r_goto_while                   shift and go to state 238

state 237

    (125) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for . HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for

    HACER           shift and go to state 239


state 238

    (122) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .

    ID              reduce using rule 122 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    REGRESA         reduce using rule 122 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    LEER            reduce using rule 122 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    ESCRIBIR        reduce using rule 122 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    DESDE           reduce using rule 122 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    MIENTRAS        reduce using rule 122 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    SI              reduce using rule 122 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    LLAVE_C         reduce using rule 122 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)


state 239

    (125) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER . LLAVE_A estatutos_dos LLAVE_C r_goto_for

    LLAVE_A         shift and go to state 240


state 240

    (125) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A . estatutos_dos LLAVE_C r_goto_for
    (52) estatutos_dos -> . estatutos
    (53) estatutos_dos -> . estatutos estatutos_dos
    (44) estatutos -> . asignacion PUNTOCOMA
    (45) estatutos -> . llamada PUNTOCOMA
    (46) estatutos -> . retorno PUNTOCOMA
    (47) estatutos -> . lectura PUNTOCOMA
    (48) estatutos -> . escritura PUNTOCOMA
    (49) estatutos -> . decision
    (50) estatutos -> . ciclo_for
    (51) estatutos -> . ciclo_while
    (54) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (56) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (57) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (104) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (106) lectura -> . LEER PARENT_A variables PARENT_C
    (108) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (115) decision -> . if r_end_if
    (116) decision -> . if r_goto_ifelse else r_end_if
    (125) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (122) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (21) variable -> . ID r_push_id
    (22) variable -> . ID r_push_id dim
    (117) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 59
    REGRESA         shift and go to state 60
    LEER            shift and go to state 61
    ESCRIBIR        shift and go to state 62
    DESDE           shift and go to state 64
    MIENTRAS        shift and go to state 65
    SI              shift and go to state 66

    estatutos_dos                  shift and go to state 241
    estatutos                      shift and go to state 49
    asignacion                     shift and go to state 50
    llamada                        shift and go to state 51
    retorno                        shift and go to state 52
    lectura                        shift and go to state 53
    escritura                      shift and go to state 54
    decision                       shift and go to state 55
    ciclo_for                      shift and go to state 56
    ciclo_while                    shift and go to state 57
    variable                       shift and go to state 58
    if                             shift and go to state 63

state 241

    (125) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos . LLAVE_C r_goto_for

    LLAVE_C         shift and go to state 242


state 242

    (125) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C . r_goto_for
    (130) r_goto_for -> .

    ID              reduce using rule 130 (r_goto_for -> .)
    REGRESA         reduce using rule 130 (r_goto_for -> .)
    LEER            reduce using rule 130 (r_goto_for -> .)
    ESCRIBIR        reduce using rule 130 (r_goto_for -> .)
    DESDE           reduce using rule 130 (r_goto_for -> .)
    MIENTRAS        reduce using rule 130 (r_goto_for -> .)
    SI              reduce using rule 130 (r_goto_for -> .)
    LLAVE_C         reduce using rule 130 (r_goto_for -> .)

    r_goto_for                     shift and go to state 243

state 243

    (125) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .

    ID              reduce using rule 125 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    REGRESA         reduce using rule 125 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    LEER            reduce using rule 125 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    ESCRIBIR        reduce using rule 125 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    DESDE           reduce using rule 125 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    MIENTRAS        reduce using rule 125 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    SI              reduce using rule 125 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    LLAVE_C         reduce using rule 125 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)

