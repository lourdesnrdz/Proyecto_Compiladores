Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID PUNTOCOMA prog
Rule 2     prog -> main
Rule 3     prog -> dec_vars dec_funciones main
Rule 4     prog -> dec_vars main
Rule 5     prog -> dec_funciones main
Rule 6     main -> PRINCIPAL PARENT_A PARENT_C LLAVE_A LLAVE_C
Rule 7     main -> PRINCIPAL PARENT_A PARENT_C LLAVE_A estatutos_dos LLAVE_C
Rule 8     dec_vars -> VAR vars
Rule 9     vars -> tipo_simple ids_simple PUNTOCOMA
Rule 10    vars -> tipo_simple ids_simple PUNTOCOMA vars
Rule 11    tipo_simple -> INT
Rule 12    tipo_simple -> FLOAT
Rule 13    tipo_simple -> CHAR
Rule 14    ids_simple -> ID
Rule 15    ids_simple -> ID dimension
Rule 16    ids_simple -> ID COMA ids_simple
Rule 17    ids_simple -> ID dimension COMA ids_simple
Rule 18    dimension -> CORCHETE_A CTE_I CORCHETE_C
Rule 19    variable -> ID
Rule 20    variable -> ID dim
Rule 21    variables -> variable
Rule 22    variables -> variable COMA variables
Rule 23    dim -> CORCHETE_A expresion CORCHETE_C
Rule 24    dec_funciones -> funcion
Rule 25    dec_funciones -> funcion dec_funciones
Rule 26    funcion -> FUNCION tipo_simple ID func_dos
Rule 27    funcion -> FUNCION VOID ID func_dos
Rule 28    func_dos -> PARENT_A PARENT_C var_funcs
Rule 29    func_dos -> PARENT_A parametros PARENT_C var_funcs
Rule 30    var_funcs -> dec_est
Rule 31    var_funcs -> dec_vars dec_est
Rule 32    parametros -> tipo_simple variable
Rule 33    parametros -> tipo_simple variable COMA parametros
Rule 34    dec_est -> LLAVE_A LLAVE_C
Rule 35    dec_est -> LLAVE_A estatutos_dos LLAVE_C
Rule 36    estatutos -> asignacion PUNTOCOMA
Rule 37    estatutos -> llamada PUNTOCOMA
Rule 38    estatutos -> retorno PUNTOCOMA
Rule 39    estatutos -> lectura PUNTOCOMA
Rule 40    estatutos -> escritura PUNTOCOMA
Rule 41    estatutos -> decision
Rule 42    estatutos -> ciclo_for
Rule 43    estatutos -> ciclo_while
Rule 44    estatutos_dos -> estatutos
Rule 45    estatutos_dos -> estatutos estatutos_dos
Rule 46    asignacion -> variable IGUAL expresion
Rule 47    llamada -> ID PARENT_A PARENT_C
Rule 48    llamada -> ID PARENT_A expresiones PARENT_C
Rule 49    expresiones -> expresion
Rule 50    expresiones -> expresion COMA expresion
Rule 51    expresion -> t_expresion
Rule 52    expresion -> t_expresion OR expresion
Rule 53    t_expresion -> g_expresion
Rule 54    t_expresion -> g_expresion AND t_expresion
Rule 55    g_expresion -> m_expresion
Rule 56    g_expresion -> m_expresion op_logicos m_expresion
Rule 57    op_logicos -> MAYORQUE
Rule 58    op_logicos -> MENORQUE
Rule 59    op_logicos -> MAYORIGUAL
Rule 60    op_logicos -> MENORIGUAL
Rule 61    op_logicos -> IGUALIGUAL
Rule 62    op_logicos -> DIFERENTE
Rule 63    m_expresion -> termino
Rule 64    m_expresion -> termino MAS m_expresion
Rule 65    m_expresion -> termino MENOS m_expresion
Rule 66    termino -> factor
Rule 67    termino -> factor POR termino
Rule 68    termino -> factor DIV termino
Rule 69    factor -> PARENT_A expresion PARENT_C
Rule 70    factor -> CTE_I
Rule 71    factor -> CTE_F
Rule 72    factor -> CTE_CH
Rule 73    factor -> variable
Rule 74    factor -> llamada
Rule 75    retorno -> REGRESA PARENT_A expresion PARENT_C
Rule 76    lectura -> LEER PARENT_A variables PARENT_C
Rule 77    escritura -> ESCRIBIR PARENT_A escr PARENT_C
Rule 78    escritura_dos -> CTE_STR
Rule 79    escritura_dos -> expresion
Rule 80    escr -> escritura_dos
Rule 81    escr -> escritura_dos COMA escr
Rule 82    decision -> if
Rule 83    decision -> if else
Rule 84    if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C
Rule 85    else -> SINO LLAVE_A estatutos_dos LLAVE_C
Rule 86    ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
Rule 87    ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C

Terminals, with rules where they appear

AND                  : 54
CHAR                 : 13
COMA                 : 16 17 22 33 50 81
CORCHETE_A           : 18 23
CORCHETE_C           : 18 23
CTE_CH               : 72
CTE_F                : 71
CTE_I                : 18 70
CTE_STR              : 78
DESDE                : 87
DIFERENTE            : 62
DIV                  : 68
ENTONCES             : 84
ESCRIBIR             : 77
FLOAT                : 12
FUNCION              : 26 27
HACER                : 87
HASTA                : 87
HAZ                  : 86
ID                   : 1 14 15 16 17 19 20 26 27 47 48
IGUAL                : 46 87
IGUALIGUAL           : 61
INT                  : 11
LEER                 : 76
LLAVE_A              : 6 7 34 35 84 85 86 87
LLAVE_C              : 6 7 34 35 84 85 86 87
MAS                  : 64
MAYORIGUAL           : 59
MAYORQUE             : 57
MENORIGUAL           : 60
MENORQUE             : 58
MENOS                : 65
MIENTRAS             : 86
OR                   : 52
PARENT_A             : 6 7 28 29 47 48 69 75 76 77 84 86
PARENT_C             : 6 7 28 29 47 48 69 75 76 77 84 86
POR                  : 67
PRINCIPAL            : 6 7
PROGRAMA             : 1
PUNTOCOMA            : 1 9 10 36 37 38 39 40
REGRESA              : 75
SI                   : 84
SINO                 : 85
VAR                  : 8
VOID                 : 27
error                : 

Nonterminals, with rules where they appear

asignacion           : 36
ciclo_for            : 42
ciclo_while          : 43
dec_est              : 30 31
dec_funciones        : 3 5 25
dec_vars             : 3 4 31
decision             : 41
dim                  : 20
dimension            : 15 17
else                 : 83
escr                 : 77 81
escritura            : 40
escritura_dos        : 80 81
estatutos            : 44 45
estatutos_dos        : 7 35 45 84 85 86 87
expresion            : 23 46 49 50 50 52 69 75 79 84 86 87 87
expresiones          : 48
factor               : 66 67 68
func_dos             : 26 27
funcion              : 24 25
g_expresion          : 53 54
ids_simple           : 9 10 16 17
if                   : 82 83
lectura              : 39
llamada              : 37 74
m_expresion          : 55 56 56 64 65
main                 : 2 3 4 5
op_logicos           : 56
parametros           : 29 33
prog                 : 1
programa             : 0
retorno              : 38
t_expresion          : 51 52 54
termino              : 63 64 65 67 68
tipo_simple          : 9 10 26 32 33
var_funcs            : 28 29
variable             : 21 22 32 33 46 73 87
variables            : 22 76
vars                 : 8 10

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID PUNTOCOMA prog

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID PUNTOCOMA prog

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . PUNTOCOMA prog

    PUNTOCOMA       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID PUNTOCOMA . prog
    (2) prog -> . main
    (3) prog -> . dec_vars dec_funciones main
    (4) prog -> . dec_vars main
    (5) prog -> . dec_funciones main
    (6) main -> . PRINCIPAL PARENT_A PARENT_C LLAVE_A LLAVE_C
    (7) main -> . PRINCIPAL PARENT_A PARENT_C LLAVE_A estatutos_dos LLAVE_C
    (8) dec_vars -> . VAR vars
    (24) dec_funciones -> . funcion
    (25) dec_funciones -> . funcion dec_funciones
    (26) funcion -> . FUNCION tipo_simple ID func_dos
    (27) funcion -> . FUNCION VOID ID func_dos

    PRINCIPAL       shift and go to state 9
    VAR             shift and go to state 10
    FUNCION         shift and go to state 12

    prog                           shift and go to state 5
    main                           shift and go to state 6
    dec_vars                       shift and go to state 7
    dec_funciones                  shift and go to state 8
    funcion                        shift and go to state 11

state 5

    (1) programa -> PROGRAMA ID PUNTOCOMA prog .

    $end            reduce using rule 1 (programa -> PROGRAMA ID PUNTOCOMA prog .)


state 6

    (2) prog -> main .

    $end            reduce using rule 2 (prog -> main .)


state 7

    (3) prog -> dec_vars . dec_funciones main
    (4) prog -> dec_vars . main
    (24) dec_funciones -> . funcion
    (25) dec_funciones -> . funcion dec_funciones
    (6) main -> . PRINCIPAL PARENT_A PARENT_C LLAVE_A LLAVE_C
    (7) main -> . PRINCIPAL PARENT_A PARENT_C LLAVE_A estatutos_dos LLAVE_C
    (26) funcion -> . FUNCION tipo_simple ID func_dos
    (27) funcion -> . FUNCION VOID ID func_dos

    PRINCIPAL       shift and go to state 9
    FUNCION         shift and go to state 12

    dec_funciones                  shift and go to state 13
    main                           shift and go to state 14
    funcion                        shift and go to state 11

state 8

    (5) prog -> dec_funciones . main
    (6) main -> . PRINCIPAL PARENT_A PARENT_C LLAVE_A LLAVE_C
    (7) main -> . PRINCIPAL PARENT_A PARENT_C LLAVE_A estatutos_dos LLAVE_C

    PRINCIPAL       shift and go to state 9

    main                           shift and go to state 15

state 9

    (6) main -> PRINCIPAL . PARENT_A PARENT_C LLAVE_A LLAVE_C
    (7) main -> PRINCIPAL . PARENT_A PARENT_C LLAVE_A estatutos_dos LLAVE_C

    PARENT_A        shift and go to state 16


state 10

    (8) dec_vars -> VAR . vars
    (9) vars -> . tipo_simple ids_simple PUNTOCOMA
    (10) vars -> . tipo_simple ids_simple PUNTOCOMA vars
    (11) tipo_simple -> . INT
    (12) tipo_simple -> . FLOAT
    (13) tipo_simple -> . CHAR

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    vars                           shift and go to state 17
    tipo_simple                    shift and go to state 18

state 11

    (24) dec_funciones -> funcion .
    (25) dec_funciones -> funcion . dec_funciones
    (24) dec_funciones -> . funcion
    (25) dec_funciones -> . funcion dec_funciones
    (26) funcion -> . FUNCION tipo_simple ID func_dos
    (27) funcion -> . FUNCION VOID ID func_dos

    PRINCIPAL       reduce using rule 24 (dec_funciones -> funcion .)
    FUNCION         shift and go to state 12

    funcion                        shift and go to state 11
    dec_funciones                  shift and go to state 22

state 12

    (26) funcion -> FUNCION . tipo_simple ID func_dos
    (27) funcion -> FUNCION . VOID ID func_dos
    (11) tipo_simple -> . INT
    (12) tipo_simple -> . FLOAT
    (13) tipo_simple -> . CHAR

    VOID            shift and go to state 24
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    tipo_simple                    shift and go to state 23

state 13

    (3) prog -> dec_vars dec_funciones . main
    (6) main -> . PRINCIPAL PARENT_A PARENT_C LLAVE_A LLAVE_C
    (7) main -> . PRINCIPAL PARENT_A PARENT_C LLAVE_A estatutos_dos LLAVE_C

    PRINCIPAL       shift and go to state 9

    main                           shift and go to state 25

state 14

    (4) prog -> dec_vars main .

    $end            reduce using rule 4 (prog -> dec_vars main .)


state 15

    (5) prog -> dec_funciones main .

    $end            reduce using rule 5 (prog -> dec_funciones main .)


state 16

    (6) main -> PRINCIPAL PARENT_A . PARENT_C LLAVE_A LLAVE_C
    (7) main -> PRINCIPAL PARENT_A . PARENT_C LLAVE_A estatutos_dos LLAVE_C

    PARENT_C        shift and go to state 26


state 17

    (8) dec_vars -> VAR vars .

    PRINCIPAL       reduce using rule 8 (dec_vars -> VAR vars .)
    FUNCION         reduce using rule 8 (dec_vars -> VAR vars .)
    LLAVE_A         reduce using rule 8 (dec_vars -> VAR vars .)


state 18

    (9) vars -> tipo_simple . ids_simple PUNTOCOMA
    (10) vars -> tipo_simple . ids_simple PUNTOCOMA vars
    (14) ids_simple -> . ID
    (15) ids_simple -> . ID dimension
    (16) ids_simple -> . ID COMA ids_simple
    (17) ids_simple -> . ID dimension COMA ids_simple

    ID              shift and go to state 28

    ids_simple                     shift and go to state 27

state 19

    (11) tipo_simple -> INT .

    ID              reduce using rule 11 (tipo_simple -> INT .)


state 20

    (12) tipo_simple -> FLOAT .

    ID              reduce using rule 12 (tipo_simple -> FLOAT .)


state 21

    (13) tipo_simple -> CHAR .

    ID              reduce using rule 13 (tipo_simple -> CHAR .)


state 22

    (25) dec_funciones -> funcion dec_funciones .

    PRINCIPAL       reduce using rule 25 (dec_funciones -> funcion dec_funciones .)


state 23

    (26) funcion -> FUNCION tipo_simple . ID func_dos

    ID              shift and go to state 29


state 24

    (27) funcion -> FUNCION VOID . ID func_dos

    ID              shift and go to state 30


state 25

    (3) prog -> dec_vars dec_funciones main .

    $end            reduce using rule 3 (prog -> dec_vars dec_funciones main .)


state 26

    (6) main -> PRINCIPAL PARENT_A PARENT_C . LLAVE_A LLAVE_C
    (7) main -> PRINCIPAL PARENT_A PARENT_C . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 31


state 27

    (9) vars -> tipo_simple ids_simple . PUNTOCOMA
    (10) vars -> tipo_simple ids_simple . PUNTOCOMA vars

    PUNTOCOMA       shift and go to state 32


state 28

    (14) ids_simple -> ID .
    (15) ids_simple -> ID . dimension
    (16) ids_simple -> ID . COMA ids_simple
    (17) ids_simple -> ID . dimension COMA ids_simple
    (18) dimension -> . CORCHETE_A CTE_I CORCHETE_C

    PUNTOCOMA       reduce using rule 14 (ids_simple -> ID .)
    COMA            shift and go to state 34
    CORCHETE_A      shift and go to state 35

    dimension                      shift and go to state 33

state 29

    (26) funcion -> FUNCION tipo_simple ID . func_dos
    (28) func_dos -> . PARENT_A PARENT_C var_funcs
    (29) func_dos -> . PARENT_A parametros PARENT_C var_funcs

    PARENT_A        shift and go to state 37

    func_dos                       shift and go to state 36

state 30

    (27) funcion -> FUNCION VOID ID . func_dos
    (28) func_dos -> . PARENT_A PARENT_C var_funcs
    (29) func_dos -> . PARENT_A parametros PARENT_C var_funcs

    PARENT_A        shift and go to state 37

    func_dos                       shift and go to state 38

state 31

    (6) main -> PRINCIPAL PARENT_A PARENT_C LLAVE_A . LLAVE_C
    (7) main -> PRINCIPAL PARENT_A PARENT_C LLAVE_A . estatutos_dos LLAVE_C
    (44) estatutos_dos -> . estatutos
    (45) estatutos_dos -> . estatutos estatutos_dos
    (36) estatutos -> . asignacion PUNTOCOMA
    (37) estatutos -> . llamada PUNTOCOMA
    (38) estatutos -> . retorno PUNTOCOMA
    (39) estatutos -> . lectura PUNTOCOMA
    (40) estatutos -> . escritura PUNTOCOMA
    (41) estatutos -> . decision
    (42) estatutos -> . ciclo_for
    (43) estatutos -> . ciclo_while
    (46) asignacion -> . variable IGUAL expresion
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C
    (75) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (76) lectura -> . LEER PARENT_A variables PARENT_C
    (77) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (82) decision -> . if
    (83) decision -> . if else
    (87) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (86) ciclo_while -> . MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
    (19) variable -> . ID
    (20) variable -> . ID dim
    (84) if -> . SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    LLAVE_C         shift and go to state 39
    ID              shift and go to state 51
    REGRESA         shift and go to state 52
    LEER            shift and go to state 53
    ESCRIBIR        shift and go to state 54
    DESDE           shift and go to state 56
    MIENTRAS        shift and go to state 57
    SI              shift and go to state 58

    estatutos_dos                  shift and go to state 40
    estatutos                      shift and go to state 41
    asignacion                     shift and go to state 42
    llamada                        shift and go to state 43
    retorno                        shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    decision                       shift and go to state 47
    ciclo_for                      shift and go to state 48
    ciclo_while                    shift and go to state 49
    variable                       shift and go to state 50
    if                             shift and go to state 55

state 32

    (9) vars -> tipo_simple ids_simple PUNTOCOMA .
    (10) vars -> tipo_simple ids_simple PUNTOCOMA . vars
    (9) vars -> . tipo_simple ids_simple PUNTOCOMA
    (10) vars -> . tipo_simple ids_simple PUNTOCOMA vars
    (11) tipo_simple -> . INT
    (12) tipo_simple -> . FLOAT
    (13) tipo_simple -> . CHAR

    PRINCIPAL       reduce using rule 9 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    FUNCION         reduce using rule 9 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    LLAVE_A         reduce using rule 9 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    tipo_simple                    shift and go to state 18
    vars                           shift and go to state 59

state 33

    (15) ids_simple -> ID dimension .
    (17) ids_simple -> ID dimension . COMA ids_simple

    PUNTOCOMA       reduce using rule 15 (ids_simple -> ID dimension .)
    COMA            shift and go to state 60


state 34

    (16) ids_simple -> ID COMA . ids_simple
    (14) ids_simple -> . ID
    (15) ids_simple -> . ID dimension
    (16) ids_simple -> . ID COMA ids_simple
    (17) ids_simple -> . ID dimension COMA ids_simple

    ID              shift and go to state 28

    ids_simple                     shift and go to state 61

state 35

    (18) dimension -> CORCHETE_A . CTE_I CORCHETE_C

    CTE_I           shift and go to state 62


state 36

    (26) funcion -> FUNCION tipo_simple ID func_dos .

    FUNCION         reduce using rule 26 (funcion -> FUNCION tipo_simple ID func_dos .)
    PRINCIPAL       reduce using rule 26 (funcion -> FUNCION tipo_simple ID func_dos .)


state 37

    (28) func_dos -> PARENT_A . PARENT_C var_funcs
    (29) func_dos -> PARENT_A . parametros PARENT_C var_funcs
    (32) parametros -> . tipo_simple variable
    (33) parametros -> . tipo_simple variable COMA parametros
    (11) tipo_simple -> . INT
    (12) tipo_simple -> . FLOAT
    (13) tipo_simple -> . CHAR

    PARENT_C        shift and go to state 63
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    parametros                     shift and go to state 64
    tipo_simple                    shift and go to state 65

state 38

    (27) funcion -> FUNCION VOID ID func_dos .

    FUNCION         reduce using rule 27 (funcion -> FUNCION VOID ID func_dos .)
    PRINCIPAL       reduce using rule 27 (funcion -> FUNCION VOID ID func_dos .)


state 39

    (6) main -> PRINCIPAL PARENT_A PARENT_C LLAVE_A LLAVE_C .

    $end            reduce using rule 6 (main -> PRINCIPAL PARENT_A PARENT_C LLAVE_A LLAVE_C .)


state 40

    (7) main -> PRINCIPAL PARENT_A PARENT_C LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 66


state 41

    (44) estatutos_dos -> estatutos .
    (45) estatutos_dos -> estatutos . estatutos_dos
    (44) estatutos_dos -> . estatutos
    (45) estatutos_dos -> . estatutos estatutos_dos
    (36) estatutos -> . asignacion PUNTOCOMA
    (37) estatutos -> . llamada PUNTOCOMA
    (38) estatutos -> . retorno PUNTOCOMA
    (39) estatutos -> . lectura PUNTOCOMA
    (40) estatutos -> . escritura PUNTOCOMA
    (41) estatutos -> . decision
    (42) estatutos -> . ciclo_for
    (43) estatutos -> . ciclo_while
    (46) asignacion -> . variable IGUAL expresion
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C
    (75) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (76) lectura -> . LEER PARENT_A variables PARENT_C
    (77) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (82) decision -> . if
    (83) decision -> . if else
    (87) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (86) ciclo_while -> . MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
    (19) variable -> . ID
    (20) variable -> . ID dim
    (84) if -> . SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    LLAVE_C         reduce using rule 44 (estatutos_dos -> estatutos .)
    ID              shift and go to state 51
    REGRESA         shift and go to state 52
    LEER            shift and go to state 53
    ESCRIBIR        shift and go to state 54
    DESDE           shift and go to state 56
    MIENTRAS        shift and go to state 57
    SI              shift and go to state 58

    estatutos                      shift and go to state 41
    estatutos_dos                  shift and go to state 67
    asignacion                     shift and go to state 42
    llamada                        shift and go to state 43
    retorno                        shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    decision                       shift and go to state 47
    ciclo_for                      shift and go to state 48
    ciclo_while                    shift and go to state 49
    variable                       shift and go to state 50
    if                             shift and go to state 55

state 42

    (36) estatutos -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 68


state 43

    (37) estatutos -> llamada . PUNTOCOMA

    PUNTOCOMA       shift and go to state 69


state 44

    (38) estatutos -> retorno . PUNTOCOMA

    PUNTOCOMA       shift and go to state 70


state 45

    (39) estatutos -> lectura . PUNTOCOMA

    PUNTOCOMA       shift and go to state 71


state 46

    (40) estatutos -> escritura . PUNTOCOMA

    PUNTOCOMA       shift and go to state 72


state 47

    (41) estatutos -> decision .

    ID              reduce using rule 41 (estatutos -> decision .)
    REGRESA         reduce using rule 41 (estatutos -> decision .)
    LEER            reduce using rule 41 (estatutos -> decision .)
    ESCRIBIR        reduce using rule 41 (estatutos -> decision .)
    DESDE           reduce using rule 41 (estatutos -> decision .)
    MIENTRAS        reduce using rule 41 (estatutos -> decision .)
    SI              reduce using rule 41 (estatutos -> decision .)
    LLAVE_C         reduce using rule 41 (estatutos -> decision .)


state 48

    (42) estatutos -> ciclo_for .

    ID              reduce using rule 42 (estatutos -> ciclo_for .)
    REGRESA         reduce using rule 42 (estatutos -> ciclo_for .)
    LEER            reduce using rule 42 (estatutos -> ciclo_for .)
    ESCRIBIR        reduce using rule 42 (estatutos -> ciclo_for .)
    DESDE           reduce using rule 42 (estatutos -> ciclo_for .)
    MIENTRAS        reduce using rule 42 (estatutos -> ciclo_for .)
    SI              reduce using rule 42 (estatutos -> ciclo_for .)
    LLAVE_C         reduce using rule 42 (estatutos -> ciclo_for .)


state 49

    (43) estatutos -> ciclo_while .

    ID              reduce using rule 43 (estatutos -> ciclo_while .)
    REGRESA         reduce using rule 43 (estatutos -> ciclo_while .)
    LEER            reduce using rule 43 (estatutos -> ciclo_while .)
    ESCRIBIR        reduce using rule 43 (estatutos -> ciclo_while .)
    DESDE           reduce using rule 43 (estatutos -> ciclo_while .)
    MIENTRAS        reduce using rule 43 (estatutos -> ciclo_while .)
    SI              reduce using rule 43 (estatutos -> ciclo_while .)
    LLAVE_C         reduce using rule 43 (estatutos -> ciclo_while .)


state 50

    (46) asignacion -> variable . IGUAL expresion

    IGUAL           shift and go to state 73


state 51

    (47) llamada -> ID . PARENT_A PARENT_C
    (48) llamada -> ID . PARENT_A expresiones PARENT_C
    (19) variable -> ID .
    (20) variable -> ID . dim
    (23) dim -> . CORCHETE_A expresion CORCHETE_C

    PARENT_A        shift and go to state 74
    IGUAL           reduce using rule 19 (variable -> ID .)
    CORCHETE_A      shift and go to state 76

    dim                            shift and go to state 75

state 52

    (75) retorno -> REGRESA . PARENT_A expresion PARENT_C

    PARENT_A        shift and go to state 77


state 53

    (76) lectura -> LEER . PARENT_A variables PARENT_C

    PARENT_A        shift and go to state 78


state 54

    (77) escritura -> ESCRIBIR . PARENT_A escr PARENT_C

    PARENT_A        shift and go to state 79


state 55

    (82) decision -> if .
    (83) decision -> if . else
    (85) else -> . SINO LLAVE_A estatutos_dos LLAVE_C

    ID              reduce using rule 82 (decision -> if .)
    REGRESA         reduce using rule 82 (decision -> if .)
    LEER            reduce using rule 82 (decision -> if .)
    ESCRIBIR        reduce using rule 82 (decision -> if .)
    DESDE           reduce using rule 82 (decision -> if .)
    MIENTRAS        reduce using rule 82 (decision -> if .)
    SI              reduce using rule 82 (decision -> if .)
    LLAVE_C         reduce using rule 82 (decision -> if .)
    SINO            shift and go to state 81

    else                           shift and go to state 80

state 56

    (87) ciclo_for -> DESDE . variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (19) variable -> . ID
    (20) variable -> . ID dim

    ID              shift and go to state 83

    variable                       shift and go to state 82

state 57

    (86) ciclo_while -> MIENTRAS . PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C

    PARENT_A        shift and go to state 84


state 58

    (84) if -> SI . PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    PARENT_A        shift and go to state 85


state 59

    (10) vars -> tipo_simple ids_simple PUNTOCOMA vars .

    PRINCIPAL       reduce using rule 10 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)
    FUNCION         reduce using rule 10 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)
    LLAVE_A         reduce using rule 10 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)


state 60

    (17) ids_simple -> ID dimension COMA . ids_simple
    (14) ids_simple -> . ID
    (15) ids_simple -> . ID dimension
    (16) ids_simple -> . ID COMA ids_simple
    (17) ids_simple -> . ID dimension COMA ids_simple

    ID              shift and go to state 28

    ids_simple                     shift and go to state 86

state 61

    (16) ids_simple -> ID COMA ids_simple .

    PUNTOCOMA       reduce using rule 16 (ids_simple -> ID COMA ids_simple .)


state 62

    (18) dimension -> CORCHETE_A CTE_I . CORCHETE_C

    CORCHETE_C      shift and go to state 87


state 63

    (28) func_dos -> PARENT_A PARENT_C . var_funcs
    (30) var_funcs -> . dec_est
    (31) var_funcs -> . dec_vars dec_est
    (34) dec_est -> . LLAVE_A LLAVE_C
    (35) dec_est -> . LLAVE_A estatutos_dos LLAVE_C
    (8) dec_vars -> . VAR vars

    LLAVE_A         shift and go to state 91
    VAR             shift and go to state 10

    var_funcs                      shift and go to state 88
    dec_est                        shift and go to state 89
    dec_vars                       shift and go to state 90

state 64

    (29) func_dos -> PARENT_A parametros . PARENT_C var_funcs

    PARENT_C        shift and go to state 92


state 65

    (32) parametros -> tipo_simple . variable
    (33) parametros -> tipo_simple . variable COMA parametros
    (19) variable -> . ID
    (20) variable -> . ID dim

    ID              shift and go to state 83

    variable                       shift and go to state 93

state 66

    (7) main -> PRINCIPAL PARENT_A PARENT_C LLAVE_A estatutos_dos LLAVE_C .

    $end            reduce using rule 7 (main -> PRINCIPAL PARENT_A PARENT_C LLAVE_A estatutos_dos LLAVE_C .)


state 67

    (45) estatutos_dos -> estatutos estatutos_dos .

    LLAVE_C         reduce using rule 45 (estatutos_dos -> estatutos estatutos_dos .)


state 68

    (36) estatutos -> asignacion PUNTOCOMA .

    ID              reduce using rule 36 (estatutos -> asignacion PUNTOCOMA .)
    REGRESA         reduce using rule 36 (estatutos -> asignacion PUNTOCOMA .)
    LEER            reduce using rule 36 (estatutos -> asignacion PUNTOCOMA .)
    ESCRIBIR        reduce using rule 36 (estatutos -> asignacion PUNTOCOMA .)
    DESDE           reduce using rule 36 (estatutos -> asignacion PUNTOCOMA .)
    MIENTRAS        reduce using rule 36 (estatutos -> asignacion PUNTOCOMA .)
    SI              reduce using rule 36 (estatutos -> asignacion PUNTOCOMA .)
    LLAVE_C         reduce using rule 36 (estatutos -> asignacion PUNTOCOMA .)


state 69

    (37) estatutos -> llamada PUNTOCOMA .

    ID              reduce using rule 37 (estatutos -> llamada PUNTOCOMA .)
    REGRESA         reduce using rule 37 (estatutos -> llamada PUNTOCOMA .)
    LEER            reduce using rule 37 (estatutos -> llamada PUNTOCOMA .)
    ESCRIBIR        reduce using rule 37 (estatutos -> llamada PUNTOCOMA .)
    DESDE           reduce using rule 37 (estatutos -> llamada PUNTOCOMA .)
    MIENTRAS        reduce using rule 37 (estatutos -> llamada PUNTOCOMA .)
    SI              reduce using rule 37 (estatutos -> llamada PUNTOCOMA .)
    LLAVE_C         reduce using rule 37 (estatutos -> llamada PUNTOCOMA .)


state 70

    (38) estatutos -> retorno PUNTOCOMA .

    ID              reduce using rule 38 (estatutos -> retorno PUNTOCOMA .)
    REGRESA         reduce using rule 38 (estatutos -> retorno PUNTOCOMA .)
    LEER            reduce using rule 38 (estatutos -> retorno PUNTOCOMA .)
    ESCRIBIR        reduce using rule 38 (estatutos -> retorno PUNTOCOMA .)
    DESDE           reduce using rule 38 (estatutos -> retorno PUNTOCOMA .)
    MIENTRAS        reduce using rule 38 (estatutos -> retorno PUNTOCOMA .)
    SI              reduce using rule 38 (estatutos -> retorno PUNTOCOMA .)
    LLAVE_C         reduce using rule 38 (estatutos -> retorno PUNTOCOMA .)


state 71

    (39) estatutos -> lectura PUNTOCOMA .

    ID              reduce using rule 39 (estatutos -> lectura PUNTOCOMA .)
    REGRESA         reduce using rule 39 (estatutos -> lectura PUNTOCOMA .)
    LEER            reduce using rule 39 (estatutos -> lectura PUNTOCOMA .)
    ESCRIBIR        reduce using rule 39 (estatutos -> lectura PUNTOCOMA .)
    DESDE           reduce using rule 39 (estatutos -> lectura PUNTOCOMA .)
    MIENTRAS        reduce using rule 39 (estatutos -> lectura PUNTOCOMA .)
    SI              reduce using rule 39 (estatutos -> lectura PUNTOCOMA .)
    LLAVE_C         reduce using rule 39 (estatutos -> lectura PUNTOCOMA .)


state 72

    (40) estatutos -> escritura PUNTOCOMA .

    ID              reduce using rule 40 (estatutos -> escritura PUNTOCOMA .)
    REGRESA         reduce using rule 40 (estatutos -> escritura PUNTOCOMA .)
    LEER            reduce using rule 40 (estatutos -> escritura PUNTOCOMA .)
    ESCRIBIR        reduce using rule 40 (estatutos -> escritura PUNTOCOMA .)
    DESDE           reduce using rule 40 (estatutos -> escritura PUNTOCOMA .)
    MIENTRAS        reduce using rule 40 (estatutos -> escritura PUNTOCOMA .)
    SI              reduce using rule 40 (estatutos -> escritura PUNTOCOMA .)
    LLAVE_C         reduce using rule 40 (estatutos -> escritura PUNTOCOMA .)


state 73

    (46) asignacion -> variable IGUAL . expresion
    (51) expresion -> . t_expresion
    (52) expresion -> . t_expresion OR expresion
    (53) t_expresion -> . g_expresion
    (54) t_expresion -> . g_expresion AND t_expresion
    (55) g_expresion -> . m_expresion
    (56) g_expresion -> . m_expresion op_logicos m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    variable                       shift and go to state 94
    expresion                      shift and go to state 95
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    llamada                        shift and go to state 105

state 74

    (47) llamada -> ID PARENT_A . PARENT_C
    (48) llamada -> ID PARENT_A . expresiones PARENT_C
    (49) expresiones -> . expresion
    (50) expresiones -> . expresion COMA expresion
    (51) expresion -> . t_expresion
    (52) expresion -> . t_expresion OR expresion
    (53) t_expresion -> . g_expresion
    (54) t_expresion -> . g_expresion AND t_expresion
    (55) g_expresion -> . m_expresion
    (56) g_expresion -> . m_expresion op_logicos m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_C        shift and go to state 107
    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    expresiones                    shift and go to state 108
    expresion                      shift and go to state 109
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 75

    (20) variable -> ID dim .

    IGUAL           reduce using rule 20 (variable -> ID dim .)
    COMA            reduce using rule 20 (variable -> ID dim .)
    PARENT_C        reduce using rule 20 (variable -> ID dim .)
    POR             reduce using rule 20 (variable -> ID dim .)
    DIV             reduce using rule 20 (variable -> ID dim .)
    MAS             reduce using rule 20 (variable -> ID dim .)
    MENOS           reduce using rule 20 (variable -> ID dim .)
    MAYORQUE        reduce using rule 20 (variable -> ID dim .)
    MENORQUE        reduce using rule 20 (variable -> ID dim .)
    MAYORIGUAL      reduce using rule 20 (variable -> ID dim .)
    MENORIGUAL      reduce using rule 20 (variable -> ID dim .)
    IGUALIGUAL      reduce using rule 20 (variable -> ID dim .)
    DIFERENTE       reduce using rule 20 (variable -> ID dim .)
    AND             reduce using rule 20 (variable -> ID dim .)
    OR              reduce using rule 20 (variable -> ID dim .)
    PUNTOCOMA       reduce using rule 20 (variable -> ID dim .)
    CORCHETE_C      reduce using rule 20 (variable -> ID dim .)
    HASTA           reduce using rule 20 (variable -> ID dim .)
    HACER           reduce using rule 20 (variable -> ID dim .)


state 76

    (23) dim -> CORCHETE_A . expresion CORCHETE_C
    (51) expresion -> . t_expresion
    (52) expresion -> . t_expresion OR expresion
    (53) t_expresion -> . g_expresion
    (54) t_expresion -> . g_expresion AND t_expresion
    (55) g_expresion -> . m_expresion
    (56) g_expresion -> . m_expresion op_logicos m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    expresion                      shift and go to state 110
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 77

    (75) retorno -> REGRESA PARENT_A . expresion PARENT_C
    (51) expresion -> . t_expresion
    (52) expresion -> . t_expresion OR expresion
    (53) t_expresion -> . g_expresion
    (54) t_expresion -> . g_expresion AND t_expresion
    (55) g_expresion -> . m_expresion
    (56) g_expresion -> . m_expresion op_logicos m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    expresion                      shift and go to state 111
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 78

    (76) lectura -> LEER PARENT_A . variables PARENT_C
    (21) variables -> . variable
    (22) variables -> . variable COMA variables
    (19) variable -> . ID
    (20) variable -> . ID dim

    ID              shift and go to state 83

    variables                      shift and go to state 112
    variable                       shift and go to state 113

state 79

    (77) escritura -> ESCRIBIR PARENT_A . escr PARENT_C
    (80) escr -> . escritura_dos
    (81) escr -> . escritura_dos COMA escr
    (78) escritura_dos -> . CTE_STR
    (79) escritura_dos -> . expresion
    (51) expresion -> . t_expresion
    (52) expresion -> . t_expresion OR expresion
    (53) t_expresion -> . g_expresion
    (54) t_expresion -> . g_expresion AND t_expresion
    (55) g_expresion -> . m_expresion
    (56) g_expresion -> . m_expresion op_logicos m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    CTE_STR         shift and go to state 116
    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    escr                           shift and go to state 114
    escritura_dos                  shift and go to state 115
    expresion                      shift and go to state 117
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 80

    (83) decision -> if else .

    ID              reduce using rule 83 (decision -> if else .)
    REGRESA         reduce using rule 83 (decision -> if else .)
    LEER            reduce using rule 83 (decision -> if else .)
    ESCRIBIR        reduce using rule 83 (decision -> if else .)
    DESDE           reduce using rule 83 (decision -> if else .)
    MIENTRAS        reduce using rule 83 (decision -> if else .)
    SI              reduce using rule 83 (decision -> if else .)
    LLAVE_C         reduce using rule 83 (decision -> if else .)


state 81

    (85) else -> SINO . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 118


state 82

    (87) ciclo_for -> DESDE variable . IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C

    IGUAL           shift and go to state 119


state 83

    (19) variable -> ID .
    (20) variable -> ID . dim
    (23) dim -> . CORCHETE_A expresion CORCHETE_C

    IGUAL           reduce using rule 19 (variable -> ID .)
    COMA            reduce using rule 19 (variable -> ID .)
    PARENT_C        reduce using rule 19 (variable -> ID .)
    CORCHETE_A      shift and go to state 76

    dim                            shift and go to state 75

state 84

    (86) ciclo_while -> MIENTRAS PARENT_A . expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
    (51) expresion -> . t_expresion
    (52) expresion -> . t_expresion OR expresion
    (53) t_expresion -> . g_expresion
    (54) t_expresion -> . g_expresion AND t_expresion
    (55) g_expresion -> . m_expresion
    (56) g_expresion -> . m_expresion op_logicos m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    expresion                      shift and go to state 120
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 85

    (84) if -> SI PARENT_A . expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C
    (51) expresion -> . t_expresion
    (52) expresion -> . t_expresion OR expresion
    (53) t_expresion -> . g_expresion
    (54) t_expresion -> . g_expresion AND t_expresion
    (55) g_expresion -> . m_expresion
    (56) g_expresion -> . m_expresion op_logicos m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    expresion                      shift and go to state 121
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 86

    (17) ids_simple -> ID dimension COMA ids_simple .

    PUNTOCOMA       reduce using rule 17 (ids_simple -> ID dimension COMA ids_simple .)


state 87

    (18) dimension -> CORCHETE_A CTE_I CORCHETE_C .

    COMA            reduce using rule 18 (dimension -> CORCHETE_A CTE_I CORCHETE_C .)
    PUNTOCOMA       reduce using rule 18 (dimension -> CORCHETE_A CTE_I CORCHETE_C .)


state 88

    (28) func_dos -> PARENT_A PARENT_C var_funcs .

    FUNCION         reduce using rule 28 (func_dos -> PARENT_A PARENT_C var_funcs .)
    PRINCIPAL       reduce using rule 28 (func_dos -> PARENT_A PARENT_C var_funcs .)


state 89

    (30) var_funcs -> dec_est .

    FUNCION         reduce using rule 30 (var_funcs -> dec_est .)
    PRINCIPAL       reduce using rule 30 (var_funcs -> dec_est .)


state 90

    (31) var_funcs -> dec_vars . dec_est
    (34) dec_est -> . LLAVE_A LLAVE_C
    (35) dec_est -> . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 91

    dec_est                        shift and go to state 122

state 91

    (34) dec_est -> LLAVE_A . LLAVE_C
    (35) dec_est -> LLAVE_A . estatutos_dos LLAVE_C
    (44) estatutos_dos -> . estatutos
    (45) estatutos_dos -> . estatutos estatutos_dos
    (36) estatutos -> . asignacion PUNTOCOMA
    (37) estatutos -> . llamada PUNTOCOMA
    (38) estatutos -> . retorno PUNTOCOMA
    (39) estatutos -> . lectura PUNTOCOMA
    (40) estatutos -> . escritura PUNTOCOMA
    (41) estatutos -> . decision
    (42) estatutos -> . ciclo_for
    (43) estatutos -> . ciclo_while
    (46) asignacion -> . variable IGUAL expresion
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C
    (75) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (76) lectura -> . LEER PARENT_A variables PARENT_C
    (77) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (82) decision -> . if
    (83) decision -> . if else
    (87) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (86) ciclo_while -> . MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
    (19) variable -> . ID
    (20) variable -> . ID dim
    (84) if -> . SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    LLAVE_C         shift and go to state 123
    ID              shift and go to state 51
    REGRESA         shift and go to state 52
    LEER            shift and go to state 53
    ESCRIBIR        shift and go to state 54
    DESDE           shift and go to state 56
    MIENTRAS        shift and go to state 57
    SI              shift and go to state 58

    estatutos_dos                  shift and go to state 124
    estatutos                      shift and go to state 41
    asignacion                     shift and go to state 42
    llamada                        shift and go to state 43
    retorno                        shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    decision                       shift and go to state 47
    ciclo_for                      shift and go to state 48
    ciclo_while                    shift and go to state 49
    variable                       shift and go to state 50
    if                             shift and go to state 55

state 92

    (29) func_dos -> PARENT_A parametros PARENT_C . var_funcs
    (30) var_funcs -> . dec_est
    (31) var_funcs -> . dec_vars dec_est
    (34) dec_est -> . LLAVE_A LLAVE_C
    (35) dec_est -> . LLAVE_A estatutos_dos LLAVE_C
    (8) dec_vars -> . VAR vars

    LLAVE_A         shift and go to state 91
    VAR             shift and go to state 10

    var_funcs                      shift and go to state 125
    dec_est                        shift and go to state 89
    dec_vars                       shift and go to state 90

state 93

    (32) parametros -> tipo_simple variable .
    (33) parametros -> tipo_simple variable . COMA parametros

    PARENT_C        reduce using rule 32 (parametros -> tipo_simple variable .)
    COMA            shift and go to state 126


state 94

    (73) factor -> variable .

    POR             reduce using rule 73 (factor -> variable .)
    DIV             reduce using rule 73 (factor -> variable .)
    MAS             reduce using rule 73 (factor -> variable .)
    MENOS           reduce using rule 73 (factor -> variable .)
    MAYORQUE        reduce using rule 73 (factor -> variable .)
    MENORQUE        reduce using rule 73 (factor -> variable .)
    MAYORIGUAL      reduce using rule 73 (factor -> variable .)
    MENORIGUAL      reduce using rule 73 (factor -> variable .)
    IGUALIGUAL      reduce using rule 73 (factor -> variable .)
    DIFERENTE       reduce using rule 73 (factor -> variable .)
    AND             reduce using rule 73 (factor -> variable .)
    OR              reduce using rule 73 (factor -> variable .)
    PUNTOCOMA       reduce using rule 73 (factor -> variable .)
    COMA            reduce using rule 73 (factor -> variable .)
    PARENT_C        reduce using rule 73 (factor -> variable .)
    CORCHETE_C      reduce using rule 73 (factor -> variable .)
    HASTA           reduce using rule 73 (factor -> variable .)
    HACER           reduce using rule 73 (factor -> variable .)


state 95

    (46) asignacion -> variable IGUAL expresion .

    PUNTOCOMA       reduce using rule 46 (asignacion -> variable IGUAL expresion .)


state 96

    (51) expresion -> t_expresion .
    (52) expresion -> t_expresion . OR expresion

    PUNTOCOMA       reduce using rule 51 (expresion -> t_expresion .)
    COMA            reduce using rule 51 (expresion -> t_expresion .)
    PARENT_C        reduce using rule 51 (expresion -> t_expresion .)
    CORCHETE_C      reduce using rule 51 (expresion -> t_expresion .)
    HASTA           reduce using rule 51 (expresion -> t_expresion .)
    HACER           reduce using rule 51 (expresion -> t_expresion .)
    OR              shift and go to state 127


state 97

    (53) t_expresion -> g_expresion .
    (54) t_expresion -> g_expresion . AND t_expresion

    OR              reduce using rule 53 (t_expresion -> g_expresion .)
    PUNTOCOMA       reduce using rule 53 (t_expresion -> g_expresion .)
    COMA            reduce using rule 53 (t_expresion -> g_expresion .)
    PARENT_C        reduce using rule 53 (t_expresion -> g_expresion .)
    CORCHETE_C      reduce using rule 53 (t_expresion -> g_expresion .)
    HASTA           reduce using rule 53 (t_expresion -> g_expresion .)
    HACER           reduce using rule 53 (t_expresion -> g_expresion .)
    AND             shift and go to state 128


state 98

    (55) g_expresion -> m_expresion .
    (56) g_expresion -> m_expresion . op_logicos m_expresion
    (57) op_logicos -> . MAYORQUE
    (58) op_logicos -> . MENORQUE
    (59) op_logicos -> . MAYORIGUAL
    (60) op_logicos -> . MENORIGUAL
    (61) op_logicos -> . IGUALIGUAL
    (62) op_logicos -> . DIFERENTE

    AND             reduce using rule 55 (g_expresion -> m_expresion .)
    OR              reduce using rule 55 (g_expresion -> m_expresion .)
    PUNTOCOMA       reduce using rule 55 (g_expresion -> m_expresion .)
    COMA            reduce using rule 55 (g_expresion -> m_expresion .)
    PARENT_C        reduce using rule 55 (g_expresion -> m_expresion .)
    CORCHETE_C      reduce using rule 55 (g_expresion -> m_expresion .)
    HASTA           reduce using rule 55 (g_expresion -> m_expresion .)
    HACER           reduce using rule 55 (g_expresion -> m_expresion .)
    MAYORQUE        shift and go to state 130
    MENORQUE        shift and go to state 131
    MAYORIGUAL      shift and go to state 132
    MENORIGUAL      shift and go to state 133
    IGUALIGUAL      shift and go to state 134
    DIFERENTE       shift and go to state 135

    op_logicos                     shift and go to state 129

state 99

    (63) m_expresion -> termino .
    (64) m_expresion -> termino . MAS m_expresion
    (65) m_expresion -> termino . MENOS m_expresion

    MAYORQUE        reduce using rule 63 (m_expresion -> termino .)
    MENORQUE        reduce using rule 63 (m_expresion -> termino .)
    MAYORIGUAL      reduce using rule 63 (m_expresion -> termino .)
    MENORIGUAL      reduce using rule 63 (m_expresion -> termino .)
    IGUALIGUAL      reduce using rule 63 (m_expresion -> termino .)
    DIFERENTE       reduce using rule 63 (m_expresion -> termino .)
    AND             reduce using rule 63 (m_expresion -> termino .)
    OR              reduce using rule 63 (m_expresion -> termino .)
    PUNTOCOMA       reduce using rule 63 (m_expresion -> termino .)
    COMA            reduce using rule 63 (m_expresion -> termino .)
    PARENT_C        reduce using rule 63 (m_expresion -> termino .)
    CORCHETE_C      reduce using rule 63 (m_expresion -> termino .)
    HASTA           reduce using rule 63 (m_expresion -> termino .)
    HACER           reduce using rule 63 (m_expresion -> termino .)
    MAS             shift and go to state 136
    MENOS           shift and go to state 137


state 100

    (66) termino -> factor .
    (67) termino -> factor . POR termino
    (68) termino -> factor . DIV termino

    MAS             reduce using rule 66 (termino -> factor .)
    MENOS           reduce using rule 66 (termino -> factor .)
    MAYORQUE        reduce using rule 66 (termino -> factor .)
    MENORQUE        reduce using rule 66 (termino -> factor .)
    MAYORIGUAL      reduce using rule 66 (termino -> factor .)
    MENORIGUAL      reduce using rule 66 (termino -> factor .)
    IGUALIGUAL      reduce using rule 66 (termino -> factor .)
    DIFERENTE       reduce using rule 66 (termino -> factor .)
    AND             reduce using rule 66 (termino -> factor .)
    OR              reduce using rule 66 (termino -> factor .)
    PUNTOCOMA       reduce using rule 66 (termino -> factor .)
    COMA            reduce using rule 66 (termino -> factor .)
    PARENT_C        reduce using rule 66 (termino -> factor .)
    CORCHETE_C      reduce using rule 66 (termino -> factor .)
    HASTA           reduce using rule 66 (termino -> factor .)
    HACER           reduce using rule 66 (termino -> factor .)
    POR             shift and go to state 138
    DIV             shift and go to state 139


state 101

    (69) factor -> PARENT_A . expresion PARENT_C
    (51) expresion -> . t_expresion
    (52) expresion -> . t_expresion OR expresion
    (53) t_expresion -> . g_expresion
    (54) t_expresion -> . g_expresion AND t_expresion
    (55) g_expresion -> . m_expresion
    (56) g_expresion -> . m_expresion op_logicos m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    expresion                      shift and go to state 140
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 102

    (70) factor -> CTE_I .

    POR             reduce using rule 70 (factor -> CTE_I .)
    DIV             reduce using rule 70 (factor -> CTE_I .)
    MAS             reduce using rule 70 (factor -> CTE_I .)
    MENOS           reduce using rule 70 (factor -> CTE_I .)
    MAYORQUE        reduce using rule 70 (factor -> CTE_I .)
    MENORQUE        reduce using rule 70 (factor -> CTE_I .)
    MAYORIGUAL      reduce using rule 70 (factor -> CTE_I .)
    MENORIGUAL      reduce using rule 70 (factor -> CTE_I .)
    IGUALIGUAL      reduce using rule 70 (factor -> CTE_I .)
    DIFERENTE       reduce using rule 70 (factor -> CTE_I .)
    AND             reduce using rule 70 (factor -> CTE_I .)
    OR              reduce using rule 70 (factor -> CTE_I .)
    PUNTOCOMA       reduce using rule 70 (factor -> CTE_I .)
    COMA            reduce using rule 70 (factor -> CTE_I .)
    PARENT_C        reduce using rule 70 (factor -> CTE_I .)
    CORCHETE_C      reduce using rule 70 (factor -> CTE_I .)
    HASTA           reduce using rule 70 (factor -> CTE_I .)
    HACER           reduce using rule 70 (factor -> CTE_I .)


state 103

    (71) factor -> CTE_F .

    POR             reduce using rule 71 (factor -> CTE_F .)
    DIV             reduce using rule 71 (factor -> CTE_F .)
    MAS             reduce using rule 71 (factor -> CTE_F .)
    MENOS           reduce using rule 71 (factor -> CTE_F .)
    MAYORQUE        reduce using rule 71 (factor -> CTE_F .)
    MENORQUE        reduce using rule 71 (factor -> CTE_F .)
    MAYORIGUAL      reduce using rule 71 (factor -> CTE_F .)
    MENORIGUAL      reduce using rule 71 (factor -> CTE_F .)
    IGUALIGUAL      reduce using rule 71 (factor -> CTE_F .)
    DIFERENTE       reduce using rule 71 (factor -> CTE_F .)
    AND             reduce using rule 71 (factor -> CTE_F .)
    OR              reduce using rule 71 (factor -> CTE_F .)
    PUNTOCOMA       reduce using rule 71 (factor -> CTE_F .)
    COMA            reduce using rule 71 (factor -> CTE_F .)
    PARENT_C        reduce using rule 71 (factor -> CTE_F .)
    CORCHETE_C      reduce using rule 71 (factor -> CTE_F .)
    HASTA           reduce using rule 71 (factor -> CTE_F .)
    HACER           reduce using rule 71 (factor -> CTE_F .)


state 104

    (72) factor -> CTE_CH .

    POR             reduce using rule 72 (factor -> CTE_CH .)
    DIV             reduce using rule 72 (factor -> CTE_CH .)
    MAS             reduce using rule 72 (factor -> CTE_CH .)
    MENOS           reduce using rule 72 (factor -> CTE_CH .)
    MAYORQUE        reduce using rule 72 (factor -> CTE_CH .)
    MENORQUE        reduce using rule 72 (factor -> CTE_CH .)
    MAYORIGUAL      reduce using rule 72 (factor -> CTE_CH .)
    MENORIGUAL      reduce using rule 72 (factor -> CTE_CH .)
    IGUALIGUAL      reduce using rule 72 (factor -> CTE_CH .)
    DIFERENTE       reduce using rule 72 (factor -> CTE_CH .)
    AND             reduce using rule 72 (factor -> CTE_CH .)
    OR              reduce using rule 72 (factor -> CTE_CH .)
    PUNTOCOMA       reduce using rule 72 (factor -> CTE_CH .)
    COMA            reduce using rule 72 (factor -> CTE_CH .)
    PARENT_C        reduce using rule 72 (factor -> CTE_CH .)
    CORCHETE_C      reduce using rule 72 (factor -> CTE_CH .)
    HASTA           reduce using rule 72 (factor -> CTE_CH .)
    HACER           reduce using rule 72 (factor -> CTE_CH .)


state 105

    (74) factor -> llamada .

    POR             reduce using rule 74 (factor -> llamada .)
    DIV             reduce using rule 74 (factor -> llamada .)
    MAS             reduce using rule 74 (factor -> llamada .)
    MENOS           reduce using rule 74 (factor -> llamada .)
    MAYORQUE        reduce using rule 74 (factor -> llamada .)
    MENORQUE        reduce using rule 74 (factor -> llamada .)
    MAYORIGUAL      reduce using rule 74 (factor -> llamada .)
    MENORIGUAL      reduce using rule 74 (factor -> llamada .)
    IGUALIGUAL      reduce using rule 74 (factor -> llamada .)
    DIFERENTE       reduce using rule 74 (factor -> llamada .)
    AND             reduce using rule 74 (factor -> llamada .)
    OR              reduce using rule 74 (factor -> llamada .)
    PUNTOCOMA       reduce using rule 74 (factor -> llamada .)
    COMA            reduce using rule 74 (factor -> llamada .)
    PARENT_C        reduce using rule 74 (factor -> llamada .)
    CORCHETE_C      reduce using rule 74 (factor -> llamada .)
    HASTA           reduce using rule 74 (factor -> llamada .)
    HACER           reduce using rule 74 (factor -> llamada .)


state 106

    (19) variable -> ID .
    (20) variable -> ID . dim
    (47) llamada -> ID . PARENT_A PARENT_C
    (48) llamada -> ID . PARENT_A expresiones PARENT_C
    (23) dim -> . CORCHETE_A expresion CORCHETE_C

    POR             reduce using rule 19 (variable -> ID .)
    DIV             reduce using rule 19 (variable -> ID .)
    MAS             reduce using rule 19 (variable -> ID .)
    MENOS           reduce using rule 19 (variable -> ID .)
    MAYORQUE        reduce using rule 19 (variable -> ID .)
    MENORQUE        reduce using rule 19 (variable -> ID .)
    MAYORIGUAL      reduce using rule 19 (variable -> ID .)
    MENORIGUAL      reduce using rule 19 (variable -> ID .)
    IGUALIGUAL      reduce using rule 19 (variable -> ID .)
    DIFERENTE       reduce using rule 19 (variable -> ID .)
    AND             reduce using rule 19 (variable -> ID .)
    OR              reduce using rule 19 (variable -> ID .)
    PUNTOCOMA       reduce using rule 19 (variable -> ID .)
    COMA            reduce using rule 19 (variable -> ID .)
    PARENT_C        reduce using rule 19 (variable -> ID .)
    CORCHETE_C      reduce using rule 19 (variable -> ID .)
    HASTA           reduce using rule 19 (variable -> ID .)
    HACER           reduce using rule 19 (variable -> ID .)
    PARENT_A        shift and go to state 74
    CORCHETE_A      shift and go to state 76

    dim                            shift and go to state 75

state 107

    (47) llamada -> ID PARENT_A PARENT_C .

    PUNTOCOMA       reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    POR             reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    DIV             reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    MAS             reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    MENOS           reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    MAYORQUE        reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    MENORQUE        reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    MAYORIGUAL      reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    MENORIGUAL      reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    IGUALIGUAL      reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    DIFERENTE       reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    AND             reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    OR              reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    COMA            reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    PARENT_C        reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    CORCHETE_C      reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    HASTA           reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)
    HACER           reduce using rule 47 (llamada -> ID PARENT_A PARENT_C .)


state 108

    (48) llamada -> ID PARENT_A expresiones . PARENT_C

    PARENT_C        shift and go to state 141


state 109

    (49) expresiones -> expresion .
    (50) expresiones -> expresion . COMA expresion

    PARENT_C        reduce using rule 49 (expresiones -> expresion .)
    COMA            shift and go to state 142


state 110

    (23) dim -> CORCHETE_A expresion . CORCHETE_C

    CORCHETE_C      shift and go to state 143


state 111

    (75) retorno -> REGRESA PARENT_A expresion . PARENT_C

    PARENT_C        shift and go to state 144


state 112

    (76) lectura -> LEER PARENT_A variables . PARENT_C

    PARENT_C        shift and go to state 145


state 113

    (21) variables -> variable .
    (22) variables -> variable . COMA variables

    PARENT_C        reduce using rule 21 (variables -> variable .)
    COMA            shift and go to state 146


state 114

    (77) escritura -> ESCRIBIR PARENT_A escr . PARENT_C

    PARENT_C        shift and go to state 147


state 115

    (80) escr -> escritura_dos .
    (81) escr -> escritura_dos . COMA escr

    PARENT_C        reduce using rule 80 (escr -> escritura_dos .)
    COMA            shift and go to state 148


state 116

    (78) escritura_dos -> CTE_STR .

    COMA            reduce using rule 78 (escritura_dos -> CTE_STR .)
    PARENT_C        reduce using rule 78 (escritura_dos -> CTE_STR .)


state 117

    (79) escritura_dos -> expresion .

    COMA            reduce using rule 79 (escritura_dos -> expresion .)
    PARENT_C        reduce using rule 79 (escritura_dos -> expresion .)


state 118

    (85) else -> SINO LLAVE_A . estatutos_dos LLAVE_C
    (44) estatutos_dos -> . estatutos
    (45) estatutos_dos -> . estatutos estatutos_dos
    (36) estatutos -> . asignacion PUNTOCOMA
    (37) estatutos -> . llamada PUNTOCOMA
    (38) estatutos -> . retorno PUNTOCOMA
    (39) estatutos -> . lectura PUNTOCOMA
    (40) estatutos -> . escritura PUNTOCOMA
    (41) estatutos -> . decision
    (42) estatutos -> . ciclo_for
    (43) estatutos -> . ciclo_while
    (46) asignacion -> . variable IGUAL expresion
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C
    (75) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (76) lectura -> . LEER PARENT_A variables PARENT_C
    (77) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (82) decision -> . if
    (83) decision -> . if else
    (87) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (86) ciclo_while -> . MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
    (19) variable -> . ID
    (20) variable -> . ID dim
    (84) if -> . SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 51
    REGRESA         shift and go to state 52
    LEER            shift and go to state 53
    ESCRIBIR        shift and go to state 54
    DESDE           shift and go to state 56
    MIENTRAS        shift and go to state 57
    SI              shift and go to state 58

    estatutos_dos                  shift and go to state 149
    estatutos                      shift and go to state 41
    asignacion                     shift and go to state 42
    llamada                        shift and go to state 43
    retorno                        shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    decision                       shift and go to state 47
    ciclo_for                      shift and go to state 48
    ciclo_while                    shift and go to state 49
    variable                       shift and go to state 50
    if                             shift and go to state 55

state 119

    (87) ciclo_for -> DESDE variable IGUAL . expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (51) expresion -> . t_expresion
    (52) expresion -> . t_expresion OR expresion
    (53) t_expresion -> . g_expresion
    (54) t_expresion -> . g_expresion AND t_expresion
    (55) g_expresion -> . m_expresion
    (56) g_expresion -> . m_expresion op_logicos m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    variable                       shift and go to state 94
    expresion                      shift and go to state 150
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    llamada                        shift and go to state 105

state 120

    (86) ciclo_while -> MIENTRAS PARENT_A expresion . PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C

    PARENT_C        shift and go to state 151


state 121

    (84) if -> SI PARENT_A expresion . PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    PARENT_C        shift and go to state 152


state 122

    (31) var_funcs -> dec_vars dec_est .

    FUNCION         reduce using rule 31 (var_funcs -> dec_vars dec_est .)
    PRINCIPAL       reduce using rule 31 (var_funcs -> dec_vars dec_est .)


state 123

    (34) dec_est -> LLAVE_A LLAVE_C .

    FUNCION         reduce using rule 34 (dec_est -> LLAVE_A LLAVE_C .)
    PRINCIPAL       reduce using rule 34 (dec_est -> LLAVE_A LLAVE_C .)


state 124

    (35) dec_est -> LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 153


state 125

    (29) func_dos -> PARENT_A parametros PARENT_C var_funcs .

    FUNCION         reduce using rule 29 (func_dos -> PARENT_A parametros PARENT_C var_funcs .)
    PRINCIPAL       reduce using rule 29 (func_dos -> PARENT_A parametros PARENT_C var_funcs .)


state 126

    (33) parametros -> tipo_simple variable COMA . parametros
    (32) parametros -> . tipo_simple variable
    (33) parametros -> . tipo_simple variable COMA parametros
    (11) tipo_simple -> . INT
    (12) tipo_simple -> . FLOAT
    (13) tipo_simple -> . CHAR

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    CHAR            shift and go to state 21

    tipo_simple                    shift and go to state 65
    parametros                     shift and go to state 154

state 127

    (52) expresion -> t_expresion OR . expresion
    (51) expresion -> . t_expresion
    (52) expresion -> . t_expresion OR expresion
    (53) t_expresion -> . g_expresion
    (54) t_expresion -> . g_expresion AND t_expresion
    (55) g_expresion -> . m_expresion
    (56) g_expresion -> . m_expresion op_logicos m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    t_expresion                    shift and go to state 96
    expresion                      shift and go to state 155
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 128

    (54) t_expresion -> g_expresion AND . t_expresion
    (53) t_expresion -> . g_expresion
    (54) t_expresion -> . g_expresion AND t_expresion
    (55) g_expresion -> . m_expresion
    (56) g_expresion -> . m_expresion op_logicos m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    g_expresion                    shift and go to state 97
    t_expresion                    shift and go to state 156
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 129

    (56) g_expresion -> m_expresion op_logicos . m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    m_expresion                    shift and go to state 157
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 130

    (57) op_logicos -> MAYORQUE .

    PARENT_A        reduce using rule 57 (op_logicos -> MAYORQUE .)
    CTE_I           reduce using rule 57 (op_logicos -> MAYORQUE .)
    CTE_F           reduce using rule 57 (op_logicos -> MAYORQUE .)
    CTE_CH          reduce using rule 57 (op_logicos -> MAYORQUE .)
    ID              reduce using rule 57 (op_logicos -> MAYORQUE .)


state 131

    (58) op_logicos -> MENORQUE .

    PARENT_A        reduce using rule 58 (op_logicos -> MENORQUE .)
    CTE_I           reduce using rule 58 (op_logicos -> MENORQUE .)
    CTE_F           reduce using rule 58 (op_logicos -> MENORQUE .)
    CTE_CH          reduce using rule 58 (op_logicos -> MENORQUE .)
    ID              reduce using rule 58 (op_logicos -> MENORQUE .)


state 132

    (59) op_logicos -> MAYORIGUAL .

    PARENT_A        reduce using rule 59 (op_logicos -> MAYORIGUAL .)
    CTE_I           reduce using rule 59 (op_logicos -> MAYORIGUAL .)
    CTE_F           reduce using rule 59 (op_logicos -> MAYORIGUAL .)
    CTE_CH          reduce using rule 59 (op_logicos -> MAYORIGUAL .)
    ID              reduce using rule 59 (op_logicos -> MAYORIGUAL .)


state 133

    (60) op_logicos -> MENORIGUAL .

    PARENT_A        reduce using rule 60 (op_logicos -> MENORIGUAL .)
    CTE_I           reduce using rule 60 (op_logicos -> MENORIGUAL .)
    CTE_F           reduce using rule 60 (op_logicos -> MENORIGUAL .)
    CTE_CH          reduce using rule 60 (op_logicos -> MENORIGUAL .)
    ID              reduce using rule 60 (op_logicos -> MENORIGUAL .)


state 134

    (61) op_logicos -> IGUALIGUAL .

    PARENT_A        reduce using rule 61 (op_logicos -> IGUALIGUAL .)
    CTE_I           reduce using rule 61 (op_logicos -> IGUALIGUAL .)
    CTE_F           reduce using rule 61 (op_logicos -> IGUALIGUAL .)
    CTE_CH          reduce using rule 61 (op_logicos -> IGUALIGUAL .)
    ID              reduce using rule 61 (op_logicos -> IGUALIGUAL .)


state 135

    (62) op_logicos -> DIFERENTE .

    PARENT_A        reduce using rule 62 (op_logicos -> DIFERENTE .)
    CTE_I           reduce using rule 62 (op_logicos -> DIFERENTE .)
    CTE_F           reduce using rule 62 (op_logicos -> DIFERENTE .)
    CTE_CH          reduce using rule 62 (op_logicos -> DIFERENTE .)
    ID              reduce using rule 62 (op_logicos -> DIFERENTE .)


state 136

    (64) m_expresion -> termino MAS . m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    termino                        shift and go to state 99
    m_expresion                    shift and go to state 158
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 137

    (65) m_expresion -> termino MENOS . m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    termino                        shift and go to state 99
    m_expresion                    shift and go to state 159
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 138

    (67) termino -> factor POR . termino
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    factor                         shift and go to state 100
    termino                        shift and go to state 160
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 139

    (68) termino -> factor DIV . termino
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    factor                         shift and go to state 100
    termino                        shift and go to state 161
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 140

    (69) factor -> PARENT_A expresion . PARENT_C

    PARENT_C        shift and go to state 162


state 141

    (48) llamada -> ID PARENT_A expresiones PARENT_C .

    PUNTOCOMA       reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    POR             reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    DIV             reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MAS             reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MENOS           reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MAYORQUE        reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MENORQUE        reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MAYORIGUAL      reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    MENORIGUAL      reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    IGUALIGUAL      reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    DIFERENTE       reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    AND             reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    OR              reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    COMA            reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    PARENT_C        reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    CORCHETE_C      reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    HASTA           reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)
    HACER           reduce using rule 48 (llamada -> ID PARENT_A expresiones PARENT_C .)


state 142

    (50) expresiones -> expresion COMA . expresion
    (51) expresion -> . t_expresion
    (52) expresion -> . t_expresion OR expresion
    (53) t_expresion -> . g_expresion
    (54) t_expresion -> . g_expresion AND t_expresion
    (55) g_expresion -> . m_expresion
    (56) g_expresion -> . m_expresion op_logicos m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    expresion                      shift and go to state 163
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 143

    (23) dim -> CORCHETE_A expresion CORCHETE_C .

    IGUAL           reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    COMA            reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    PARENT_C        reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    POR             reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    DIV             reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MAS             reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MENOS           reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MAYORQUE        reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MENORQUE        reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MAYORIGUAL      reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MENORIGUAL      reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    IGUALIGUAL      reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    DIFERENTE       reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    AND             reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    OR              reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    PUNTOCOMA       reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    CORCHETE_C      reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    HASTA           reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)
    HACER           reduce using rule 23 (dim -> CORCHETE_A expresion CORCHETE_C .)


state 144

    (75) retorno -> REGRESA PARENT_A expresion PARENT_C .

    PUNTOCOMA       reduce using rule 75 (retorno -> REGRESA PARENT_A expresion PARENT_C .)


state 145

    (76) lectura -> LEER PARENT_A variables PARENT_C .

    PUNTOCOMA       reduce using rule 76 (lectura -> LEER PARENT_A variables PARENT_C .)


state 146

    (22) variables -> variable COMA . variables
    (21) variables -> . variable
    (22) variables -> . variable COMA variables
    (19) variable -> . ID
    (20) variable -> . ID dim

    ID              shift and go to state 83

    variable                       shift and go to state 113
    variables                      shift and go to state 164

state 147

    (77) escritura -> ESCRIBIR PARENT_A escr PARENT_C .

    PUNTOCOMA       reduce using rule 77 (escritura -> ESCRIBIR PARENT_A escr PARENT_C .)


state 148

    (81) escr -> escritura_dos COMA . escr
    (80) escr -> . escritura_dos
    (81) escr -> . escritura_dos COMA escr
    (78) escritura_dos -> . CTE_STR
    (79) escritura_dos -> . expresion
    (51) expresion -> . t_expresion
    (52) expresion -> . t_expresion OR expresion
    (53) t_expresion -> . g_expresion
    (54) t_expresion -> . g_expresion AND t_expresion
    (55) g_expresion -> . m_expresion
    (56) g_expresion -> . m_expresion op_logicos m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    CTE_STR         shift and go to state 116
    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    escritura_dos                  shift and go to state 115
    escr                           shift and go to state 165
    expresion                      shift and go to state 117
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    variable                       shift and go to state 94
    llamada                        shift and go to state 105

state 149

    (85) else -> SINO LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 166


state 150

    (87) ciclo_for -> DESDE variable IGUAL expresion . HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C

    HASTA           shift and go to state 167


state 151

    (86) ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C . HAZ LLAVE_A estatutos_dos LLAVE_C

    HAZ             shift and go to state 168


state 152

    (84) if -> SI PARENT_A expresion PARENT_C . ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ENTONCES        shift and go to state 169


state 153

    (35) dec_est -> LLAVE_A estatutos_dos LLAVE_C .

    FUNCION         reduce using rule 35 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)
    PRINCIPAL       reduce using rule 35 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)


state 154

    (33) parametros -> tipo_simple variable COMA parametros .

    PARENT_C        reduce using rule 33 (parametros -> tipo_simple variable COMA parametros .)


state 155

    (52) expresion -> t_expresion OR expresion .

    PUNTOCOMA       reduce using rule 52 (expresion -> t_expresion OR expresion .)
    COMA            reduce using rule 52 (expresion -> t_expresion OR expresion .)
    PARENT_C        reduce using rule 52 (expresion -> t_expresion OR expresion .)
    CORCHETE_C      reduce using rule 52 (expresion -> t_expresion OR expresion .)
    HASTA           reduce using rule 52 (expresion -> t_expresion OR expresion .)
    HACER           reduce using rule 52 (expresion -> t_expresion OR expresion .)


state 156

    (54) t_expresion -> g_expresion AND t_expresion .

    OR              reduce using rule 54 (t_expresion -> g_expresion AND t_expresion .)
    PUNTOCOMA       reduce using rule 54 (t_expresion -> g_expresion AND t_expresion .)
    COMA            reduce using rule 54 (t_expresion -> g_expresion AND t_expresion .)
    PARENT_C        reduce using rule 54 (t_expresion -> g_expresion AND t_expresion .)
    CORCHETE_C      reduce using rule 54 (t_expresion -> g_expresion AND t_expresion .)
    HASTA           reduce using rule 54 (t_expresion -> g_expresion AND t_expresion .)
    HACER           reduce using rule 54 (t_expresion -> g_expresion AND t_expresion .)


state 157

    (56) g_expresion -> m_expresion op_logicos m_expresion .

    AND             reduce using rule 56 (g_expresion -> m_expresion op_logicos m_expresion .)
    OR              reduce using rule 56 (g_expresion -> m_expresion op_logicos m_expresion .)
    PUNTOCOMA       reduce using rule 56 (g_expresion -> m_expresion op_logicos m_expresion .)
    COMA            reduce using rule 56 (g_expresion -> m_expresion op_logicos m_expresion .)
    PARENT_C        reduce using rule 56 (g_expresion -> m_expresion op_logicos m_expresion .)
    CORCHETE_C      reduce using rule 56 (g_expresion -> m_expresion op_logicos m_expresion .)
    HASTA           reduce using rule 56 (g_expresion -> m_expresion op_logicos m_expresion .)
    HACER           reduce using rule 56 (g_expresion -> m_expresion op_logicos m_expresion .)


state 158

    (64) m_expresion -> termino MAS m_expresion .

    MAYORQUE        reduce using rule 64 (m_expresion -> termino MAS m_expresion .)
    MENORQUE        reduce using rule 64 (m_expresion -> termino MAS m_expresion .)
    MAYORIGUAL      reduce using rule 64 (m_expresion -> termino MAS m_expresion .)
    MENORIGUAL      reduce using rule 64 (m_expresion -> termino MAS m_expresion .)
    IGUALIGUAL      reduce using rule 64 (m_expresion -> termino MAS m_expresion .)
    DIFERENTE       reduce using rule 64 (m_expresion -> termino MAS m_expresion .)
    AND             reduce using rule 64 (m_expresion -> termino MAS m_expresion .)
    OR              reduce using rule 64 (m_expresion -> termino MAS m_expresion .)
    PUNTOCOMA       reduce using rule 64 (m_expresion -> termino MAS m_expresion .)
    COMA            reduce using rule 64 (m_expresion -> termino MAS m_expresion .)
    PARENT_C        reduce using rule 64 (m_expresion -> termino MAS m_expresion .)
    CORCHETE_C      reduce using rule 64 (m_expresion -> termino MAS m_expresion .)
    HASTA           reduce using rule 64 (m_expresion -> termino MAS m_expresion .)
    HACER           reduce using rule 64 (m_expresion -> termino MAS m_expresion .)


state 159

    (65) m_expresion -> termino MENOS m_expresion .

    MAYORQUE        reduce using rule 65 (m_expresion -> termino MENOS m_expresion .)
    MENORQUE        reduce using rule 65 (m_expresion -> termino MENOS m_expresion .)
    MAYORIGUAL      reduce using rule 65 (m_expresion -> termino MENOS m_expresion .)
    MENORIGUAL      reduce using rule 65 (m_expresion -> termino MENOS m_expresion .)
    IGUALIGUAL      reduce using rule 65 (m_expresion -> termino MENOS m_expresion .)
    DIFERENTE       reduce using rule 65 (m_expresion -> termino MENOS m_expresion .)
    AND             reduce using rule 65 (m_expresion -> termino MENOS m_expresion .)
    OR              reduce using rule 65 (m_expresion -> termino MENOS m_expresion .)
    PUNTOCOMA       reduce using rule 65 (m_expresion -> termino MENOS m_expresion .)
    COMA            reduce using rule 65 (m_expresion -> termino MENOS m_expresion .)
    PARENT_C        reduce using rule 65 (m_expresion -> termino MENOS m_expresion .)
    CORCHETE_C      reduce using rule 65 (m_expresion -> termino MENOS m_expresion .)
    HASTA           reduce using rule 65 (m_expresion -> termino MENOS m_expresion .)
    HACER           reduce using rule 65 (m_expresion -> termino MENOS m_expresion .)


state 160

    (67) termino -> factor POR termino .

    MAS             reduce using rule 67 (termino -> factor POR termino .)
    MENOS           reduce using rule 67 (termino -> factor POR termino .)
    MAYORQUE        reduce using rule 67 (termino -> factor POR termino .)
    MENORQUE        reduce using rule 67 (termino -> factor POR termino .)
    MAYORIGUAL      reduce using rule 67 (termino -> factor POR termino .)
    MENORIGUAL      reduce using rule 67 (termino -> factor POR termino .)
    IGUALIGUAL      reduce using rule 67 (termino -> factor POR termino .)
    DIFERENTE       reduce using rule 67 (termino -> factor POR termino .)
    AND             reduce using rule 67 (termino -> factor POR termino .)
    OR              reduce using rule 67 (termino -> factor POR termino .)
    PUNTOCOMA       reduce using rule 67 (termino -> factor POR termino .)
    COMA            reduce using rule 67 (termino -> factor POR termino .)
    PARENT_C        reduce using rule 67 (termino -> factor POR termino .)
    CORCHETE_C      reduce using rule 67 (termino -> factor POR termino .)
    HASTA           reduce using rule 67 (termino -> factor POR termino .)
    HACER           reduce using rule 67 (termino -> factor POR termino .)


state 161

    (68) termino -> factor DIV termino .

    MAS             reduce using rule 68 (termino -> factor DIV termino .)
    MENOS           reduce using rule 68 (termino -> factor DIV termino .)
    MAYORQUE        reduce using rule 68 (termino -> factor DIV termino .)
    MENORQUE        reduce using rule 68 (termino -> factor DIV termino .)
    MAYORIGUAL      reduce using rule 68 (termino -> factor DIV termino .)
    MENORIGUAL      reduce using rule 68 (termino -> factor DIV termino .)
    IGUALIGUAL      reduce using rule 68 (termino -> factor DIV termino .)
    DIFERENTE       reduce using rule 68 (termino -> factor DIV termino .)
    AND             reduce using rule 68 (termino -> factor DIV termino .)
    OR              reduce using rule 68 (termino -> factor DIV termino .)
    PUNTOCOMA       reduce using rule 68 (termino -> factor DIV termino .)
    COMA            reduce using rule 68 (termino -> factor DIV termino .)
    PARENT_C        reduce using rule 68 (termino -> factor DIV termino .)
    CORCHETE_C      reduce using rule 68 (termino -> factor DIV termino .)
    HASTA           reduce using rule 68 (termino -> factor DIV termino .)
    HACER           reduce using rule 68 (termino -> factor DIV termino .)


state 162

    (69) factor -> PARENT_A expresion PARENT_C .

    POR             reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    DIV             reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    MAS             reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    MENOS           reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    MAYORQUE        reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    MENORQUE        reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    MAYORIGUAL      reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    MENORIGUAL      reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    IGUALIGUAL      reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    DIFERENTE       reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    AND             reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    OR              reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    PUNTOCOMA       reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    COMA            reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    PARENT_C        reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    CORCHETE_C      reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    HASTA           reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)
    HACER           reduce using rule 69 (factor -> PARENT_A expresion PARENT_C .)


state 163

    (50) expresiones -> expresion COMA expresion .

    PARENT_C        reduce using rule 50 (expresiones -> expresion COMA expresion .)


state 164

    (22) variables -> variable COMA variables .

    PARENT_C        reduce using rule 22 (variables -> variable COMA variables .)


state 165

    (81) escr -> escritura_dos COMA escr .

    PARENT_C        reduce using rule 81 (escr -> escritura_dos COMA escr .)


state 166

    (85) else -> SINO LLAVE_A estatutos_dos LLAVE_C .

    ID              reduce using rule 85 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 85 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 85 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 85 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 85 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 85 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 85 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 85 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)


state 167

    (87) ciclo_for -> DESDE variable IGUAL expresion HASTA . expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (51) expresion -> . t_expresion
    (52) expresion -> . t_expresion OR expresion
    (53) t_expresion -> . g_expresion
    (54) t_expresion -> . g_expresion AND t_expresion
    (55) g_expresion -> . m_expresion
    (56) g_expresion -> . m_expresion op_logicos m_expresion
    (63) m_expresion -> . termino
    (64) m_expresion -> . termino MAS m_expresion
    (65) m_expresion -> . termino MENOS m_expresion
    (66) termino -> . factor
    (67) termino -> . factor POR termino
    (68) termino -> . factor DIV termino
    (69) factor -> . PARENT_A expresion PARENT_C
    (70) factor -> . CTE_I
    (71) factor -> . CTE_F
    (72) factor -> . CTE_CH
    (73) factor -> . variable
    (74) factor -> . llamada
    (19) variable -> . ID
    (20) variable -> . ID dim
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C

    PARENT_A        shift and go to state 101
    CTE_I           shift and go to state 102
    CTE_F           shift and go to state 103
    CTE_CH          shift and go to state 104
    ID              shift and go to state 106

    variable                       shift and go to state 94
    expresion                      shift and go to state 170
    t_expresion                    shift and go to state 96
    g_expresion                    shift and go to state 97
    m_expresion                    shift and go to state 98
    termino                        shift and go to state 99
    factor                         shift and go to state 100
    llamada                        shift and go to state 105

state 168

    (86) ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 171


state 169

    (84) if -> SI PARENT_A expresion PARENT_C ENTONCES . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 172


state 170

    (87) ciclo_for -> DESDE variable IGUAL expresion HASTA expresion . HACER LLAVE_A estatutos_dos LLAVE_C

    HACER           shift and go to state 173


state 171

    (86) ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A . estatutos_dos LLAVE_C
    (44) estatutos_dos -> . estatutos
    (45) estatutos_dos -> . estatutos estatutos_dos
    (36) estatutos -> . asignacion PUNTOCOMA
    (37) estatutos -> . llamada PUNTOCOMA
    (38) estatutos -> . retorno PUNTOCOMA
    (39) estatutos -> . lectura PUNTOCOMA
    (40) estatutos -> . escritura PUNTOCOMA
    (41) estatutos -> . decision
    (42) estatutos -> . ciclo_for
    (43) estatutos -> . ciclo_while
    (46) asignacion -> . variable IGUAL expresion
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C
    (75) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (76) lectura -> . LEER PARENT_A variables PARENT_C
    (77) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (82) decision -> . if
    (83) decision -> . if else
    (87) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (86) ciclo_while -> . MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
    (19) variable -> . ID
    (20) variable -> . ID dim
    (84) if -> . SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 51
    REGRESA         shift and go to state 52
    LEER            shift and go to state 53
    ESCRIBIR        shift and go to state 54
    DESDE           shift and go to state 56
    MIENTRAS        shift and go to state 57
    SI              shift and go to state 58

    estatutos_dos                  shift and go to state 174
    estatutos                      shift and go to state 41
    asignacion                     shift and go to state 42
    llamada                        shift and go to state 43
    retorno                        shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    decision                       shift and go to state 47
    ciclo_for                      shift and go to state 48
    ciclo_while                    shift and go to state 49
    variable                       shift and go to state 50
    if                             shift and go to state 55

state 172

    (84) if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A . estatutos_dos LLAVE_C
    (44) estatutos_dos -> . estatutos
    (45) estatutos_dos -> . estatutos estatutos_dos
    (36) estatutos -> . asignacion PUNTOCOMA
    (37) estatutos -> . llamada PUNTOCOMA
    (38) estatutos -> . retorno PUNTOCOMA
    (39) estatutos -> . lectura PUNTOCOMA
    (40) estatutos -> . escritura PUNTOCOMA
    (41) estatutos -> . decision
    (42) estatutos -> . ciclo_for
    (43) estatutos -> . ciclo_while
    (46) asignacion -> . variable IGUAL expresion
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C
    (75) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (76) lectura -> . LEER PARENT_A variables PARENT_C
    (77) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (82) decision -> . if
    (83) decision -> . if else
    (87) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (86) ciclo_while -> . MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
    (19) variable -> . ID
    (20) variable -> . ID dim
    (84) if -> . SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 51
    REGRESA         shift and go to state 52
    LEER            shift and go to state 53
    ESCRIBIR        shift and go to state 54
    DESDE           shift and go to state 56
    MIENTRAS        shift and go to state 57
    SI              shift and go to state 58

    estatutos_dos                  shift and go to state 175
    estatutos                      shift and go to state 41
    asignacion                     shift and go to state 42
    llamada                        shift and go to state 43
    retorno                        shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    decision                       shift and go to state 47
    ciclo_for                      shift and go to state 48
    ciclo_while                    shift and go to state 49
    variable                       shift and go to state 50
    if                             shift and go to state 55

state 173

    (87) ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 176


state 174

    (86) ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 177


state 175

    (84) if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 178


state 176

    (87) ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A . estatutos_dos LLAVE_C
    (44) estatutos_dos -> . estatutos
    (45) estatutos_dos -> . estatutos estatutos_dos
    (36) estatutos -> . asignacion PUNTOCOMA
    (37) estatutos -> . llamada PUNTOCOMA
    (38) estatutos -> . retorno PUNTOCOMA
    (39) estatutos -> . lectura PUNTOCOMA
    (40) estatutos -> . escritura PUNTOCOMA
    (41) estatutos -> . decision
    (42) estatutos -> . ciclo_for
    (43) estatutos -> . ciclo_while
    (46) asignacion -> . variable IGUAL expresion
    (47) llamada -> . ID PARENT_A PARENT_C
    (48) llamada -> . ID PARENT_A expresiones PARENT_C
    (75) retorno -> . REGRESA PARENT_A expresion PARENT_C
    (76) lectura -> . LEER PARENT_A variables PARENT_C
    (77) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (82) decision -> . if
    (83) decision -> . if else
    (87) ciclo_for -> . DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C
    (86) ciclo_while -> . MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C
    (19) variable -> . ID
    (20) variable -> . ID dim
    (84) if -> . SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 51
    REGRESA         shift and go to state 52
    LEER            shift and go to state 53
    ESCRIBIR        shift and go to state 54
    DESDE           shift and go to state 56
    MIENTRAS        shift and go to state 57
    SI              shift and go to state 58

    variable                       shift and go to state 50
    estatutos_dos                  shift and go to state 179
    estatutos                      shift and go to state 41
    asignacion                     shift and go to state 42
    llamada                        shift and go to state 43
    retorno                        shift and go to state 44
    lectura                        shift and go to state 45
    escritura                      shift and go to state 46
    decision                       shift and go to state 47
    ciclo_for                      shift and go to state 48
    ciclo_while                    shift and go to state 49
    if                             shift and go to state 55

state 177

    (86) ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .

    ID              reduce using rule 86 (ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 86 (ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 86 (ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 86 (ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 86 (ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 86 (ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 86 (ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 86 (ciclo_while -> MIENTRAS PARENT_A expresion PARENT_C HAZ LLAVE_A estatutos_dos LLAVE_C .)


state 178

    (84) if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .

    SINO            reduce using rule 84 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    ID              reduce using rule 84 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 84 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 84 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 84 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 84 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 84 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 84 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 84 (if -> SI PARENT_A expresion PARENT_C ENTONCES LLAVE_A estatutos_dos LLAVE_C .)


state 179

    (87) ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 180


state 180

    (87) ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .

    ID              reduce using rule 87 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 87 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 87 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 87 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 87 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 87 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 87 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 87 (ciclo_for -> DESDE variable IGUAL expresion HASTA expresion HACER LLAVE_A estatutos_dos LLAVE_C .)

