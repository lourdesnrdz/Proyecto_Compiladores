Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA ID PUNTOCOMA prog
Rule 2     prog -> r_genera_goto_main main
Rule 3     prog -> r_genera_goto_main dec_vars dec_funciones main
Rule 4     prog -> r_genera_goto_main dec_vars main
Rule 5     prog -> r_genera_goto_main dec_funciones main
Rule 6     r_genera_goto_main -> <empty>
Rule 7     main -> PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est
Rule 8     actualiza_func_name -> <empty>
Rule 9     dec_vars -> VAR vars save_vars
Rule 10    vars -> tipo_simple ids_simple PUNTOCOMA
Rule 11    vars -> tipo_simple ids_simple PUNTOCOMA vars
Rule 12    save_vars -> <empty>
Rule 13    tipo_simple -> INT
Rule 14    tipo_simple -> FLOAT
Rule 15    tipo_simple -> CHAR
Rule 16    ids_simple -> ID save_vars_name
Rule 17    ids_simple -> ID save_vars_name dimension
Rule 18    ids_simple -> ID save_vars_name COMA ids_simple
Rule 19    ids_simple -> ID save_vars_name dimension COMA ids_simple
Rule 20    save_vars_name -> <empty>
Rule 21    dimension -> CORCHETE_A CTE_I CORCHETE_C
Rule 22    variable -> ID r_push_id
Rule 23    variable -> ID r_push_id dim
Rule 24    r_push_id -> <empty>
Rule 25    variables -> variable r_generate_quad_leer
Rule 26    variables -> variable r_generate_quad_leer COMA variables
Rule 27    dim -> CORCHETE_A expresion CORCHETE_C
Rule 28    dec_funciones -> funcion r_generate_endfunc
Rule 29    dec_funciones -> funcion r_generate_endfunc dec_funciones
Rule 30    r_generate_endfunc -> <empty>
Rule 31    funcion -> FUNCION tipo_simple ID create_func_table func_dos
Rule 32    funcion -> FUNCION VOID func_type_void ID create_func_table func_dos
Rule 33    func_type_void -> <empty>
Rule 34    create_func_table -> <empty>
Rule 35    func_dos -> PARENT_A PARENT_C var_funcs
Rule 36    func_dos -> PARENT_A parametros PARENT_C save_params var_funcs
Rule 37    save_params -> <empty>
Rule 38    var_funcs -> dec_est
Rule 39    var_funcs -> dec_vars dec_est
Rule 40    parametros -> tipo_simple ID save_params_list
Rule 41    parametros -> tipo_simple ID save_params_list COMA parametros
Rule 42    save_params_list -> <empty>
Rule 43    dec_est -> LLAVE_A LLAVE_C
Rule 44    dec_est -> LLAVE_A estatutos_dos LLAVE_C
Rule 45    estatutos -> asignacion PUNTOCOMA
Rule 46    estatutos -> llamada PUNTOCOMA
Rule 47    estatutos -> retorno PUNTOCOMA
Rule 48    estatutos -> lectura PUNTOCOMA
Rule 49    estatutos -> escritura PUNTOCOMA
Rule 50    estatutos -> decision
Rule 51    estatutos -> ciclo_for
Rule 52    estatutos -> ciclo_while
Rule 53    estatutos_dos -> estatutos
Rule 54    estatutos_dos -> estatutos estatutos_dos
Rule 55    asignacion -> variable IGUAL r_push_oper expresion r_generate_quad_asig
Rule 56    r_generate_quad_asig -> <empty>
Rule 57    llamada -> ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
Rule 58    llamada -> ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
Rule 59    r_check_func_exists -> <empty>
Rule 60    r_generate_ERA -> <empty>
Rule 61    r_generate_gosub -> <empty>
Rule 62    llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
Rule 63    llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos
Rule 64    r_generate_ERA_dos -> <empty>
Rule 65    r_generate_gosub_dos -> <empty>
Rule 66    expresiones -> expresion r_generate_parameter
Rule 67    expresiones -> expresion r_generate_parameter COMA r_act_param_count expresiones
Rule 68    r_generate_parameter -> <empty>
Rule 69    r_act_param_count -> <empty>
Rule 70    expresion -> t_expresion r_generate_quad_or
Rule 71    expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion
Rule 72    r_generate_quad_or -> <empty>
Rule 73    t_expresion -> g_expresion r_generate_quad_and
Rule 74    t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion
Rule 75    r_generate_quad_and -> <empty>
Rule 76    g_expresion -> m_expresion r_generate_quad_logicos
Rule 77    g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos
Rule 78    r_generate_quad_logicos -> <empty>
Rule 79    op_logicos -> MAYORQUE r_push_oper
Rule 80    op_logicos -> MENORQUE r_push_oper
Rule 81    op_logicos -> MAYORIGUAL r_push_oper
Rule 82    op_logicos -> MENORIGUAL r_push_oper
Rule 83    op_logicos -> IGUALIGUAL r_push_oper
Rule 84    op_logicos -> DIFERENTE r_push_oper
Rule 85    m_expresion -> termino r_generate_quad_masmen
Rule 86    m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion
Rule 87    m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion
Rule 88    termino -> factor r_generate_quad_muldiv
Rule 89    termino -> factor r_generate_quad_muldiv POR r_push_oper termino
Rule 90    termino -> factor r_generate_quad_muldiv DIV r_push_oper termino
Rule 91    r_push_oper -> <empty>
Rule 92    r_generate_quad_masmen -> <empty>
Rule 93    r_generate_quad_muldiv -> <empty>
Rule 94    factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff
Rule 95    factor -> CTE_I r_push_cte_i
Rule 96    factor -> CTE_F r_push_cte_f
Rule 97    factor -> CTE_CH r_push_cte_c
Rule 98    factor -> variable
Rule 99    factor -> llamada_exp
Rule 100   r_push_cte_i -> <empty>
Rule 101   r_push_cte_f -> <empty>
Rule 102   r_push_cte_c -> <empty>
Rule 103   r_push_ff -> <empty>
Rule 104   r_pop_ff -> <empty>
Rule 105   retorno -> REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
Rule 106   r_generate_quad_retorno -> <empty>
Rule 107   lectura -> LEER PARENT_A variables PARENT_C
Rule 108   r_generate_quad_leer -> <empty>
Rule 109   escritura -> ESCRIBIR PARENT_A escr PARENT_C
Rule 110   escritura_dos -> CTE_STR r_push_cte_str
Rule 111   escritura_dos -> expresion
Rule 112   r_push_cte_str -> <empty>
Rule 113   r_generate_quad_escr -> <empty>
Rule 114   escr -> escritura_dos r_generate_quad_escr
Rule 115   escr -> escritura_dos r_generate_quad_escr COMA escr
Rule 116   decision -> if r_end_if
Rule 117   decision -> if r_goto_ifelse else r_end_if
Rule 118   if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C
Rule 119   r_check_exp_type -> <empty>
Rule 120   r_end_if -> <empty>
Rule 121   r_goto_ifelse -> <empty>
Rule 122   else -> SINO LLAVE_A estatutos_dos LLAVE_C
Rule 123   ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
Rule 124   r_goto_while -> <empty>
Rule 125   r_save_jump -> <empty>
Rule 126   ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
Rule 127   r_expresion_for -> <empty>
Rule 128   r_save_var_for -> <empty>
Rule 129   r_generate_quad_asig_for -> <empty>
Rule 130   r_check_exp_for -> <empty>
Rule 131   r_goto_for -> <empty>

Terminals, with rules where they appear

AND                  : 74
CHAR                 : 15
COMA                 : 18 19 26 41 67 115
CORCHETE_A           : 21 27
CORCHETE_C           : 21 27
CTE_CH               : 97
CTE_F                : 96
CTE_I                : 21 95
CTE_STR              : 110
DESDE                : 126
DIFERENTE            : 84
DIV                  : 90
ENTONCES             : 118
ESCRIBIR             : 109
FLOAT                : 14
FUNCION              : 31 32
HACER                : 126
HASTA                : 126
HAZ                  : 123
ID                   : 1 16 17 18 19 22 23 31 32 40 41 57 58 62 63 126
IGUAL                : 55 126
IGUALIGUAL           : 83
INT                  : 13
LEER                 : 107
LLAVE_A              : 43 44 118 122 123 126
LLAVE_C              : 43 44 118 122 123 126
MAS                  : 86
MAYORIGUAL           : 81
MAYORQUE             : 79
MENORIGUAL           : 82
MENORQUE             : 80
MENOS                : 87
MIENTRAS             : 123
OR                   : 71
PARENT_A             : 7 35 36 57 58 62 63 94 105 107 109 118 123
PARENT_C             : 7 35 36 57 58 62 63 94 105 107 109 118 123
POR                  : 89
PRINCIPAL            : 7
PROGRAMA             : 1
PUNTOCOMA            : 1 10 11 45 46 47 48 49
REGRESA              : 105
SI                   : 118
SINO                 : 122
VAR                  : 9
VOID                 : 32
error                : 

Nonterminals, with rules where they appear

actualiza_func_name  : 7
asignacion           : 45
ciclo_for            : 51
ciclo_while          : 52
create_func_table    : 31 32
dec_est              : 7 38 39
dec_funciones        : 3 5 29
dec_vars             : 3 4 39
decision             : 50
dim                  : 23
dimension            : 17 19
else                 : 117
escr                 : 109 115
escritura            : 49
escritura_dos        : 114 115
estatutos            : 53 54
estatutos_dos        : 44 54 118 122 123 126
expresion            : 27 55 66 67 71 94 105 111 118 123 126 126
expresiones          : 58 63 67
factor               : 88 89 90
func_dos             : 31 32
func_type_void       : 32
funcion              : 28 29
g_expresion          : 73 74
ids_simple           : 10 11 18 19
if                   : 116 117
lectura              : 48
llamada              : 46
llamada_exp          : 99
m_expresion          : 76 77 77 86 87
main                 : 2 3 4 5
op_logicos           : 77
parametros           : 36 41
prog                 : 1
programa             : 0
r_act_param_count    : 67
r_check_exp_for      : 126
r_check_exp_type     : 118 123
r_check_func_exists  : 57 58 62 63
r_end_if             : 116 117
r_expresion_for      : 126
r_genera_goto_main   : 2 3 4 5
r_generate_ERA       : 57 58
r_generate_ERA_dos   : 62 63
r_generate_endfunc   : 28 29
r_generate_gosub     : 57 58
r_generate_gosub_dos : 62 63
r_generate_parameter : 66 67
r_generate_quad_and  : 73 74
r_generate_quad_asig : 55
r_generate_quad_asig_for : 126
r_generate_quad_escr : 114 115
r_generate_quad_leer : 25 26
r_generate_quad_logicos : 76 77
r_generate_quad_masmen : 85 86 87
r_generate_quad_muldiv : 88 89 90
r_generate_quad_or   : 70 71
r_generate_quad_retorno : 105
r_goto_for           : 126
r_goto_ifelse        : 117
r_goto_while         : 123
r_pop_ff             : 94
r_push_cte_c         : 97
r_push_cte_f         : 96
r_push_cte_i         : 95
r_push_cte_str       : 110
r_push_ff            : 94
r_push_id            : 22 23
r_push_oper          : 55 71 74 79 80 81 82 83 84 86 87 89 90
r_save_jump          : 123 126
r_save_var_for       : 126
retorno              : 47
save_params          : 36
save_params_list     : 40 41
save_vars            : 9
save_vars_name       : 16 17 18 19
t_expresion          : 70 71 74
termino              : 85 86 87 89 90
tipo_simple          : 10 11 31 40 41
var_funcs            : 35 36
variable             : 25 26 55 98
variables            : 26 107
vars                 : 9 11

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA ID PUNTOCOMA prog

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . ID PUNTOCOMA prog

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAMA ID . PUNTOCOMA prog

    PUNTOCOMA       shift and go to state 4


state 4

    (1) programa -> PROGRAMA ID PUNTOCOMA . prog
    (2) prog -> . r_genera_goto_main main
    (3) prog -> . r_genera_goto_main dec_vars dec_funciones main
    (4) prog -> . r_genera_goto_main dec_vars main
    (5) prog -> . r_genera_goto_main dec_funciones main
    (6) r_genera_goto_main -> .

    PRINCIPAL       reduce using rule 6 (r_genera_goto_main -> .)
    VAR             reduce using rule 6 (r_genera_goto_main -> .)
    FUNCION         reduce using rule 6 (r_genera_goto_main -> .)

    prog                           shift and go to state 5
    r_genera_goto_main             shift and go to state 6

state 5

    (1) programa -> PROGRAMA ID PUNTOCOMA prog .

    $end            reduce using rule 1 (programa -> PROGRAMA ID PUNTOCOMA prog .)


state 6

    (2) prog -> r_genera_goto_main . main
    (3) prog -> r_genera_goto_main . dec_vars dec_funciones main
    (4) prog -> r_genera_goto_main . dec_vars main
    (5) prog -> r_genera_goto_main . dec_funciones main
    (7) main -> . PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est
    (9) dec_vars -> . VAR vars save_vars
    (28) dec_funciones -> . funcion r_generate_endfunc
    (29) dec_funciones -> . funcion r_generate_endfunc dec_funciones
    (31) funcion -> . FUNCION tipo_simple ID create_func_table func_dos
    (32) funcion -> . FUNCION VOID func_type_void ID create_func_table func_dos

    PRINCIPAL       shift and go to state 10
    VAR             shift and go to state 11
    FUNCION         shift and go to state 13

    main                           shift and go to state 7
    dec_vars                       shift and go to state 8
    dec_funciones                  shift and go to state 9
    funcion                        shift and go to state 12

state 7

    (2) prog -> r_genera_goto_main main .

    $end            reduce using rule 2 (prog -> r_genera_goto_main main .)


state 8

    (3) prog -> r_genera_goto_main dec_vars . dec_funciones main
    (4) prog -> r_genera_goto_main dec_vars . main
    (28) dec_funciones -> . funcion r_generate_endfunc
    (29) dec_funciones -> . funcion r_generate_endfunc dec_funciones
    (7) main -> . PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est
    (31) funcion -> . FUNCION tipo_simple ID create_func_table func_dos
    (32) funcion -> . FUNCION VOID func_type_void ID create_func_table func_dos

    PRINCIPAL       shift and go to state 10
    FUNCION         shift and go to state 13

    dec_funciones                  shift and go to state 14
    main                           shift and go to state 15
    funcion                        shift and go to state 12

state 9

    (5) prog -> r_genera_goto_main dec_funciones . main
    (7) main -> . PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est

    PRINCIPAL       shift and go to state 10

    main                           shift and go to state 16

state 10

    (7) main -> PRINCIPAL . actualiza_func_name PARENT_A PARENT_C dec_est
    (8) actualiza_func_name -> .

    PARENT_A        reduce using rule 8 (actualiza_func_name -> .)

    actualiza_func_name            shift and go to state 17

state 11

    (9) dec_vars -> VAR . vars save_vars
    (10) vars -> . tipo_simple ids_simple PUNTOCOMA
    (11) vars -> . tipo_simple ids_simple PUNTOCOMA vars
    (13) tipo_simple -> . INT
    (14) tipo_simple -> . FLOAT
    (15) tipo_simple -> . CHAR

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    vars                           shift and go to state 18
    tipo_simple                    shift and go to state 19

state 12

    (28) dec_funciones -> funcion . r_generate_endfunc
    (29) dec_funciones -> funcion . r_generate_endfunc dec_funciones
    (30) r_generate_endfunc -> .

    FUNCION         reduce using rule 30 (r_generate_endfunc -> .)
    PRINCIPAL       reduce using rule 30 (r_generate_endfunc -> .)

    r_generate_endfunc             shift and go to state 23

state 13

    (31) funcion -> FUNCION . tipo_simple ID create_func_table func_dos
    (32) funcion -> FUNCION . VOID func_type_void ID create_func_table func_dos
    (13) tipo_simple -> . INT
    (14) tipo_simple -> . FLOAT
    (15) tipo_simple -> . CHAR

    VOID            shift and go to state 25
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    tipo_simple                    shift and go to state 24

state 14

    (3) prog -> r_genera_goto_main dec_vars dec_funciones . main
    (7) main -> . PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est

    PRINCIPAL       shift and go to state 10

    main                           shift and go to state 26

state 15

    (4) prog -> r_genera_goto_main dec_vars main .

    $end            reduce using rule 4 (prog -> r_genera_goto_main dec_vars main .)


state 16

    (5) prog -> r_genera_goto_main dec_funciones main .

    $end            reduce using rule 5 (prog -> r_genera_goto_main dec_funciones main .)


state 17

    (7) main -> PRINCIPAL actualiza_func_name . PARENT_A PARENT_C dec_est

    PARENT_A        shift and go to state 27


state 18

    (9) dec_vars -> VAR vars . save_vars
    (12) save_vars -> .

    PRINCIPAL       reduce using rule 12 (save_vars -> .)
    FUNCION         reduce using rule 12 (save_vars -> .)
    LLAVE_A         reduce using rule 12 (save_vars -> .)

    save_vars                      shift and go to state 28

state 19

    (10) vars -> tipo_simple . ids_simple PUNTOCOMA
    (11) vars -> tipo_simple . ids_simple PUNTOCOMA vars
    (16) ids_simple -> . ID save_vars_name
    (17) ids_simple -> . ID save_vars_name dimension
    (18) ids_simple -> . ID save_vars_name COMA ids_simple
    (19) ids_simple -> . ID save_vars_name dimension COMA ids_simple

    ID              shift and go to state 30

    ids_simple                     shift and go to state 29

state 20

    (13) tipo_simple -> INT .

    ID              reduce using rule 13 (tipo_simple -> INT .)


state 21

    (14) tipo_simple -> FLOAT .

    ID              reduce using rule 14 (tipo_simple -> FLOAT .)


state 22

    (15) tipo_simple -> CHAR .

    ID              reduce using rule 15 (tipo_simple -> CHAR .)


state 23

    (28) dec_funciones -> funcion r_generate_endfunc .
    (29) dec_funciones -> funcion r_generate_endfunc . dec_funciones
    (28) dec_funciones -> . funcion r_generate_endfunc
    (29) dec_funciones -> . funcion r_generate_endfunc dec_funciones
    (31) funcion -> . FUNCION tipo_simple ID create_func_table func_dos
    (32) funcion -> . FUNCION VOID func_type_void ID create_func_table func_dos

    PRINCIPAL       reduce using rule 28 (dec_funciones -> funcion r_generate_endfunc .)
    FUNCION         shift and go to state 13

    funcion                        shift and go to state 12
    dec_funciones                  shift and go to state 31

state 24

    (31) funcion -> FUNCION tipo_simple . ID create_func_table func_dos

    ID              shift and go to state 32


state 25

    (32) funcion -> FUNCION VOID . func_type_void ID create_func_table func_dos
    (33) func_type_void -> .

    ID              reduce using rule 33 (func_type_void -> .)

    func_type_void                 shift and go to state 33

state 26

    (3) prog -> r_genera_goto_main dec_vars dec_funciones main .

    $end            reduce using rule 3 (prog -> r_genera_goto_main dec_vars dec_funciones main .)


state 27

    (7) main -> PRINCIPAL actualiza_func_name PARENT_A . PARENT_C dec_est

    PARENT_C        shift and go to state 34


state 28

    (9) dec_vars -> VAR vars save_vars .

    PRINCIPAL       reduce using rule 9 (dec_vars -> VAR vars save_vars .)
    FUNCION         reduce using rule 9 (dec_vars -> VAR vars save_vars .)
    LLAVE_A         reduce using rule 9 (dec_vars -> VAR vars save_vars .)


state 29

    (10) vars -> tipo_simple ids_simple . PUNTOCOMA
    (11) vars -> tipo_simple ids_simple . PUNTOCOMA vars

    PUNTOCOMA       shift and go to state 35


state 30

    (16) ids_simple -> ID . save_vars_name
    (17) ids_simple -> ID . save_vars_name dimension
    (18) ids_simple -> ID . save_vars_name COMA ids_simple
    (19) ids_simple -> ID . save_vars_name dimension COMA ids_simple
    (20) save_vars_name -> .

    COMA            reduce using rule 20 (save_vars_name -> .)
    CORCHETE_A      reduce using rule 20 (save_vars_name -> .)
    PUNTOCOMA       reduce using rule 20 (save_vars_name -> .)

    save_vars_name                 shift and go to state 36

state 31

    (29) dec_funciones -> funcion r_generate_endfunc dec_funciones .

    PRINCIPAL       reduce using rule 29 (dec_funciones -> funcion r_generate_endfunc dec_funciones .)


state 32

    (31) funcion -> FUNCION tipo_simple ID . create_func_table func_dos
    (34) create_func_table -> .

    PARENT_A        reduce using rule 34 (create_func_table -> .)

    create_func_table              shift and go to state 37

state 33

    (32) funcion -> FUNCION VOID func_type_void . ID create_func_table func_dos

    ID              shift and go to state 38


state 34

    (7) main -> PRINCIPAL actualiza_func_name PARENT_A PARENT_C . dec_est
    (43) dec_est -> . LLAVE_A LLAVE_C
    (44) dec_est -> . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 40

    dec_est                        shift and go to state 39

state 35

    (10) vars -> tipo_simple ids_simple PUNTOCOMA .
    (11) vars -> tipo_simple ids_simple PUNTOCOMA . vars
    (10) vars -> . tipo_simple ids_simple PUNTOCOMA
    (11) vars -> . tipo_simple ids_simple PUNTOCOMA vars
    (13) tipo_simple -> . INT
    (14) tipo_simple -> . FLOAT
    (15) tipo_simple -> . CHAR

    PRINCIPAL       reduce using rule 10 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    FUNCION         reduce using rule 10 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    LLAVE_A         reduce using rule 10 (vars -> tipo_simple ids_simple PUNTOCOMA .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    tipo_simple                    shift and go to state 19
    vars                           shift and go to state 41

state 36

    (16) ids_simple -> ID save_vars_name .
    (17) ids_simple -> ID save_vars_name . dimension
    (18) ids_simple -> ID save_vars_name . COMA ids_simple
    (19) ids_simple -> ID save_vars_name . dimension COMA ids_simple
    (21) dimension -> . CORCHETE_A CTE_I CORCHETE_C

    PUNTOCOMA       reduce using rule 16 (ids_simple -> ID save_vars_name .)
    COMA            shift and go to state 43
    CORCHETE_A      shift and go to state 44

    dimension                      shift and go to state 42

state 37

    (31) funcion -> FUNCION tipo_simple ID create_func_table . func_dos
    (35) func_dos -> . PARENT_A PARENT_C var_funcs
    (36) func_dos -> . PARENT_A parametros PARENT_C save_params var_funcs

    PARENT_A        shift and go to state 46

    func_dos                       shift and go to state 45

state 38

    (32) funcion -> FUNCION VOID func_type_void ID . create_func_table func_dos
    (34) create_func_table -> .

    PARENT_A        reduce using rule 34 (create_func_table -> .)

    create_func_table              shift and go to state 47

state 39

    (7) main -> PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est .

    $end            reduce using rule 7 (main -> PRINCIPAL actualiza_func_name PARENT_A PARENT_C dec_est .)


state 40

    (43) dec_est -> LLAVE_A . LLAVE_C
    (44) dec_est -> LLAVE_A . estatutos_dos LLAVE_C
    (53) estatutos_dos -> . estatutos
    (54) estatutos_dos -> . estatutos estatutos_dos
    (45) estatutos -> . asignacion PUNTOCOMA
    (46) estatutos -> . llamada PUNTOCOMA
    (47) estatutos -> . retorno PUNTOCOMA
    (48) estatutos -> . lectura PUNTOCOMA
    (49) estatutos -> . escritura PUNTOCOMA
    (50) estatutos -> . decision
    (51) estatutos -> . ciclo_for
    (52) estatutos -> . ciclo_while
    (55) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (57) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (58) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (105) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (107) lectura -> . LEER PARENT_A variables PARENT_C
    (109) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (116) decision -> . if r_end_if
    (117) decision -> . if r_goto_ifelse else r_end_if
    (126) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (123) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (118) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    LLAVE_C         shift and go to state 48
    ID              shift and go to state 60
    REGRESA         shift and go to state 61
    LEER            shift and go to state 62
    ESCRIBIR        shift and go to state 63
    DESDE           shift and go to state 65
    MIENTRAS        shift and go to state 66
    SI              shift and go to state 67

    estatutos_dos                  shift and go to state 49
    estatutos                      shift and go to state 50
    asignacion                     shift and go to state 51
    llamada                        shift and go to state 52
    retorno                        shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    ciclo_for                      shift and go to state 57
    ciclo_while                    shift and go to state 58
    variable                       shift and go to state 59
    if                             shift and go to state 64

state 41

    (11) vars -> tipo_simple ids_simple PUNTOCOMA vars .

    PRINCIPAL       reduce using rule 11 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)
    FUNCION         reduce using rule 11 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)
    LLAVE_A         reduce using rule 11 (vars -> tipo_simple ids_simple PUNTOCOMA vars .)


state 42

    (17) ids_simple -> ID save_vars_name dimension .
    (19) ids_simple -> ID save_vars_name dimension . COMA ids_simple

    PUNTOCOMA       reduce using rule 17 (ids_simple -> ID save_vars_name dimension .)
    COMA            shift and go to state 68


state 43

    (18) ids_simple -> ID save_vars_name COMA . ids_simple
    (16) ids_simple -> . ID save_vars_name
    (17) ids_simple -> . ID save_vars_name dimension
    (18) ids_simple -> . ID save_vars_name COMA ids_simple
    (19) ids_simple -> . ID save_vars_name dimension COMA ids_simple

    ID              shift and go to state 30

    ids_simple                     shift and go to state 69

state 44

    (21) dimension -> CORCHETE_A . CTE_I CORCHETE_C

    CTE_I           shift and go to state 70


state 45

    (31) funcion -> FUNCION tipo_simple ID create_func_table func_dos .

    FUNCION         reduce using rule 31 (funcion -> FUNCION tipo_simple ID create_func_table func_dos .)
    PRINCIPAL       reduce using rule 31 (funcion -> FUNCION tipo_simple ID create_func_table func_dos .)


state 46

    (35) func_dos -> PARENT_A . PARENT_C var_funcs
    (36) func_dos -> PARENT_A . parametros PARENT_C save_params var_funcs
    (40) parametros -> . tipo_simple ID save_params_list
    (41) parametros -> . tipo_simple ID save_params_list COMA parametros
    (13) tipo_simple -> . INT
    (14) tipo_simple -> . FLOAT
    (15) tipo_simple -> . CHAR

    PARENT_C        shift and go to state 71
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    parametros                     shift and go to state 72
    tipo_simple                    shift and go to state 73

state 47

    (32) funcion -> FUNCION VOID func_type_void ID create_func_table . func_dos
    (35) func_dos -> . PARENT_A PARENT_C var_funcs
    (36) func_dos -> . PARENT_A parametros PARENT_C save_params var_funcs

    PARENT_A        shift and go to state 46

    func_dos                       shift and go to state 74

state 48

    (43) dec_est -> LLAVE_A LLAVE_C .

    $end            reduce using rule 43 (dec_est -> LLAVE_A LLAVE_C .)
    FUNCION         reduce using rule 43 (dec_est -> LLAVE_A LLAVE_C .)
    PRINCIPAL       reduce using rule 43 (dec_est -> LLAVE_A LLAVE_C .)


state 49

    (44) dec_est -> LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 75


state 50

    (53) estatutos_dos -> estatutos .
    (54) estatutos_dos -> estatutos . estatutos_dos
    (53) estatutos_dos -> . estatutos
    (54) estatutos_dos -> . estatutos estatutos_dos
    (45) estatutos -> . asignacion PUNTOCOMA
    (46) estatutos -> . llamada PUNTOCOMA
    (47) estatutos -> . retorno PUNTOCOMA
    (48) estatutos -> . lectura PUNTOCOMA
    (49) estatutos -> . escritura PUNTOCOMA
    (50) estatutos -> . decision
    (51) estatutos -> . ciclo_for
    (52) estatutos -> . ciclo_while
    (55) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (57) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (58) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (105) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (107) lectura -> . LEER PARENT_A variables PARENT_C
    (109) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (116) decision -> . if r_end_if
    (117) decision -> . if r_goto_ifelse else r_end_if
    (126) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (123) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (118) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    LLAVE_C         reduce using rule 53 (estatutos_dos -> estatutos .)
    ID              shift and go to state 60
    REGRESA         shift and go to state 61
    LEER            shift and go to state 62
    ESCRIBIR        shift and go to state 63
    DESDE           shift and go to state 65
    MIENTRAS        shift and go to state 66
    SI              shift and go to state 67

    estatutos                      shift and go to state 50
    estatutos_dos                  shift and go to state 76
    asignacion                     shift and go to state 51
    llamada                        shift and go to state 52
    retorno                        shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    ciclo_for                      shift and go to state 57
    ciclo_while                    shift and go to state 58
    variable                       shift and go to state 59
    if                             shift and go to state 64

state 51

    (45) estatutos -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 77


state 52

    (46) estatutos -> llamada . PUNTOCOMA

    PUNTOCOMA       shift and go to state 78


state 53

    (47) estatutos -> retorno . PUNTOCOMA

    PUNTOCOMA       shift and go to state 79


state 54

    (48) estatutos -> lectura . PUNTOCOMA

    PUNTOCOMA       shift and go to state 80


state 55

    (49) estatutos -> escritura . PUNTOCOMA

    PUNTOCOMA       shift and go to state 81


state 56

    (50) estatutos -> decision .

    ID              reduce using rule 50 (estatutos -> decision .)
    REGRESA         reduce using rule 50 (estatutos -> decision .)
    LEER            reduce using rule 50 (estatutos -> decision .)
    ESCRIBIR        reduce using rule 50 (estatutos -> decision .)
    DESDE           reduce using rule 50 (estatutos -> decision .)
    MIENTRAS        reduce using rule 50 (estatutos -> decision .)
    SI              reduce using rule 50 (estatutos -> decision .)
    LLAVE_C         reduce using rule 50 (estatutos -> decision .)


state 57

    (51) estatutos -> ciclo_for .

    ID              reduce using rule 51 (estatutos -> ciclo_for .)
    REGRESA         reduce using rule 51 (estatutos -> ciclo_for .)
    LEER            reduce using rule 51 (estatutos -> ciclo_for .)
    ESCRIBIR        reduce using rule 51 (estatutos -> ciclo_for .)
    DESDE           reduce using rule 51 (estatutos -> ciclo_for .)
    MIENTRAS        reduce using rule 51 (estatutos -> ciclo_for .)
    SI              reduce using rule 51 (estatutos -> ciclo_for .)
    LLAVE_C         reduce using rule 51 (estatutos -> ciclo_for .)


state 58

    (52) estatutos -> ciclo_while .

    ID              reduce using rule 52 (estatutos -> ciclo_while .)
    REGRESA         reduce using rule 52 (estatutos -> ciclo_while .)
    LEER            reduce using rule 52 (estatutos -> ciclo_while .)
    ESCRIBIR        reduce using rule 52 (estatutos -> ciclo_while .)
    DESDE           reduce using rule 52 (estatutos -> ciclo_while .)
    MIENTRAS        reduce using rule 52 (estatutos -> ciclo_while .)
    SI              reduce using rule 52 (estatutos -> ciclo_while .)
    LLAVE_C         reduce using rule 52 (estatutos -> ciclo_while .)


state 59

    (55) asignacion -> variable . IGUAL r_push_oper expresion r_generate_quad_asig

    IGUAL           shift and go to state 82


state 60

    (57) llamada -> ID . r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (58) llamada -> ID . r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (22) variable -> ID . r_push_id
    (23) variable -> ID . r_push_id dim
    (59) r_check_func_exists -> .
    (24) r_push_id -> .

    PARENT_A        reduce using rule 59 (r_check_func_exists -> .)
    CORCHETE_A      reduce using rule 24 (r_push_id -> .)
    IGUAL           reduce using rule 24 (r_push_id -> .)

    r_check_func_exists            shift and go to state 83
    r_push_id                      shift and go to state 84

state 61

    (105) retorno -> REGRESA . PARENT_A expresion PARENT_C r_generate_quad_retorno

    PARENT_A        shift and go to state 85


state 62

    (107) lectura -> LEER . PARENT_A variables PARENT_C

    PARENT_A        shift and go to state 86


state 63

    (109) escritura -> ESCRIBIR . PARENT_A escr PARENT_C

    PARENT_A        shift and go to state 87


state 64

    (116) decision -> if . r_end_if
    (117) decision -> if . r_goto_ifelse else r_end_if
    (120) r_end_if -> .
    (121) r_goto_ifelse -> .

    ID              reduce using rule 120 (r_end_if -> .)
    REGRESA         reduce using rule 120 (r_end_if -> .)
    LEER            reduce using rule 120 (r_end_if -> .)
    ESCRIBIR        reduce using rule 120 (r_end_if -> .)
    DESDE           reduce using rule 120 (r_end_if -> .)
    MIENTRAS        reduce using rule 120 (r_end_if -> .)
    SI              reduce using rule 120 (r_end_if -> .)
    LLAVE_C         reduce using rule 120 (r_end_if -> .)
    SINO            reduce using rule 121 (r_goto_ifelse -> .)

    r_end_if                       shift and go to state 88
    r_goto_ifelse                  shift and go to state 89

state 65

    (126) ciclo_for -> DESDE . ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for

    ID              shift and go to state 90


state 66

    (123) ciclo_while -> MIENTRAS . r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (125) r_save_jump -> .

    PARENT_A        reduce using rule 125 (r_save_jump -> .)

    r_save_jump                    shift and go to state 91

state 67

    (118) if -> SI . PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    PARENT_A        shift and go to state 92


state 68

    (19) ids_simple -> ID save_vars_name dimension COMA . ids_simple
    (16) ids_simple -> . ID save_vars_name
    (17) ids_simple -> . ID save_vars_name dimension
    (18) ids_simple -> . ID save_vars_name COMA ids_simple
    (19) ids_simple -> . ID save_vars_name dimension COMA ids_simple

    ID              shift and go to state 30

    ids_simple                     shift and go to state 93

state 69

    (18) ids_simple -> ID save_vars_name COMA ids_simple .

    PUNTOCOMA       reduce using rule 18 (ids_simple -> ID save_vars_name COMA ids_simple .)


state 70

    (21) dimension -> CORCHETE_A CTE_I . CORCHETE_C

    CORCHETE_C      shift and go to state 94


state 71

    (35) func_dos -> PARENT_A PARENT_C . var_funcs
    (38) var_funcs -> . dec_est
    (39) var_funcs -> . dec_vars dec_est
    (43) dec_est -> . LLAVE_A LLAVE_C
    (44) dec_est -> . LLAVE_A estatutos_dos LLAVE_C
    (9) dec_vars -> . VAR vars save_vars

    LLAVE_A         shift and go to state 40
    VAR             shift and go to state 11

    var_funcs                      shift and go to state 95
    dec_est                        shift and go to state 96
    dec_vars                       shift and go to state 97

state 72

    (36) func_dos -> PARENT_A parametros . PARENT_C save_params var_funcs

    PARENT_C        shift and go to state 98


state 73

    (40) parametros -> tipo_simple . ID save_params_list
    (41) parametros -> tipo_simple . ID save_params_list COMA parametros

    ID              shift and go to state 99


state 74

    (32) funcion -> FUNCION VOID func_type_void ID create_func_table func_dos .

    FUNCION         reduce using rule 32 (funcion -> FUNCION VOID func_type_void ID create_func_table func_dos .)
    PRINCIPAL       reduce using rule 32 (funcion -> FUNCION VOID func_type_void ID create_func_table func_dos .)


state 75

    (44) dec_est -> LLAVE_A estatutos_dos LLAVE_C .

    $end            reduce using rule 44 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)
    FUNCION         reduce using rule 44 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)
    PRINCIPAL       reduce using rule 44 (dec_est -> LLAVE_A estatutos_dos LLAVE_C .)


state 76

    (54) estatutos_dos -> estatutos estatutos_dos .

    LLAVE_C         reduce using rule 54 (estatutos_dos -> estatutos estatutos_dos .)


state 77

    (45) estatutos -> asignacion PUNTOCOMA .

    ID              reduce using rule 45 (estatutos -> asignacion PUNTOCOMA .)
    REGRESA         reduce using rule 45 (estatutos -> asignacion PUNTOCOMA .)
    LEER            reduce using rule 45 (estatutos -> asignacion PUNTOCOMA .)
    ESCRIBIR        reduce using rule 45 (estatutos -> asignacion PUNTOCOMA .)
    DESDE           reduce using rule 45 (estatutos -> asignacion PUNTOCOMA .)
    MIENTRAS        reduce using rule 45 (estatutos -> asignacion PUNTOCOMA .)
    SI              reduce using rule 45 (estatutos -> asignacion PUNTOCOMA .)
    LLAVE_C         reduce using rule 45 (estatutos -> asignacion PUNTOCOMA .)


state 78

    (46) estatutos -> llamada PUNTOCOMA .

    ID              reduce using rule 46 (estatutos -> llamada PUNTOCOMA .)
    REGRESA         reduce using rule 46 (estatutos -> llamada PUNTOCOMA .)
    LEER            reduce using rule 46 (estatutos -> llamada PUNTOCOMA .)
    ESCRIBIR        reduce using rule 46 (estatutos -> llamada PUNTOCOMA .)
    DESDE           reduce using rule 46 (estatutos -> llamada PUNTOCOMA .)
    MIENTRAS        reduce using rule 46 (estatutos -> llamada PUNTOCOMA .)
    SI              reduce using rule 46 (estatutos -> llamada PUNTOCOMA .)
    LLAVE_C         reduce using rule 46 (estatutos -> llamada PUNTOCOMA .)


state 79

    (47) estatutos -> retorno PUNTOCOMA .

    ID              reduce using rule 47 (estatutos -> retorno PUNTOCOMA .)
    REGRESA         reduce using rule 47 (estatutos -> retorno PUNTOCOMA .)
    LEER            reduce using rule 47 (estatutos -> retorno PUNTOCOMA .)
    ESCRIBIR        reduce using rule 47 (estatutos -> retorno PUNTOCOMA .)
    DESDE           reduce using rule 47 (estatutos -> retorno PUNTOCOMA .)
    MIENTRAS        reduce using rule 47 (estatutos -> retorno PUNTOCOMA .)
    SI              reduce using rule 47 (estatutos -> retorno PUNTOCOMA .)
    LLAVE_C         reduce using rule 47 (estatutos -> retorno PUNTOCOMA .)


state 80

    (48) estatutos -> lectura PUNTOCOMA .

    ID              reduce using rule 48 (estatutos -> lectura PUNTOCOMA .)
    REGRESA         reduce using rule 48 (estatutos -> lectura PUNTOCOMA .)
    LEER            reduce using rule 48 (estatutos -> lectura PUNTOCOMA .)
    ESCRIBIR        reduce using rule 48 (estatutos -> lectura PUNTOCOMA .)
    DESDE           reduce using rule 48 (estatutos -> lectura PUNTOCOMA .)
    MIENTRAS        reduce using rule 48 (estatutos -> lectura PUNTOCOMA .)
    SI              reduce using rule 48 (estatutos -> lectura PUNTOCOMA .)
    LLAVE_C         reduce using rule 48 (estatutos -> lectura PUNTOCOMA .)


state 81

    (49) estatutos -> escritura PUNTOCOMA .

    ID              reduce using rule 49 (estatutos -> escritura PUNTOCOMA .)
    REGRESA         reduce using rule 49 (estatutos -> escritura PUNTOCOMA .)
    LEER            reduce using rule 49 (estatutos -> escritura PUNTOCOMA .)
    ESCRIBIR        reduce using rule 49 (estatutos -> escritura PUNTOCOMA .)
    DESDE           reduce using rule 49 (estatutos -> escritura PUNTOCOMA .)
    MIENTRAS        reduce using rule 49 (estatutos -> escritura PUNTOCOMA .)
    SI              reduce using rule 49 (estatutos -> escritura PUNTOCOMA .)
    LLAVE_C         reduce using rule 49 (estatutos -> escritura PUNTOCOMA .)


state 82

    (55) asignacion -> variable IGUAL . r_push_oper expresion r_generate_quad_asig
    (91) r_push_oper -> .

    PARENT_A        reduce using rule 91 (r_push_oper -> .)
    CTE_I           reduce using rule 91 (r_push_oper -> .)
    CTE_F           reduce using rule 91 (r_push_oper -> .)
    CTE_CH          reduce using rule 91 (r_push_oper -> .)
    ID              reduce using rule 91 (r_push_oper -> .)

    r_push_oper                    shift and go to state 100

state 83

    (57) llamada -> ID r_check_func_exists . PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (58) llamada -> ID r_check_func_exists . PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub

    PARENT_A        shift and go to state 101


state 84

    (22) variable -> ID r_push_id .
    (23) variable -> ID r_push_id . dim
    (27) dim -> . CORCHETE_A expresion CORCHETE_C

    IGUAL           reduce using rule 22 (variable -> ID r_push_id .)
    POR             reduce using rule 22 (variable -> ID r_push_id .)
    DIV             reduce using rule 22 (variable -> ID r_push_id .)
    MAS             reduce using rule 22 (variable -> ID r_push_id .)
    MENOS           reduce using rule 22 (variable -> ID r_push_id .)
    MAYORQUE        reduce using rule 22 (variable -> ID r_push_id .)
    MENORQUE        reduce using rule 22 (variable -> ID r_push_id .)
    MAYORIGUAL      reduce using rule 22 (variable -> ID r_push_id .)
    MENORIGUAL      reduce using rule 22 (variable -> ID r_push_id .)
    IGUALIGUAL      reduce using rule 22 (variable -> ID r_push_id .)
    DIFERENTE       reduce using rule 22 (variable -> ID r_push_id .)
    AND             reduce using rule 22 (variable -> ID r_push_id .)
    OR              reduce using rule 22 (variable -> ID r_push_id .)
    PARENT_C        reduce using rule 22 (variable -> ID r_push_id .)
    COMA            reduce using rule 22 (variable -> ID r_push_id .)
    PUNTOCOMA       reduce using rule 22 (variable -> ID r_push_id .)
    CORCHETE_C      reduce using rule 22 (variable -> ID r_push_id .)
    HASTA           reduce using rule 22 (variable -> ID r_push_id .)
    HACER           reduce using rule 22 (variable -> ID r_push_id .)
    CORCHETE_A      shift and go to state 103

    dim                            shift and go to state 102

state 85

    (105) retorno -> REGRESA PARENT_A . expresion PARENT_C r_generate_quad_retorno
    (70) expresion -> . t_expresion r_generate_quad_or
    (71) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (73) t_expresion -> . g_expresion r_generate_quad_and
    (74) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (76) g_expresion -> . m_expresion r_generate_quad_logicos
    (77) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    expresion                      shift and go to state 105
    t_expresion                    shift and go to state 106
    g_expresion                    shift and go to state 107
    m_expresion                    shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 86

    (107) lectura -> LEER PARENT_A . variables PARENT_C
    (25) variables -> . variable r_generate_quad_leer
    (26) variables -> . variable r_generate_quad_leer COMA variables
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim

    ID              shift and go to state 119

    variables                      shift and go to state 117
    variable                       shift and go to state 118

state 87

    (109) escritura -> ESCRIBIR PARENT_A . escr PARENT_C
    (114) escr -> . escritura_dos r_generate_quad_escr
    (115) escr -> . escritura_dos r_generate_quad_escr COMA escr
    (110) escritura_dos -> . CTE_STR r_push_cte_str
    (111) escritura_dos -> . expresion
    (70) expresion -> . t_expresion r_generate_quad_or
    (71) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (73) t_expresion -> . g_expresion r_generate_quad_and
    (74) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (76) g_expresion -> . m_expresion r_generate_quad_logicos
    (77) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    CTE_STR         shift and go to state 122
    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    escr                           shift and go to state 120
    escritura_dos                  shift and go to state 121
    expresion                      shift and go to state 123
    t_expresion                    shift and go to state 106
    g_expresion                    shift and go to state 107
    m_expresion                    shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 88

    (116) decision -> if r_end_if .

    ID              reduce using rule 116 (decision -> if r_end_if .)
    REGRESA         reduce using rule 116 (decision -> if r_end_if .)
    LEER            reduce using rule 116 (decision -> if r_end_if .)
    ESCRIBIR        reduce using rule 116 (decision -> if r_end_if .)
    DESDE           reduce using rule 116 (decision -> if r_end_if .)
    MIENTRAS        reduce using rule 116 (decision -> if r_end_if .)
    SI              reduce using rule 116 (decision -> if r_end_if .)
    LLAVE_C         reduce using rule 116 (decision -> if r_end_if .)


state 89

    (117) decision -> if r_goto_ifelse . else r_end_if
    (122) else -> . SINO LLAVE_A estatutos_dos LLAVE_C

    SINO            shift and go to state 125

    else                           shift and go to state 124

state 90

    (126) ciclo_for -> DESDE ID . r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (128) r_save_var_for -> .

    IGUAL           reduce using rule 128 (r_save_var_for -> .)

    r_save_var_for                 shift and go to state 126

state 91

    (123) ciclo_while -> MIENTRAS r_save_jump . PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while

    PARENT_A        shift and go to state 127


state 92

    (118) if -> SI PARENT_A . expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C
    (70) expresion -> . t_expresion r_generate_quad_or
    (71) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (73) t_expresion -> . g_expresion r_generate_quad_and
    (74) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (76) g_expresion -> . m_expresion r_generate_quad_logicos
    (77) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    expresion                      shift and go to state 128
    t_expresion                    shift and go to state 106
    g_expresion                    shift and go to state 107
    m_expresion                    shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 93

    (19) ids_simple -> ID save_vars_name dimension COMA ids_simple .

    PUNTOCOMA       reduce using rule 19 (ids_simple -> ID save_vars_name dimension COMA ids_simple .)


state 94

    (21) dimension -> CORCHETE_A CTE_I CORCHETE_C .

    COMA            reduce using rule 21 (dimension -> CORCHETE_A CTE_I CORCHETE_C .)
    PUNTOCOMA       reduce using rule 21 (dimension -> CORCHETE_A CTE_I CORCHETE_C .)


state 95

    (35) func_dos -> PARENT_A PARENT_C var_funcs .

    FUNCION         reduce using rule 35 (func_dos -> PARENT_A PARENT_C var_funcs .)
    PRINCIPAL       reduce using rule 35 (func_dos -> PARENT_A PARENT_C var_funcs .)


state 96

    (38) var_funcs -> dec_est .

    FUNCION         reduce using rule 38 (var_funcs -> dec_est .)
    PRINCIPAL       reduce using rule 38 (var_funcs -> dec_est .)


state 97

    (39) var_funcs -> dec_vars . dec_est
    (43) dec_est -> . LLAVE_A LLAVE_C
    (44) dec_est -> . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 40

    dec_est                        shift and go to state 129

state 98

    (36) func_dos -> PARENT_A parametros PARENT_C . save_params var_funcs
    (37) save_params -> .

    LLAVE_A         reduce using rule 37 (save_params -> .)
    VAR             reduce using rule 37 (save_params -> .)

    save_params                    shift and go to state 130

state 99

    (40) parametros -> tipo_simple ID . save_params_list
    (41) parametros -> tipo_simple ID . save_params_list COMA parametros
    (42) save_params_list -> .

    COMA            reduce using rule 42 (save_params_list -> .)
    PARENT_C        reduce using rule 42 (save_params_list -> .)

    save_params_list               shift and go to state 131

state 100

    (55) asignacion -> variable IGUAL r_push_oper . expresion r_generate_quad_asig
    (70) expresion -> . t_expresion r_generate_quad_or
    (71) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (73) t_expresion -> . g_expresion r_generate_quad_and
    (74) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (76) g_expresion -> . m_expresion r_generate_quad_logicos
    (77) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    variable                       shift and go to state 114
    expresion                      shift and go to state 132
    t_expresion                    shift and go to state 106
    g_expresion                    shift and go to state 107
    m_expresion                    shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    llamada_exp                    shift and go to state 115

state 101

    (57) llamada -> ID r_check_func_exists PARENT_A . r_generate_ERA PARENT_C r_generate_gosub
    (58) llamada -> ID r_check_func_exists PARENT_A . r_generate_ERA expresiones PARENT_C r_generate_gosub
    (60) r_generate_ERA -> .

    PARENT_C        reduce using rule 60 (r_generate_ERA -> .)
    PARENT_A        reduce using rule 60 (r_generate_ERA -> .)
    CTE_I           reduce using rule 60 (r_generate_ERA -> .)
    CTE_F           reduce using rule 60 (r_generate_ERA -> .)
    CTE_CH          reduce using rule 60 (r_generate_ERA -> .)
    ID              reduce using rule 60 (r_generate_ERA -> .)

    r_generate_ERA                 shift and go to state 133

state 102

    (23) variable -> ID r_push_id dim .

    IGUAL           reduce using rule 23 (variable -> ID r_push_id dim .)
    POR             reduce using rule 23 (variable -> ID r_push_id dim .)
    DIV             reduce using rule 23 (variable -> ID r_push_id dim .)
    MAS             reduce using rule 23 (variable -> ID r_push_id dim .)
    MENOS           reduce using rule 23 (variable -> ID r_push_id dim .)
    MAYORQUE        reduce using rule 23 (variable -> ID r_push_id dim .)
    MENORQUE        reduce using rule 23 (variable -> ID r_push_id dim .)
    MAYORIGUAL      reduce using rule 23 (variable -> ID r_push_id dim .)
    MENORIGUAL      reduce using rule 23 (variable -> ID r_push_id dim .)
    IGUALIGUAL      reduce using rule 23 (variable -> ID r_push_id dim .)
    DIFERENTE       reduce using rule 23 (variable -> ID r_push_id dim .)
    AND             reduce using rule 23 (variable -> ID r_push_id dim .)
    OR              reduce using rule 23 (variable -> ID r_push_id dim .)
    PARENT_C        reduce using rule 23 (variable -> ID r_push_id dim .)
    COMA            reduce using rule 23 (variable -> ID r_push_id dim .)
    PUNTOCOMA       reduce using rule 23 (variable -> ID r_push_id dim .)
    CORCHETE_C      reduce using rule 23 (variable -> ID r_push_id dim .)
    HASTA           reduce using rule 23 (variable -> ID r_push_id dim .)
    HACER           reduce using rule 23 (variable -> ID r_push_id dim .)


state 103

    (27) dim -> CORCHETE_A . expresion CORCHETE_C
    (70) expresion -> . t_expresion r_generate_quad_or
    (71) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (73) t_expresion -> . g_expresion r_generate_quad_and
    (74) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (76) g_expresion -> . m_expresion r_generate_quad_logicos
    (77) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    expresion                      shift and go to state 134
    t_expresion                    shift and go to state 106
    g_expresion                    shift and go to state 107
    m_expresion                    shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 104

    (94) factor -> PARENT_A . r_push_ff expresion PARENT_C r_pop_ff
    (103) r_push_ff -> .

    PARENT_A        reduce using rule 103 (r_push_ff -> .)
    CTE_I           reduce using rule 103 (r_push_ff -> .)
    CTE_F           reduce using rule 103 (r_push_ff -> .)
    CTE_CH          reduce using rule 103 (r_push_ff -> .)
    ID              reduce using rule 103 (r_push_ff -> .)

    r_push_ff                      shift and go to state 135

state 105

    (105) retorno -> REGRESA PARENT_A expresion . PARENT_C r_generate_quad_retorno

    PARENT_C        shift and go to state 136


state 106

    (70) expresion -> t_expresion . r_generate_quad_or
    (71) expresion -> t_expresion . r_generate_quad_or OR r_push_oper expresion
    (72) r_generate_quad_or -> .

    OR              reduce using rule 72 (r_generate_quad_or -> .)
    PARENT_C        reduce using rule 72 (r_generate_quad_or -> .)
    COMA            reduce using rule 72 (r_generate_quad_or -> .)
    PUNTOCOMA       reduce using rule 72 (r_generate_quad_or -> .)
    CORCHETE_C      reduce using rule 72 (r_generate_quad_or -> .)
    HASTA           reduce using rule 72 (r_generate_quad_or -> .)
    HACER           reduce using rule 72 (r_generate_quad_or -> .)

    r_generate_quad_or             shift and go to state 137

state 107

    (73) t_expresion -> g_expresion . r_generate_quad_and
    (74) t_expresion -> g_expresion . r_generate_quad_and AND r_push_oper t_expresion
    (75) r_generate_quad_and -> .

    AND             reduce using rule 75 (r_generate_quad_and -> .)
    OR              reduce using rule 75 (r_generate_quad_and -> .)
    PARENT_C        reduce using rule 75 (r_generate_quad_and -> .)
    COMA            reduce using rule 75 (r_generate_quad_and -> .)
    PUNTOCOMA       reduce using rule 75 (r_generate_quad_and -> .)
    CORCHETE_C      reduce using rule 75 (r_generate_quad_and -> .)
    HASTA           reduce using rule 75 (r_generate_quad_and -> .)
    HACER           reduce using rule 75 (r_generate_quad_and -> .)

    r_generate_quad_and            shift and go to state 138

state 108

    (76) g_expresion -> m_expresion . r_generate_quad_logicos
    (77) g_expresion -> m_expresion . op_logicos m_expresion r_generate_quad_logicos
    (78) r_generate_quad_logicos -> .
    (79) op_logicos -> . MAYORQUE r_push_oper
    (80) op_logicos -> . MENORQUE r_push_oper
    (81) op_logicos -> . MAYORIGUAL r_push_oper
    (82) op_logicos -> . MENORIGUAL r_push_oper
    (83) op_logicos -> . IGUALIGUAL r_push_oper
    (84) op_logicos -> . DIFERENTE r_push_oper

    AND             reduce using rule 78 (r_generate_quad_logicos -> .)
    OR              reduce using rule 78 (r_generate_quad_logicos -> .)
    PARENT_C        reduce using rule 78 (r_generate_quad_logicos -> .)
    COMA            reduce using rule 78 (r_generate_quad_logicos -> .)
    PUNTOCOMA       reduce using rule 78 (r_generate_quad_logicos -> .)
    CORCHETE_C      reduce using rule 78 (r_generate_quad_logicos -> .)
    HASTA           reduce using rule 78 (r_generate_quad_logicos -> .)
    HACER           reduce using rule 78 (r_generate_quad_logicos -> .)
    MAYORQUE        shift and go to state 141
    MENORQUE        shift and go to state 142
    MAYORIGUAL      shift and go to state 143
    MENORIGUAL      shift and go to state 144
    IGUALIGUAL      shift and go to state 145
    DIFERENTE       shift and go to state 146

    r_generate_quad_logicos        shift and go to state 139
    op_logicos                     shift and go to state 140

state 109

    (85) m_expresion -> termino . r_generate_quad_masmen
    (86) m_expresion -> termino . r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> termino . r_generate_quad_masmen MENOS r_push_oper m_expresion
    (92) r_generate_quad_masmen -> .

    MAS             reduce using rule 92 (r_generate_quad_masmen -> .)
    MENOS           reduce using rule 92 (r_generate_quad_masmen -> .)
    MAYORQUE        reduce using rule 92 (r_generate_quad_masmen -> .)
    MENORQUE        reduce using rule 92 (r_generate_quad_masmen -> .)
    MAYORIGUAL      reduce using rule 92 (r_generate_quad_masmen -> .)
    MENORIGUAL      reduce using rule 92 (r_generate_quad_masmen -> .)
    IGUALIGUAL      reduce using rule 92 (r_generate_quad_masmen -> .)
    DIFERENTE       reduce using rule 92 (r_generate_quad_masmen -> .)
    AND             reduce using rule 92 (r_generate_quad_masmen -> .)
    OR              reduce using rule 92 (r_generate_quad_masmen -> .)
    PARENT_C        reduce using rule 92 (r_generate_quad_masmen -> .)
    COMA            reduce using rule 92 (r_generate_quad_masmen -> .)
    PUNTOCOMA       reduce using rule 92 (r_generate_quad_masmen -> .)
    CORCHETE_C      reduce using rule 92 (r_generate_quad_masmen -> .)
    HASTA           reduce using rule 92 (r_generate_quad_masmen -> .)
    HACER           reduce using rule 92 (r_generate_quad_masmen -> .)

    r_generate_quad_masmen         shift and go to state 147

state 110

    (88) termino -> factor . r_generate_quad_muldiv
    (89) termino -> factor . r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> factor . r_generate_quad_muldiv DIV r_push_oper termino
    (93) r_generate_quad_muldiv -> .

    POR             reduce using rule 93 (r_generate_quad_muldiv -> .)
    DIV             reduce using rule 93 (r_generate_quad_muldiv -> .)
    MAS             reduce using rule 93 (r_generate_quad_muldiv -> .)
    MENOS           reduce using rule 93 (r_generate_quad_muldiv -> .)
    MAYORQUE        reduce using rule 93 (r_generate_quad_muldiv -> .)
    MENORQUE        reduce using rule 93 (r_generate_quad_muldiv -> .)
    MAYORIGUAL      reduce using rule 93 (r_generate_quad_muldiv -> .)
    MENORIGUAL      reduce using rule 93 (r_generate_quad_muldiv -> .)
    IGUALIGUAL      reduce using rule 93 (r_generate_quad_muldiv -> .)
    DIFERENTE       reduce using rule 93 (r_generate_quad_muldiv -> .)
    AND             reduce using rule 93 (r_generate_quad_muldiv -> .)
    OR              reduce using rule 93 (r_generate_quad_muldiv -> .)
    PARENT_C        reduce using rule 93 (r_generate_quad_muldiv -> .)
    COMA            reduce using rule 93 (r_generate_quad_muldiv -> .)
    PUNTOCOMA       reduce using rule 93 (r_generate_quad_muldiv -> .)
    CORCHETE_C      reduce using rule 93 (r_generate_quad_muldiv -> .)
    HASTA           reduce using rule 93 (r_generate_quad_muldiv -> .)
    HACER           reduce using rule 93 (r_generate_quad_muldiv -> .)

    r_generate_quad_muldiv         shift and go to state 148

state 111

    (95) factor -> CTE_I . r_push_cte_i
    (100) r_push_cte_i -> .

    POR             reduce using rule 100 (r_push_cte_i -> .)
    DIV             reduce using rule 100 (r_push_cte_i -> .)
    MAS             reduce using rule 100 (r_push_cte_i -> .)
    MENOS           reduce using rule 100 (r_push_cte_i -> .)
    MAYORQUE        reduce using rule 100 (r_push_cte_i -> .)
    MENORQUE        reduce using rule 100 (r_push_cte_i -> .)
    MAYORIGUAL      reduce using rule 100 (r_push_cte_i -> .)
    MENORIGUAL      reduce using rule 100 (r_push_cte_i -> .)
    IGUALIGUAL      reduce using rule 100 (r_push_cte_i -> .)
    DIFERENTE       reduce using rule 100 (r_push_cte_i -> .)
    AND             reduce using rule 100 (r_push_cte_i -> .)
    OR              reduce using rule 100 (r_push_cte_i -> .)
    PARENT_C        reduce using rule 100 (r_push_cte_i -> .)
    COMA            reduce using rule 100 (r_push_cte_i -> .)
    PUNTOCOMA       reduce using rule 100 (r_push_cte_i -> .)
    CORCHETE_C      reduce using rule 100 (r_push_cte_i -> .)
    HASTA           reduce using rule 100 (r_push_cte_i -> .)
    HACER           reduce using rule 100 (r_push_cte_i -> .)

    r_push_cte_i                   shift and go to state 149

state 112

    (96) factor -> CTE_F . r_push_cte_f
    (101) r_push_cte_f -> .

    POR             reduce using rule 101 (r_push_cte_f -> .)
    DIV             reduce using rule 101 (r_push_cte_f -> .)
    MAS             reduce using rule 101 (r_push_cte_f -> .)
    MENOS           reduce using rule 101 (r_push_cte_f -> .)
    MAYORQUE        reduce using rule 101 (r_push_cte_f -> .)
    MENORQUE        reduce using rule 101 (r_push_cte_f -> .)
    MAYORIGUAL      reduce using rule 101 (r_push_cte_f -> .)
    MENORIGUAL      reduce using rule 101 (r_push_cte_f -> .)
    IGUALIGUAL      reduce using rule 101 (r_push_cte_f -> .)
    DIFERENTE       reduce using rule 101 (r_push_cte_f -> .)
    AND             reduce using rule 101 (r_push_cte_f -> .)
    OR              reduce using rule 101 (r_push_cte_f -> .)
    PARENT_C        reduce using rule 101 (r_push_cte_f -> .)
    COMA            reduce using rule 101 (r_push_cte_f -> .)
    PUNTOCOMA       reduce using rule 101 (r_push_cte_f -> .)
    CORCHETE_C      reduce using rule 101 (r_push_cte_f -> .)
    HASTA           reduce using rule 101 (r_push_cte_f -> .)
    HACER           reduce using rule 101 (r_push_cte_f -> .)

    r_push_cte_f                   shift and go to state 150

state 113

    (97) factor -> CTE_CH . r_push_cte_c
    (102) r_push_cte_c -> .

    POR             reduce using rule 102 (r_push_cte_c -> .)
    DIV             reduce using rule 102 (r_push_cte_c -> .)
    MAS             reduce using rule 102 (r_push_cte_c -> .)
    MENOS           reduce using rule 102 (r_push_cte_c -> .)
    MAYORQUE        reduce using rule 102 (r_push_cte_c -> .)
    MENORQUE        reduce using rule 102 (r_push_cte_c -> .)
    MAYORIGUAL      reduce using rule 102 (r_push_cte_c -> .)
    MENORIGUAL      reduce using rule 102 (r_push_cte_c -> .)
    IGUALIGUAL      reduce using rule 102 (r_push_cte_c -> .)
    DIFERENTE       reduce using rule 102 (r_push_cte_c -> .)
    AND             reduce using rule 102 (r_push_cte_c -> .)
    OR              reduce using rule 102 (r_push_cte_c -> .)
    PARENT_C        reduce using rule 102 (r_push_cte_c -> .)
    COMA            reduce using rule 102 (r_push_cte_c -> .)
    PUNTOCOMA       reduce using rule 102 (r_push_cte_c -> .)
    CORCHETE_C      reduce using rule 102 (r_push_cte_c -> .)
    HASTA           reduce using rule 102 (r_push_cte_c -> .)
    HACER           reduce using rule 102 (r_push_cte_c -> .)

    r_push_cte_c                   shift and go to state 151

state 114

    (98) factor -> variable .

    POR             reduce using rule 98 (factor -> variable .)
    DIV             reduce using rule 98 (factor -> variable .)
    MAS             reduce using rule 98 (factor -> variable .)
    MENOS           reduce using rule 98 (factor -> variable .)
    MAYORQUE        reduce using rule 98 (factor -> variable .)
    MENORQUE        reduce using rule 98 (factor -> variable .)
    MAYORIGUAL      reduce using rule 98 (factor -> variable .)
    MENORIGUAL      reduce using rule 98 (factor -> variable .)
    IGUALIGUAL      reduce using rule 98 (factor -> variable .)
    DIFERENTE       reduce using rule 98 (factor -> variable .)
    AND             reduce using rule 98 (factor -> variable .)
    OR              reduce using rule 98 (factor -> variable .)
    PARENT_C        reduce using rule 98 (factor -> variable .)
    COMA            reduce using rule 98 (factor -> variable .)
    PUNTOCOMA       reduce using rule 98 (factor -> variable .)
    CORCHETE_C      reduce using rule 98 (factor -> variable .)
    HASTA           reduce using rule 98 (factor -> variable .)
    HACER           reduce using rule 98 (factor -> variable .)


state 115

    (99) factor -> llamada_exp .

    POR             reduce using rule 99 (factor -> llamada_exp .)
    DIV             reduce using rule 99 (factor -> llamada_exp .)
    MAS             reduce using rule 99 (factor -> llamada_exp .)
    MENOS           reduce using rule 99 (factor -> llamada_exp .)
    MAYORQUE        reduce using rule 99 (factor -> llamada_exp .)
    MENORQUE        reduce using rule 99 (factor -> llamada_exp .)
    MAYORIGUAL      reduce using rule 99 (factor -> llamada_exp .)
    MENORIGUAL      reduce using rule 99 (factor -> llamada_exp .)
    IGUALIGUAL      reduce using rule 99 (factor -> llamada_exp .)
    DIFERENTE       reduce using rule 99 (factor -> llamada_exp .)
    AND             reduce using rule 99 (factor -> llamada_exp .)
    OR              reduce using rule 99 (factor -> llamada_exp .)
    PARENT_C        reduce using rule 99 (factor -> llamada_exp .)
    COMA            reduce using rule 99 (factor -> llamada_exp .)
    PUNTOCOMA       reduce using rule 99 (factor -> llamada_exp .)
    CORCHETE_C      reduce using rule 99 (factor -> llamada_exp .)
    HASTA           reduce using rule 99 (factor -> llamada_exp .)
    HACER           reduce using rule 99 (factor -> llamada_exp .)


state 116

    (22) variable -> ID . r_push_id
    (23) variable -> ID . r_push_id dim
    (62) llamada_exp -> ID . r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> ID . r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos
    (24) r_push_id -> .
    (59) r_check_func_exists -> .

    CORCHETE_A      reduce using rule 24 (r_push_id -> .)
    POR             reduce using rule 24 (r_push_id -> .)
    DIV             reduce using rule 24 (r_push_id -> .)
    MAS             reduce using rule 24 (r_push_id -> .)
    MENOS           reduce using rule 24 (r_push_id -> .)
    MAYORQUE        reduce using rule 24 (r_push_id -> .)
    MENORQUE        reduce using rule 24 (r_push_id -> .)
    MAYORIGUAL      reduce using rule 24 (r_push_id -> .)
    MENORIGUAL      reduce using rule 24 (r_push_id -> .)
    IGUALIGUAL      reduce using rule 24 (r_push_id -> .)
    DIFERENTE       reduce using rule 24 (r_push_id -> .)
    AND             reduce using rule 24 (r_push_id -> .)
    OR              reduce using rule 24 (r_push_id -> .)
    PARENT_C        reduce using rule 24 (r_push_id -> .)
    COMA            reduce using rule 24 (r_push_id -> .)
    PUNTOCOMA       reduce using rule 24 (r_push_id -> .)
    CORCHETE_C      reduce using rule 24 (r_push_id -> .)
    HASTA           reduce using rule 24 (r_push_id -> .)
    HACER           reduce using rule 24 (r_push_id -> .)
    PARENT_A        reduce using rule 59 (r_check_func_exists -> .)

    r_push_id                      shift and go to state 84
    r_check_func_exists            shift and go to state 152

state 117

    (107) lectura -> LEER PARENT_A variables . PARENT_C

    PARENT_C        shift and go to state 153


state 118

    (25) variables -> variable . r_generate_quad_leer
    (26) variables -> variable . r_generate_quad_leer COMA variables
    (108) r_generate_quad_leer -> .

    COMA            reduce using rule 108 (r_generate_quad_leer -> .)
    PARENT_C        reduce using rule 108 (r_generate_quad_leer -> .)

    r_generate_quad_leer           shift and go to state 154

state 119

    (22) variable -> ID . r_push_id
    (23) variable -> ID . r_push_id dim
    (24) r_push_id -> .

    CORCHETE_A      reduce using rule 24 (r_push_id -> .)
    COMA            reduce using rule 24 (r_push_id -> .)
    PARENT_C        reduce using rule 24 (r_push_id -> .)

    r_push_id                      shift and go to state 84

state 120

    (109) escritura -> ESCRIBIR PARENT_A escr . PARENT_C

    PARENT_C        shift and go to state 155


state 121

    (114) escr -> escritura_dos . r_generate_quad_escr
    (115) escr -> escritura_dos . r_generate_quad_escr COMA escr
    (113) r_generate_quad_escr -> .

    COMA            reduce using rule 113 (r_generate_quad_escr -> .)
    PARENT_C        reduce using rule 113 (r_generate_quad_escr -> .)

    r_generate_quad_escr           shift and go to state 156

state 122

    (110) escritura_dos -> CTE_STR . r_push_cte_str
    (112) r_push_cte_str -> .

    COMA            reduce using rule 112 (r_push_cte_str -> .)
    PARENT_C        reduce using rule 112 (r_push_cte_str -> .)

    r_push_cte_str                 shift and go to state 157

state 123

    (111) escritura_dos -> expresion .

    COMA            reduce using rule 111 (escritura_dos -> expresion .)
    PARENT_C        reduce using rule 111 (escritura_dos -> expresion .)


state 124

    (117) decision -> if r_goto_ifelse else . r_end_if
    (120) r_end_if -> .

    ID              reduce using rule 120 (r_end_if -> .)
    REGRESA         reduce using rule 120 (r_end_if -> .)
    LEER            reduce using rule 120 (r_end_if -> .)
    ESCRIBIR        reduce using rule 120 (r_end_if -> .)
    DESDE           reduce using rule 120 (r_end_if -> .)
    MIENTRAS        reduce using rule 120 (r_end_if -> .)
    SI              reduce using rule 120 (r_end_if -> .)
    LLAVE_C         reduce using rule 120 (r_end_if -> .)

    r_end_if                       shift and go to state 158

state 125

    (122) else -> SINO . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 159


state 126

    (126) ciclo_for -> DESDE ID r_save_var_for . IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for

    IGUAL           shift and go to state 160


state 127

    (123) ciclo_while -> MIENTRAS r_save_jump PARENT_A . expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (70) expresion -> . t_expresion r_generate_quad_or
    (71) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (73) t_expresion -> . g_expresion r_generate_quad_and
    (74) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (76) g_expresion -> . m_expresion r_generate_quad_logicos
    (77) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    expresion                      shift and go to state 161
    t_expresion                    shift and go to state 106
    g_expresion                    shift and go to state 107
    m_expresion                    shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 128

    (118) if -> SI PARENT_A expresion . PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    PARENT_C        shift and go to state 162


state 129

    (39) var_funcs -> dec_vars dec_est .

    FUNCION         reduce using rule 39 (var_funcs -> dec_vars dec_est .)
    PRINCIPAL       reduce using rule 39 (var_funcs -> dec_vars dec_est .)


state 130

    (36) func_dos -> PARENT_A parametros PARENT_C save_params . var_funcs
    (38) var_funcs -> . dec_est
    (39) var_funcs -> . dec_vars dec_est
    (43) dec_est -> . LLAVE_A LLAVE_C
    (44) dec_est -> . LLAVE_A estatutos_dos LLAVE_C
    (9) dec_vars -> . VAR vars save_vars

    LLAVE_A         shift and go to state 40
    VAR             shift and go to state 11

    var_funcs                      shift and go to state 163
    dec_est                        shift and go to state 96
    dec_vars                       shift and go to state 97

state 131

    (40) parametros -> tipo_simple ID save_params_list .
    (41) parametros -> tipo_simple ID save_params_list . COMA parametros

    PARENT_C        reduce using rule 40 (parametros -> tipo_simple ID save_params_list .)
    COMA            shift and go to state 164


state 132

    (55) asignacion -> variable IGUAL r_push_oper expresion . r_generate_quad_asig
    (56) r_generate_quad_asig -> .

    PUNTOCOMA       reduce using rule 56 (r_generate_quad_asig -> .)

    r_generate_quad_asig           shift and go to state 165

state 133

    (57) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA . PARENT_C r_generate_gosub
    (58) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA . expresiones PARENT_C r_generate_gosub
    (66) expresiones -> . expresion r_generate_parameter
    (67) expresiones -> . expresion r_generate_parameter COMA r_act_param_count expresiones
    (70) expresion -> . t_expresion r_generate_quad_or
    (71) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (73) t_expresion -> . g_expresion r_generate_quad_and
    (74) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (76) g_expresion -> . m_expresion r_generate_quad_logicos
    (77) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_C        shift and go to state 166
    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    expresiones                    shift and go to state 167
    expresion                      shift and go to state 168
    t_expresion                    shift and go to state 106
    g_expresion                    shift and go to state 107
    m_expresion                    shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 134

    (27) dim -> CORCHETE_A expresion . CORCHETE_C

    CORCHETE_C      shift and go to state 169


state 135

    (94) factor -> PARENT_A r_push_ff . expresion PARENT_C r_pop_ff
    (70) expresion -> . t_expresion r_generate_quad_or
    (71) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (73) t_expresion -> . g_expresion r_generate_quad_and
    (74) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (76) g_expresion -> . m_expresion r_generate_quad_logicos
    (77) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    expresion                      shift and go to state 170
    t_expresion                    shift and go to state 106
    g_expresion                    shift and go to state 107
    m_expresion                    shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 136

    (105) retorno -> REGRESA PARENT_A expresion PARENT_C . r_generate_quad_retorno
    (106) r_generate_quad_retorno -> .

    PUNTOCOMA       reduce using rule 106 (r_generate_quad_retorno -> .)

    r_generate_quad_retorno        shift and go to state 171

state 137

    (70) expresion -> t_expresion r_generate_quad_or .
    (71) expresion -> t_expresion r_generate_quad_or . OR r_push_oper expresion

    PARENT_C        reduce using rule 70 (expresion -> t_expresion r_generate_quad_or .)
    COMA            reduce using rule 70 (expresion -> t_expresion r_generate_quad_or .)
    PUNTOCOMA       reduce using rule 70 (expresion -> t_expresion r_generate_quad_or .)
    CORCHETE_C      reduce using rule 70 (expresion -> t_expresion r_generate_quad_or .)
    HASTA           reduce using rule 70 (expresion -> t_expresion r_generate_quad_or .)
    HACER           reduce using rule 70 (expresion -> t_expresion r_generate_quad_or .)
    OR              shift and go to state 172


state 138

    (73) t_expresion -> g_expresion r_generate_quad_and .
    (74) t_expresion -> g_expresion r_generate_quad_and . AND r_push_oper t_expresion

    OR              reduce using rule 73 (t_expresion -> g_expresion r_generate_quad_and .)
    PARENT_C        reduce using rule 73 (t_expresion -> g_expresion r_generate_quad_and .)
    COMA            reduce using rule 73 (t_expresion -> g_expresion r_generate_quad_and .)
    PUNTOCOMA       reduce using rule 73 (t_expresion -> g_expresion r_generate_quad_and .)
    CORCHETE_C      reduce using rule 73 (t_expresion -> g_expresion r_generate_quad_and .)
    HASTA           reduce using rule 73 (t_expresion -> g_expresion r_generate_quad_and .)
    HACER           reduce using rule 73 (t_expresion -> g_expresion r_generate_quad_and .)
    AND             shift and go to state 173


state 139

    (76) g_expresion -> m_expresion r_generate_quad_logicos .

    AND             reduce using rule 76 (g_expresion -> m_expresion r_generate_quad_logicos .)
    OR              reduce using rule 76 (g_expresion -> m_expresion r_generate_quad_logicos .)
    PARENT_C        reduce using rule 76 (g_expresion -> m_expresion r_generate_quad_logicos .)
    COMA            reduce using rule 76 (g_expresion -> m_expresion r_generate_quad_logicos .)
    PUNTOCOMA       reduce using rule 76 (g_expresion -> m_expresion r_generate_quad_logicos .)
    CORCHETE_C      reduce using rule 76 (g_expresion -> m_expresion r_generate_quad_logicos .)
    HASTA           reduce using rule 76 (g_expresion -> m_expresion r_generate_quad_logicos .)
    HACER           reduce using rule 76 (g_expresion -> m_expresion r_generate_quad_logicos .)


state 140

    (77) g_expresion -> m_expresion op_logicos . m_expresion r_generate_quad_logicos
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    m_expresion                    shift and go to state 174
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 141

    (79) op_logicos -> MAYORQUE . r_push_oper
    (91) r_push_oper -> .

    PARENT_A        reduce using rule 91 (r_push_oper -> .)
    CTE_I           reduce using rule 91 (r_push_oper -> .)
    CTE_F           reduce using rule 91 (r_push_oper -> .)
    CTE_CH          reduce using rule 91 (r_push_oper -> .)
    ID              reduce using rule 91 (r_push_oper -> .)

    r_push_oper                    shift and go to state 175

state 142

    (80) op_logicos -> MENORQUE . r_push_oper
    (91) r_push_oper -> .

    PARENT_A        reduce using rule 91 (r_push_oper -> .)
    CTE_I           reduce using rule 91 (r_push_oper -> .)
    CTE_F           reduce using rule 91 (r_push_oper -> .)
    CTE_CH          reduce using rule 91 (r_push_oper -> .)
    ID              reduce using rule 91 (r_push_oper -> .)

    r_push_oper                    shift and go to state 176

state 143

    (81) op_logicos -> MAYORIGUAL . r_push_oper
    (91) r_push_oper -> .

    PARENT_A        reduce using rule 91 (r_push_oper -> .)
    CTE_I           reduce using rule 91 (r_push_oper -> .)
    CTE_F           reduce using rule 91 (r_push_oper -> .)
    CTE_CH          reduce using rule 91 (r_push_oper -> .)
    ID              reduce using rule 91 (r_push_oper -> .)

    r_push_oper                    shift and go to state 177

state 144

    (82) op_logicos -> MENORIGUAL . r_push_oper
    (91) r_push_oper -> .

    PARENT_A        reduce using rule 91 (r_push_oper -> .)
    CTE_I           reduce using rule 91 (r_push_oper -> .)
    CTE_F           reduce using rule 91 (r_push_oper -> .)
    CTE_CH          reduce using rule 91 (r_push_oper -> .)
    ID              reduce using rule 91 (r_push_oper -> .)

    r_push_oper                    shift and go to state 178

state 145

    (83) op_logicos -> IGUALIGUAL . r_push_oper
    (91) r_push_oper -> .

    PARENT_A        reduce using rule 91 (r_push_oper -> .)
    CTE_I           reduce using rule 91 (r_push_oper -> .)
    CTE_F           reduce using rule 91 (r_push_oper -> .)
    CTE_CH          reduce using rule 91 (r_push_oper -> .)
    ID              reduce using rule 91 (r_push_oper -> .)

    r_push_oper                    shift and go to state 179

state 146

    (84) op_logicos -> DIFERENTE . r_push_oper
    (91) r_push_oper -> .

    PARENT_A        reduce using rule 91 (r_push_oper -> .)
    CTE_I           reduce using rule 91 (r_push_oper -> .)
    CTE_F           reduce using rule 91 (r_push_oper -> .)
    CTE_CH          reduce using rule 91 (r_push_oper -> .)
    ID              reduce using rule 91 (r_push_oper -> .)

    r_push_oper                    shift and go to state 180

state 147

    (85) m_expresion -> termino r_generate_quad_masmen .
    (86) m_expresion -> termino r_generate_quad_masmen . MAS r_push_oper m_expresion
    (87) m_expresion -> termino r_generate_quad_masmen . MENOS r_push_oper m_expresion

    MAYORQUE        reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen .)
    MENORQUE        reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen .)
    MAYORIGUAL      reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen .)
    MENORIGUAL      reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen .)
    IGUALIGUAL      reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen .)
    DIFERENTE       reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen .)
    AND             reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen .)
    OR              reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen .)
    PARENT_C        reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen .)
    COMA            reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen .)
    PUNTOCOMA       reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen .)
    CORCHETE_C      reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen .)
    HASTA           reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen .)
    HACER           reduce using rule 85 (m_expresion -> termino r_generate_quad_masmen .)
    MAS             shift and go to state 181
    MENOS           shift and go to state 182


state 148

    (88) termino -> factor r_generate_quad_muldiv .
    (89) termino -> factor r_generate_quad_muldiv . POR r_push_oper termino
    (90) termino -> factor r_generate_quad_muldiv . DIV r_push_oper termino

    MAS             reduce using rule 88 (termino -> factor r_generate_quad_muldiv .)
    MENOS           reduce using rule 88 (termino -> factor r_generate_quad_muldiv .)
    MAYORQUE        reduce using rule 88 (termino -> factor r_generate_quad_muldiv .)
    MENORQUE        reduce using rule 88 (termino -> factor r_generate_quad_muldiv .)
    MAYORIGUAL      reduce using rule 88 (termino -> factor r_generate_quad_muldiv .)
    MENORIGUAL      reduce using rule 88 (termino -> factor r_generate_quad_muldiv .)
    IGUALIGUAL      reduce using rule 88 (termino -> factor r_generate_quad_muldiv .)
    DIFERENTE       reduce using rule 88 (termino -> factor r_generate_quad_muldiv .)
    AND             reduce using rule 88 (termino -> factor r_generate_quad_muldiv .)
    OR              reduce using rule 88 (termino -> factor r_generate_quad_muldiv .)
    PARENT_C        reduce using rule 88 (termino -> factor r_generate_quad_muldiv .)
    COMA            reduce using rule 88 (termino -> factor r_generate_quad_muldiv .)
    PUNTOCOMA       reduce using rule 88 (termino -> factor r_generate_quad_muldiv .)
    CORCHETE_C      reduce using rule 88 (termino -> factor r_generate_quad_muldiv .)
    HASTA           reduce using rule 88 (termino -> factor r_generate_quad_muldiv .)
    HACER           reduce using rule 88 (termino -> factor r_generate_quad_muldiv .)
    POR             shift and go to state 183
    DIV             shift and go to state 184


state 149

    (95) factor -> CTE_I r_push_cte_i .

    POR             reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    DIV             reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    MAS             reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    MENOS           reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    MAYORQUE        reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    MENORQUE        reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    MAYORIGUAL      reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    MENORIGUAL      reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    IGUALIGUAL      reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    DIFERENTE       reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    AND             reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    OR              reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    PARENT_C        reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    COMA            reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    PUNTOCOMA       reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    CORCHETE_C      reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    HASTA           reduce using rule 95 (factor -> CTE_I r_push_cte_i .)
    HACER           reduce using rule 95 (factor -> CTE_I r_push_cte_i .)


state 150

    (96) factor -> CTE_F r_push_cte_f .

    POR             reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    DIV             reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    MAS             reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    MENOS           reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    MAYORQUE        reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    MENORQUE        reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    MAYORIGUAL      reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    MENORIGUAL      reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    IGUALIGUAL      reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    DIFERENTE       reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    AND             reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    OR              reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    PARENT_C        reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    COMA            reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    PUNTOCOMA       reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    CORCHETE_C      reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    HASTA           reduce using rule 96 (factor -> CTE_F r_push_cte_f .)
    HACER           reduce using rule 96 (factor -> CTE_F r_push_cte_f .)


state 151

    (97) factor -> CTE_CH r_push_cte_c .

    POR             reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    DIV             reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    MAS             reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    MENOS           reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    MAYORQUE        reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    MENORQUE        reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    MAYORIGUAL      reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    MENORIGUAL      reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    IGUALIGUAL      reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    DIFERENTE       reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    AND             reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    OR              reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    PARENT_C        reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    COMA            reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    PUNTOCOMA       reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    CORCHETE_C      reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    HASTA           reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)
    HACER           reduce using rule 97 (factor -> CTE_CH r_push_cte_c .)


state 152

    (62) llamada_exp -> ID r_check_func_exists . PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> ID r_check_func_exists . PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 185


state 153

    (107) lectura -> LEER PARENT_A variables PARENT_C .

    PUNTOCOMA       reduce using rule 107 (lectura -> LEER PARENT_A variables PARENT_C .)


state 154

    (25) variables -> variable r_generate_quad_leer .
    (26) variables -> variable r_generate_quad_leer . COMA variables

    PARENT_C        reduce using rule 25 (variables -> variable r_generate_quad_leer .)
    COMA            shift and go to state 186


state 155

    (109) escritura -> ESCRIBIR PARENT_A escr PARENT_C .

    PUNTOCOMA       reduce using rule 109 (escritura -> ESCRIBIR PARENT_A escr PARENT_C .)


state 156

    (114) escr -> escritura_dos r_generate_quad_escr .
    (115) escr -> escritura_dos r_generate_quad_escr . COMA escr

    PARENT_C        reduce using rule 114 (escr -> escritura_dos r_generate_quad_escr .)
    COMA            shift and go to state 187


state 157

    (110) escritura_dos -> CTE_STR r_push_cte_str .

    COMA            reduce using rule 110 (escritura_dos -> CTE_STR r_push_cte_str .)
    PARENT_C        reduce using rule 110 (escritura_dos -> CTE_STR r_push_cte_str .)


state 158

    (117) decision -> if r_goto_ifelse else r_end_if .

    ID              reduce using rule 117 (decision -> if r_goto_ifelse else r_end_if .)
    REGRESA         reduce using rule 117 (decision -> if r_goto_ifelse else r_end_if .)
    LEER            reduce using rule 117 (decision -> if r_goto_ifelse else r_end_if .)
    ESCRIBIR        reduce using rule 117 (decision -> if r_goto_ifelse else r_end_if .)
    DESDE           reduce using rule 117 (decision -> if r_goto_ifelse else r_end_if .)
    MIENTRAS        reduce using rule 117 (decision -> if r_goto_ifelse else r_end_if .)
    SI              reduce using rule 117 (decision -> if r_goto_ifelse else r_end_if .)
    LLAVE_C         reduce using rule 117 (decision -> if r_goto_ifelse else r_end_if .)


state 159

    (122) else -> SINO LLAVE_A . estatutos_dos LLAVE_C
    (53) estatutos_dos -> . estatutos
    (54) estatutos_dos -> . estatutos estatutos_dos
    (45) estatutos -> . asignacion PUNTOCOMA
    (46) estatutos -> . llamada PUNTOCOMA
    (47) estatutos -> . retorno PUNTOCOMA
    (48) estatutos -> . lectura PUNTOCOMA
    (49) estatutos -> . escritura PUNTOCOMA
    (50) estatutos -> . decision
    (51) estatutos -> . ciclo_for
    (52) estatutos -> . ciclo_while
    (55) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (57) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (58) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (105) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (107) lectura -> . LEER PARENT_A variables PARENT_C
    (109) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (116) decision -> . if r_end_if
    (117) decision -> . if r_goto_ifelse else r_end_if
    (126) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (123) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (118) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 60
    REGRESA         shift and go to state 61
    LEER            shift and go to state 62
    ESCRIBIR        shift and go to state 63
    DESDE           shift and go to state 65
    MIENTRAS        shift and go to state 66
    SI              shift and go to state 67

    estatutos_dos                  shift and go to state 188
    estatutos                      shift and go to state 50
    asignacion                     shift and go to state 51
    llamada                        shift and go to state 52
    retorno                        shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    ciclo_for                      shift and go to state 57
    ciclo_while                    shift and go to state 58
    variable                       shift and go to state 59
    if                             shift and go to state 64

state 160

    (126) ciclo_for -> DESDE ID r_save_var_for IGUAL . expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (70) expresion -> . t_expresion r_generate_quad_or
    (71) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (73) t_expresion -> . g_expresion r_generate_quad_and
    (74) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (76) g_expresion -> . m_expresion r_generate_quad_logicos
    (77) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    expresion                      shift and go to state 189
    t_expresion                    shift and go to state 106
    g_expresion                    shift and go to state 107
    m_expresion                    shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 161

    (123) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion . PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while

    PARENT_C        shift and go to state 190


state 162

    (118) if -> SI PARENT_A expresion PARENT_C . r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C
    (119) r_check_exp_type -> .

    ENTONCES        reduce using rule 119 (r_check_exp_type -> .)

    r_check_exp_type               shift and go to state 191

state 163

    (36) func_dos -> PARENT_A parametros PARENT_C save_params var_funcs .

    FUNCION         reduce using rule 36 (func_dos -> PARENT_A parametros PARENT_C save_params var_funcs .)
    PRINCIPAL       reduce using rule 36 (func_dos -> PARENT_A parametros PARENT_C save_params var_funcs .)


state 164

    (41) parametros -> tipo_simple ID save_params_list COMA . parametros
    (40) parametros -> . tipo_simple ID save_params_list
    (41) parametros -> . tipo_simple ID save_params_list COMA parametros
    (13) tipo_simple -> . INT
    (14) tipo_simple -> . FLOAT
    (15) tipo_simple -> . CHAR

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    tipo_simple                    shift and go to state 73
    parametros                     shift and go to state 192

state 165

    (55) asignacion -> variable IGUAL r_push_oper expresion r_generate_quad_asig .

    PUNTOCOMA       reduce using rule 55 (asignacion -> variable IGUAL r_push_oper expresion r_generate_quad_asig .)


state 166

    (57) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C . r_generate_gosub
    (61) r_generate_gosub -> .

    PUNTOCOMA       reduce using rule 61 (r_generate_gosub -> .)

    r_generate_gosub               shift and go to state 193

state 167

    (58) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA expresiones . PARENT_C r_generate_gosub

    PARENT_C        shift and go to state 194


state 168

    (66) expresiones -> expresion . r_generate_parameter
    (67) expresiones -> expresion . r_generate_parameter COMA r_act_param_count expresiones
    (68) r_generate_parameter -> .

    COMA            reduce using rule 68 (r_generate_parameter -> .)
    PARENT_C        reduce using rule 68 (r_generate_parameter -> .)

    r_generate_parameter           shift and go to state 195

state 169

    (27) dim -> CORCHETE_A expresion CORCHETE_C .

    IGUAL           reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    POR             reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    DIV             reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MAS             reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MENOS           reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MAYORQUE        reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MENORQUE        reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MAYORIGUAL      reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    MENORIGUAL      reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    IGUALIGUAL      reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    DIFERENTE       reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    AND             reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    OR              reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    PARENT_C        reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    COMA            reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    PUNTOCOMA       reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    CORCHETE_C      reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    HASTA           reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)
    HACER           reduce using rule 27 (dim -> CORCHETE_A expresion CORCHETE_C .)


state 170

    (94) factor -> PARENT_A r_push_ff expresion . PARENT_C r_pop_ff

    PARENT_C        shift and go to state 196


state 171

    (105) retorno -> REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno .

    PUNTOCOMA       reduce using rule 105 (retorno -> REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno .)


state 172

    (71) expresion -> t_expresion r_generate_quad_or OR . r_push_oper expresion
    (91) r_push_oper -> .

    PARENT_A        reduce using rule 91 (r_push_oper -> .)
    CTE_I           reduce using rule 91 (r_push_oper -> .)
    CTE_F           reduce using rule 91 (r_push_oper -> .)
    CTE_CH          reduce using rule 91 (r_push_oper -> .)
    ID              reduce using rule 91 (r_push_oper -> .)

    r_push_oper                    shift and go to state 197

state 173

    (74) t_expresion -> g_expresion r_generate_quad_and AND . r_push_oper t_expresion
    (91) r_push_oper -> .

    PARENT_A        reduce using rule 91 (r_push_oper -> .)
    CTE_I           reduce using rule 91 (r_push_oper -> .)
    CTE_F           reduce using rule 91 (r_push_oper -> .)
    CTE_CH          reduce using rule 91 (r_push_oper -> .)
    ID              reduce using rule 91 (r_push_oper -> .)

    r_push_oper                    shift and go to state 198

state 174

    (77) g_expresion -> m_expresion op_logicos m_expresion . r_generate_quad_logicos
    (78) r_generate_quad_logicos -> .

    AND             reduce using rule 78 (r_generate_quad_logicos -> .)
    OR              reduce using rule 78 (r_generate_quad_logicos -> .)
    PARENT_C        reduce using rule 78 (r_generate_quad_logicos -> .)
    COMA            reduce using rule 78 (r_generate_quad_logicos -> .)
    PUNTOCOMA       reduce using rule 78 (r_generate_quad_logicos -> .)
    CORCHETE_C      reduce using rule 78 (r_generate_quad_logicos -> .)
    HASTA           reduce using rule 78 (r_generate_quad_logicos -> .)
    HACER           reduce using rule 78 (r_generate_quad_logicos -> .)

    r_generate_quad_logicos        shift and go to state 199

state 175

    (79) op_logicos -> MAYORQUE r_push_oper .

    PARENT_A        reduce using rule 79 (op_logicos -> MAYORQUE r_push_oper .)
    CTE_I           reduce using rule 79 (op_logicos -> MAYORQUE r_push_oper .)
    CTE_F           reduce using rule 79 (op_logicos -> MAYORQUE r_push_oper .)
    CTE_CH          reduce using rule 79 (op_logicos -> MAYORQUE r_push_oper .)
    ID              reduce using rule 79 (op_logicos -> MAYORQUE r_push_oper .)


state 176

    (80) op_logicos -> MENORQUE r_push_oper .

    PARENT_A        reduce using rule 80 (op_logicos -> MENORQUE r_push_oper .)
    CTE_I           reduce using rule 80 (op_logicos -> MENORQUE r_push_oper .)
    CTE_F           reduce using rule 80 (op_logicos -> MENORQUE r_push_oper .)
    CTE_CH          reduce using rule 80 (op_logicos -> MENORQUE r_push_oper .)
    ID              reduce using rule 80 (op_logicos -> MENORQUE r_push_oper .)


state 177

    (81) op_logicos -> MAYORIGUAL r_push_oper .

    PARENT_A        reduce using rule 81 (op_logicos -> MAYORIGUAL r_push_oper .)
    CTE_I           reduce using rule 81 (op_logicos -> MAYORIGUAL r_push_oper .)
    CTE_F           reduce using rule 81 (op_logicos -> MAYORIGUAL r_push_oper .)
    CTE_CH          reduce using rule 81 (op_logicos -> MAYORIGUAL r_push_oper .)
    ID              reduce using rule 81 (op_logicos -> MAYORIGUAL r_push_oper .)


state 178

    (82) op_logicos -> MENORIGUAL r_push_oper .

    PARENT_A        reduce using rule 82 (op_logicos -> MENORIGUAL r_push_oper .)
    CTE_I           reduce using rule 82 (op_logicos -> MENORIGUAL r_push_oper .)
    CTE_F           reduce using rule 82 (op_logicos -> MENORIGUAL r_push_oper .)
    CTE_CH          reduce using rule 82 (op_logicos -> MENORIGUAL r_push_oper .)
    ID              reduce using rule 82 (op_logicos -> MENORIGUAL r_push_oper .)


state 179

    (83) op_logicos -> IGUALIGUAL r_push_oper .

    PARENT_A        reduce using rule 83 (op_logicos -> IGUALIGUAL r_push_oper .)
    CTE_I           reduce using rule 83 (op_logicos -> IGUALIGUAL r_push_oper .)
    CTE_F           reduce using rule 83 (op_logicos -> IGUALIGUAL r_push_oper .)
    CTE_CH          reduce using rule 83 (op_logicos -> IGUALIGUAL r_push_oper .)
    ID              reduce using rule 83 (op_logicos -> IGUALIGUAL r_push_oper .)


state 180

    (84) op_logicos -> DIFERENTE r_push_oper .

    PARENT_A        reduce using rule 84 (op_logicos -> DIFERENTE r_push_oper .)
    CTE_I           reduce using rule 84 (op_logicos -> DIFERENTE r_push_oper .)
    CTE_F           reduce using rule 84 (op_logicos -> DIFERENTE r_push_oper .)
    CTE_CH          reduce using rule 84 (op_logicos -> DIFERENTE r_push_oper .)
    ID              reduce using rule 84 (op_logicos -> DIFERENTE r_push_oper .)


state 181

    (86) m_expresion -> termino r_generate_quad_masmen MAS . r_push_oper m_expresion
    (91) r_push_oper -> .

    PARENT_A        reduce using rule 91 (r_push_oper -> .)
    CTE_I           reduce using rule 91 (r_push_oper -> .)
    CTE_F           reduce using rule 91 (r_push_oper -> .)
    CTE_CH          reduce using rule 91 (r_push_oper -> .)
    ID              reduce using rule 91 (r_push_oper -> .)

    r_push_oper                    shift and go to state 200

state 182

    (87) m_expresion -> termino r_generate_quad_masmen MENOS . r_push_oper m_expresion
    (91) r_push_oper -> .

    PARENT_A        reduce using rule 91 (r_push_oper -> .)
    CTE_I           reduce using rule 91 (r_push_oper -> .)
    CTE_F           reduce using rule 91 (r_push_oper -> .)
    CTE_CH          reduce using rule 91 (r_push_oper -> .)
    ID              reduce using rule 91 (r_push_oper -> .)

    r_push_oper                    shift and go to state 201

state 183

    (89) termino -> factor r_generate_quad_muldiv POR . r_push_oper termino
    (91) r_push_oper -> .

    PARENT_A        reduce using rule 91 (r_push_oper -> .)
    CTE_I           reduce using rule 91 (r_push_oper -> .)
    CTE_F           reduce using rule 91 (r_push_oper -> .)
    CTE_CH          reduce using rule 91 (r_push_oper -> .)
    ID              reduce using rule 91 (r_push_oper -> .)

    r_push_oper                    shift and go to state 202

state 184

    (90) termino -> factor r_generate_quad_muldiv DIV . r_push_oper termino
    (91) r_push_oper -> .

    PARENT_A        reduce using rule 91 (r_push_oper -> .)
    CTE_I           reduce using rule 91 (r_push_oper -> .)
    CTE_F           reduce using rule 91 (r_push_oper -> .)
    CTE_CH          reduce using rule 91 (r_push_oper -> .)
    ID              reduce using rule 91 (r_push_oper -> .)

    r_push_oper                    shift and go to state 203

state 185

    (62) llamada_exp -> ID r_check_func_exists PARENT_A . r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> ID r_check_func_exists PARENT_A . r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos
    (64) r_generate_ERA_dos -> .

    PARENT_C        reduce using rule 64 (r_generate_ERA_dos -> .)
    PARENT_A        reduce using rule 64 (r_generate_ERA_dos -> .)
    CTE_I           reduce using rule 64 (r_generate_ERA_dos -> .)
    CTE_F           reduce using rule 64 (r_generate_ERA_dos -> .)
    CTE_CH          reduce using rule 64 (r_generate_ERA_dos -> .)
    ID              reduce using rule 64 (r_generate_ERA_dos -> .)

    r_generate_ERA_dos             shift and go to state 204

state 186

    (26) variables -> variable r_generate_quad_leer COMA . variables
    (25) variables -> . variable r_generate_quad_leer
    (26) variables -> . variable r_generate_quad_leer COMA variables
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim

    ID              shift and go to state 119

    variable                       shift and go to state 118
    variables                      shift and go to state 205

state 187

    (115) escr -> escritura_dos r_generate_quad_escr COMA . escr
    (114) escr -> . escritura_dos r_generate_quad_escr
    (115) escr -> . escritura_dos r_generate_quad_escr COMA escr
    (110) escritura_dos -> . CTE_STR r_push_cte_str
    (111) escritura_dos -> . expresion
    (70) expresion -> . t_expresion r_generate_quad_or
    (71) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (73) t_expresion -> . g_expresion r_generate_quad_and
    (74) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (76) g_expresion -> . m_expresion r_generate_quad_logicos
    (77) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    CTE_STR         shift and go to state 122
    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    escritura_dos                  shift and go to state 121
    escr                           shift and go to state 206
    expresion                      shift and go to state 123
    t_expresion                    shift and go to state 106
    g_expresion                    shift and go to state 107
    m_expresion                    shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 188

    (122) else -> SINO LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 207


state 189

    (126) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion . r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (129) r_generate_quad_asig_for -> .

    HASTA           reduce using rule 129 (r_generate_quad_asig_for -> .)

    r_generate_quad_asig_for       shift and go to state 208

state 190

    (123) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C . r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (119) r_check_exp_type -> .

    HAZ             reduce using rule 119 (r_check_exp_type -> .)

    r_check_exp_type               shift and go to state 209

state 191

    (118) if -> SI PARENT_A expresion PARENT_C r_check_exp_type . ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ENTONCES        shift and go to state 210


state 192

    (41) parametros -> tipo_simple ID save_params_list COMA parametros .

    PARENT_C        reduce using rule 41 (parametros -> tipo_simple ID save_params_list COMA parametros .)


state 193

    (57) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub .

    PUNTOCOMA       reduce using rule 57 (llamada -> ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub .)


state 194

    (58) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C . r_generate_gosub
    (61) r_generate_gosub -> .

    PUNTOCOMA       reduce using rule 61 (r_generate_gosub -> .)

    r_generate_gosub               shift and go to state 211

state 195

    (66) expresiones -> expresion r_generate_parameter .
    (67) expresiones -> expresion r_generate_parameter . COMA r_act_param_count expresiones

    PARENT_C        reduce using rule 66 (expresiones -> expresion r_generate_parameter .)
    COMA            shift and go to state 212


state 196

    (94) factor -> PARENT_A r_push_ff expresion PARENT_C . r_pop_ff
    (104) r_pop_ff -> .

    POR             reduce using rule 104 (r_pop_ff -> .)
    DIV             reduce using rule 104 (r_pop_ff -> .)
    MAS             reduce using rule 104 (r_pop_ff -> .)
    MENOS           reduce using rule 104 (r_pop_ff -> .)
    MAYORQUE        reduce using rule 104 (r_pop_ff -> .)
    MENORQUE        reduce using rule 104 (r_pop_ff -> .)
    MAYORIGUAL      reduce using rule 104 (r_pop_ff -> .)
    MENORIGUAL      reduce using rule 104 (r_pop_ff -> .)
    IGUALIGUAL      reduce using rule 104 (r_pop_ff -> .)
    DIFERENTE       reduce using rule 104 (r_pop_ff -> .)
    AND             reduce using rule 104 (r_pop_ff -> .)
    OR              reduce using rule 104 (r_pop_ff -> .)
    PARENT_C        reduce using rule 104 (r_pop_ff -> .)
    COMA            reduce using rule 104 (r_pop_ff -> .)
    PUNTOCOMA       reduce using rule 104 (r_pop_ff -> .)
    CORCHETE_C      reduce using rule 104 (r_pop_ff -> .)
    HASTA           reduce using rule 104 (r_pop_ff -> .)
    HACER           reduce using rule 104 (r_pop_ff -> .)

    r_pop_ff                       shift and go to state 213

state 197

    (71) expresion -> t_expresion r_generate_quad_or OR r_push_oper . expresion
    (70) expresion -> . t_expresion r_generate_quad_or
    (71) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (73) t_expresion -> . g_expresion r_generate_quad_and
    (74) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (76) g_expresion -> . m_expresion r_generate_quad_logicos
    (77) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    t_expresion                    shift and go to state 106
    expresion                      shift and go to state 214
    g_expresion                    shift and go to state 107
    m_expresion                    shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 198

    (74) t_expresion -> g_expresion r_generate_quad_and AND r_push_oper . t_expresion
    (73) t_expresion -> . g_expresion r_generate_quad_and
    (74) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (76) g_expresion -> . m_expresion r_generate_quad_logicos
    (77) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    g_expresion                    shift and go to state 107
    t_expresion                    shift and go to state 215
    m_expresion                    shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 199

    (77) g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .

    AND             reduce using rule 77 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    OR              reduce using rule 77 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    PARENT_C        reduce using rule 77 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    COMA            reduce using rule 77 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    PUNTOCOMA       reduce using rule 77 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    CORCHETE_C      reduce using rule 77 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    HASTA           reduce using rule 77 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)
    HACER           reduce using rule 77 (g_expresion -> m_expresion op_logicos m_expresion r_generate_quad_logicos .)


state 200

    (86) m_expresion -> termino r_generate_quad_masmen MAS r_push_oper . m_expresion
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    termino                        shift and go to state 109
    m_expresion                    shift and go to state 216
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 201

    (87) m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper . m_expresion
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    termino                        shift and go to state 109
    m_expresion                    shift and go to state 217
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 202

    (89) termino -> factor r_generate_quad_muldiv POR r_push_oper . termino
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    factor                         shift and go to state 110
    termino                        shift and go to state 218
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 203

    (90) termino -> factor r_generate_quad_muldiv DIV r_push_oper . termino
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    factor                         shift and go to state 110
    termino                        shift and go to state 219
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 204

    (62) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos . PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos . expresiones PARENT_C r_generate_gosub_dos
    (66) expresiones -> . expresion r_generate_parameter
    (67) expresiones -> . expresion r_generate_parameter COMA r_act_param_count expresiones
    (70) expresion -> . t_expresion r_generate_quad_or
    (71) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (73) t_expresion -> . g_expresion r_generate_quad_and
    (74) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (76) g_expresion -> . m_expresion r_generate_quad_logicos
    (77) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_C        shift and go to state 220
    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    expresiones                    shift and go to state 221
    expresion                      shift and go to state 168
    t_expresion                    shift and go to state 106
    g_expresion                    shift and go to state 107
    m_expresion                    shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 205

    (26) variables -> variable r_generate_quad_leer COMA variables .

    PARENT_C        reduce using rule 26 (variables -> variable r_generate_quad_leer COMA variables .)


state 206

    (115) escr -> escritura_dos r_generate_quad_escr COMA escr .

    PARENT_C        reduce using rule 115 (escr -> escritura_dos r_generate_quad_escr COMA escr .)


state 207

    (122) else -> SINO LLAVE_A estatutos_dos LLAVE_C .

    ID              reduce using rule 122 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 122 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 122 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 122 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 122 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 122 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 122 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 122 (else -> SINO LLAVE_A estatutos_dos LLAVE_C .)


state 208

    (126) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for . HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for

    HASTA           shift and go to state 222


state 209

    (123) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type . HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while

    HAZ             shift and go to state 223


state 210

    (118) if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES . LLAVE_A estatutos_dos LLAVE_C

    LLAVE_A         shift and go to state 224


state 211

    (58) llamada -> ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub .

    PUNTOCOMA       reduce using rule 58 (llamada -> ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub .)


state 212

    (67) expresiones -> expresion r_generate_parameter COMA . r_act_param_count expresiones
    (69) r_act_param_count -> .

    PARENT_A        reduce using rule 69 (r_act_param_count -> .)
    CTE_I           reduce using rule 69 (r_act_param_count -> .)
    CTE_F           reduce using rule 69 (r_act_param_count -> .)
    CTE_CH          reduce using rule 69 (r_act_param_count -> .)
    ID              reduce using rule 69 (r_act_param_count -> .)

    r_act_param_count              shift and go to state 225

state 213

    (94) factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .

    POR             reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    DIV             reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MAS             reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MENOS           reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MAYORQUE        reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MENORQUE        reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MAYORIGUAL      reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    MENORIGUAL      reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    IGUALIGUAL      reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    DIFERENTE       reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    AND             reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    OR              reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    PARENT_C        reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    COMA            reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    PUNTOCOMA       reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    CORCHETE_C      reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    HASTA           reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)
    HACER           reduce using rule 94 (factor -> PARENT_A r_push_ff expresion PARENT_C r_pop_ff .)


state 214

    (71) expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .

    PARENT_C        reduce using rule 71 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    COMA            reduce using rule 71 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    PUNTOCOMA       reduce using rule 71 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    CORCHETE_C      reduce using rule 71 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    HASTA           reduce using rule 71 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)
    HACER           reduce using rule 71 (expresion -> t_expresion r_generate_quad_or OR r_push_oper expresion .)


state 215

    (74) t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .

    OR              reduce using rule 74 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    PARENT_C        reduce using rule 74 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    COMA            reduce using rule 74 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    PUNTOCOMA       reduce using rule 74 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    CORCHETE_C      reduce using rule 74 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    HASTA           reduce using rule 74 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)
    HACER           reduce using rule 74 (t_expresion -> g_expresion r_generate_quad_and AND r_push_oper t_expresion .)


state 216

    (86) m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .

    MAYORQUE        reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    MENORQUE        reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    MAYORIGUAL      reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    MENORIGUAL      reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    IGUALIGUAL      reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    DIFERENTE       reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    AND             reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    OR              reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    PARENT_C        reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    COMA            reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    PUNTOCOMA       reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    CORCHETE_C      reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    HASTA           reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)
    HACER           reduce using rule 86 (m_expresion -> termino r_generate_quad_masmen MAS r_push_oper m_expresion .)


state 217

    (87) m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .

    MAYORQUE        reduce using rule 87 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    MENORQUE        reduce using rule 87 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    MAYORIGUAL      reduce using rule 87 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    MENORIGUAL      reduce using rule 87 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    IGUALIGUAL      reduce using rule 87 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    DIFERENTE       reduce using rule 87 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    AND             reduce using rule 87 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    OR              reduce using rule 87 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    PARENT_C        reduce using rule 87 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    COMA            reduce using rule 87 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    PUNTOCOMA       reduce using rule 87 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    CORCHETE_C      reduce using rule 87 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    HASTA           reduce using rule 87 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)
    HACER           reduce using rule 87 (m_expresion -> termino r_generate_quad_masmen MENOS r_push_oper m_expresion .)


state 218

    (89) termino -> factor r_generate_quad_muldiv POR r_push_oper termino .

    MAS             reduce using rule 89 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MENOS           reduce using rule 89 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MAYORQUE        reduce using rule 89 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MENORQUE        reduce using rule 89 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MAYORIGUAL      reduce using rule 89 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    MENORIGUAL      reduce using rule 89 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    IGUALIGUAL      reduce using rule 89 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    DIFERENTE       reduce using rule 89 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    AND             reduce using rule 89 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    OR              reduce using rule 89 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    PARENT_C        reduce using rule 89 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    COMA            reduce using rule 89 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    PUNTOCOMA       reduce using rule 89 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    CORCHETE_C      reduce using rule 89 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    HASTA           reduce using rule 89 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)
    HACER           reduce using rule 89 (termino -> factor r_generate_quad_muldiv POR r_push_oper termino .)


state 219

    (90) termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .

    MAS             reduce using rule 90 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MENOS           reduce using rule 90 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MAYORQUE        reduce using rule 90 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MENORQUE        reduce using rule 90 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MAYORIGUAL      reduce using rule 90 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    MENORIGUAL      reduce using rule 90 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    IGUALIGUAL      reduce using rule 90 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    DIFERENTE       reduce using rule 90 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    AND             reduce using rule 90 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    OR              reduce using rule 90 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    PARENT_C        reduce using rule 90 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    COMA            reduce using rule 90 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    PUNTOCOMA       reduce using rule 90 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    CORCHETE_C      reduce using rule 90 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    HASTA           reduce using rule 90 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)
    HACER           reduce using rule 90 (termino -> factor r_generate_quad_muldiv DIV r_push_oper termino .)


state 220

    (62) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C . r_generate_gosub_dos
    (65) r_generate_gosub_dos -> .

    POR             reduce using rule 65 (r_generate_gosub_dos -> .)
    DIV             reduce using rule 65 (r_generate_gosub_dos -> .)
    MAS             reduce using rule 65 (r_generate_gosub_dos -> .)
    MENOS           reduce using rule 65 (r_generate_gosub_dos -> .)
    MAYORQUE        reduce using rule 65 (r_generate_gosub_dos -> .)
    MENORQUE        reduce using rule 65 (r_generate_gosub_dos -> .)
    MAYORIGUAL      reduce using rule 65 (r_generate_gosub_dos -> .)
    MENORIGUAL      reduce using rule 65 (r_generate_gosub_dos -> .)
    IGUALIGUAL      reduce using rule 65 (r_generate_gosub_dos -> .)
    DIFERENTE       reduce using rule 65 (r_generate_gosub_dos -> .)
    AND             reduce using rule 65 (r_generate_gosub_dos -> .)
    OR              reduce using rule 65 (r_generate_gosub_dos -> .)
    PARENT_C        reduce using rule 65 (r_generate_gosub_dos -> .)
    COMA            reduce using rule 65 (r_generate_gosub_dos -> .)
    PUNTOCOMA       reduce using rule 65 (r_generate_gosub_dos -> .)
    CORCHETE_C      reduce using rule 65 (r_generate_gosub_dos -> .)
    HASTA           reduce using rule 65 (r_generate_gosub_dos -> .)
    HACER           reduce using rule 65 (r_generate_gosub_dos -> .)

    r_generate_gosub_dos           shift and go to state 226

state 221

    (63) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones . PARENT_C r_generate_gosub_dos

    PARENT_C        shift and go to state 227


state 222

    (126) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA . r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (125) r_save_jump -> .

    PARENT_A        reduce using rule 125 (r_save_jump -> .)
    CTE_I           reduce using rule 125 (r_save_jump -> .)
    CTE_F           reduce using rule 125 (r_save_jump -> .)
    CTE_CH          reduce using rule 125 (r_save_jump -> .)
    ID              reduce using rule 125 (r_save_jump -> .)

    r_save_jump                    shift and go to state 228

state 223

    (123) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ . LLAVE_A estatutos_dos LLAVE_C r_goto_while

    LLAVE_A         shift and go to state 229


state 224

    (118) if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A . estatutos_dos LLAVE_C
    (53) estatutos_dos -> . estatutos
    (54) estatutos_dos -> . estatutos estatutos_dos
    (45) estatutos -> . asignacion PUNTOCOMA
    (46) estatutos -> . llamada PUNTOCOMA
    (47) estatutos -> . retorno PUNTOCOMA
    (48) estatutos -> . lectura PUNTOCOMA
    (49) estatutos -> . escritura PUNTOCOMA
    (50) estatutos -> . decision
    (51) estatutos -> . ciclo_for
    (52) estatutos -> . ciclo_while
    (55) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (57) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (58) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (105) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (107) lectura -> . LEER PARENT_A variables PARENT_C
    (109) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (116) decision -> . if r_end_if
    (117) decision -> . if r_goto_ifelse else r_end_if
    (126) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (123) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (118) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 60
    REGRESA         shift and go to state 61
    LEER            shift and go to state 62
    ESCRIBIR        shift and go to state 63
    DESDE           shift and go to state 65
    MIENTRAS        shift and go to state 66
    SI              shift and go to state 67

    estatutos_dos                  shift and go to state 230
    estatutos                      shift and go to state 50
    asignacion                     shift and go to state 51
    llamada                        shift and go to state 52
    retorno                        shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    ciclo_for                      shift and go to state 57
    ciclo_while                    shift and go to state 58
    variable                       shift and go to state 59
    if                             shift and go to state 64

state 225

    (67) expresiones -> expresion r_generate_parameter COMA r_act_param_count . expresiones
    (66) expresiones -> . expresion r_generate_parameter
    (67) expresiones -> . expresion r_generate_parameter COMA r_act_param_count expresiones
    (70) expresion -> . t_expresion r_generate_quad_or
    (71) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (73) t_expresion -> . g_expresion r_generate_quad_and
    (74) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (76) g_expresion -> . m_expresion r_generate_quad_logicos
    (77) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    expresion                      shift and go to state 168
    expresiones                    shift and go to state 231
    t_expresion                    shift and go to state 106
    g_expresion                    shift and go to state 107
    m_expresion                    shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 226

    (62) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .

    POR             reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    DIV             reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MAS             reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MENOS           reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MAYORQUE        reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MENORQUE        reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MAYORIGUAL      reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    MENORIGUAL      reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    IGUALIGUAL      reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    DIFERENTE       reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    AND             reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    OR              reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    PARENT_C        reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    COMA            reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    PUNTOCOMA       reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    CORCHETE_C      reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    HASTA           reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)
    HACER           reduce using rule 62 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos .)


state 227

    (63) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C . r_generate_gosub_dos
    (65) r_generate_gosub_dos -> .

    POR             reduce using rule 65 (r_generate_gosub_dos -> .)
    DIV             reduce using rule 65 (r_generate_gosub_dos -> .)
    MAS             reduce using rule 65 (r_generate_gosub_dos -> .)
    MENOS           reduce using rule 65 (r_generate_gosub_dos -> .)
    MAYORQUE        reduce using rule 65 (r_generate_gosub_dos -> .)
    MENORQUE        reduce using rule 65 (r_generate_gosub_dos -> .)
    MAYORIGUAL      reduce using rule 65 (r_generate_gosub_dos -> .)
    MENORIGUAL      reduce using rule 65 (r_generate_gosub_dos -> .)
    IGUALIGUAL      reduce using rule 65 (r_generate_gosub_dos -> .)
    DIFERENTE       reduce using rule 65 (r_generate_gosub_dos -> .)
    AND             reduce using rule 65 (r_generate_gosub_dos -> .)
    OR              reduce using rule 65 (r_generate_gosub_dos -> .)
    PARENT_C        reduce using rule 65 (r_generate_gosub_dos -> .)
    COMA            reduce using rule 65 (r_generate_gosub_dos -> .)
    PUNTOCOMA       reduce using rule 65 (r_generate_gosub_dos -> .)
    CORCHETE_C      reduce using rule 65 (r_generate_gosub_dos -> .)
    HASTA           reduce using rule 65 (r_generate_gosub_dos -> .)
    HACER           reduce using rule 65 (r_generate_gosub_dos -> .)

    r_generate_gosub_dos           shift and go to state 232

state 228

    (126) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump . r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (127) r_expresion_for -> .

    PARENT_A        reduce using rule 127 (r_expresion_for -> .)
    CTE_I           reduce using rule 127 (r_expresion_for -> .)
    CTE_F           reduce using rule 127 (r_expresion_for -> .)
    CTE_CH          reduce using rule 127 (r_expresion_for -> .)
    ID              reduce using rule 127 (r_expresion_for -> .)

    r_expresion_for                shift and go to state 233

state 229

    (123) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A . estatutos_dos LLAVE_C r_goto_while
    (53) estatutos_dos -> . estatutos
    (54) estatutos_dos -> . estatutos estatutos_dos
    (45) estatutos -> . asignacion PUNTOCOMA
    (46) estatutos -> . llamada PUNTOCOMA
    (47) estatutos -> . retorno PUNTOCOMA
    (48) estatutos -> . lectura PUNTOCOMA
    (49) estatutos -> . escritura PUNTOCOMA
    (50) estatutos -> . decision
    (51) estatutos -> . ciclo_for
    (52) estatutos -> . ciclo_while
    (55) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (57) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (58) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (105) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (107) lectura -> . LEER PARENT_A variables PARENT_C
    (109) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (116) decision -> . if r_end_if
    (117) decision -> . if r_goto_ifelse else r_end_if
    (126) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (123) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (118) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 60
    REGRESA         shift and go to state 61
    LEER            shift and go to state 62
    ESCRIBIR        shift and go to state 63
    DESDE           shift and go to state 65
    MIENTRAS        shift and go to state 66
    SI              shift and go to state 67

    estatutos_dos                  shift and go to state 234
    estatutos                      shift and go to state 50
    asignacion                     shift and go to state 51
    llamada                        shift and go to state 52
    retorno                        shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    ciclo_for                      shift and go to state 57
    ciclo_while                    shift and go to state 58
    variable                       shift and go to state 59
    if                             shift and go to state 64

state 230

    (118) if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos . LLAVE_C

    LLAVE_C         shift and go to state 235


state 231

    (67) expresiones -> expresion r_generate_parameter COMA r_act_param_count expresiones .

    PARENT_C        reduce using rule 67 (expresiones -> expresion r_generate_parameter COMA r_act_param_count expresiones .)


state 232

    (63) llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .

    POR             reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    DIV             reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MAS             reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MENOS           reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MAYORQUE        reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MENORQUE        reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MAYORIGUAL      reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    MENORIGUAL      reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    IGUALIGUAL      reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    DIFERENTE       reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    AND             reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    OR              reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    PARENT_C        reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    COMA            reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    PUNTOCOMA       reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    CORCHETE_C      reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    HASTA           reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)
    HACER           reduce using rule 63 (llamada_exp -> ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos .)


state 233

    (126) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for . expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (70) expresion -> . t_expresion r_generate_quad_or
    (71) expresion -> . t_expresion r_generate_quad_or OR r_push_oper expresion
    (73) t_expresion -> . g_expresion r_generate_quad_and
    (74) t_expresion -> . g_expresion r_generate_quad_and AND r_push_oper t_expresion
    (76) g_expresion -> . m_expresion r_generate_quad_logicos
    (77) g_expresion -> . m_expresion op_logicos m_expresion r_generate_quad_logicos
    (85) m_expresion -> . termino r_generate_quad_masmen
    (86) m_expresion -> . termino r_generate_quad_masmen MAS r_push_oper m_expresion
    (87) m_expresion -> . termino r_generate_quad_masmen MENOS r_push_oper m_expresion
    (88) termino -> . factor r_generate_quad_muldiv
    (89) termino -> . factor r_generate_quad_muldiv POR r_push_oper termino
    (90) termino -> . factor r_generate_quad_muldiv DIV r_push_oper termino
    (94) factor -> . PARENT_A r_push_ff expresion PARENT_C r_pop_ff
    (95) factor -> . CTE_I r_push_cte_i
    (96) factor -> . CTE_F r_push_cte_f
    (97) factor -> . CTE_CH r_push_cte_c
    (98) factor -> . variable
    (99) factor -> . llamada_exp
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (62) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos PARENT_C r_generate_gosub_dos
    (63) llamada_exp -> . ID r_check_func_exists PARENT_A r_generate_ERA_dos expresiones PARENT_C r_generate_gosub_dos

    PARENT_A        shift and go to state 104
    CTE_I           shift and go to state 111
    CTE_F           shift and go to state 112
    CTE_CH          shift and go to state 113
    ID              shift and go to state 116

    expresion                      shift and go to state 236
    t_expresion                    shift and go to state 106
    g_expresion                    shift and go to state 107
    m_expresion                    shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    variable                       shift and go to state 114
    llamada_exp                    shift and go to state 115

state 234

    (123) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos . LLAVE_C r_goto_while

    LLAVE_C         shift and go to state 237


state 235

    (118) if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .

    SINO            reduce using rule 118 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    ID              reduce using rule 118 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    REGRESA         reduce using rule 118 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    LEER            reduce using rule 118 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    ESCRIBIR        reduce using rule 118 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    DESDE           reduce using rule 118 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    MIENTRAS        reduce using rule 118 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    SI              reduce using rule 118 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)
    LLAVE_C         reduce using rule 118 (if -> SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C .)


state 236

    (126) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion . r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (130) r_check_exp_for -> .

    HACER           reduce using rule 130 (r_check_exp_for -> .)

    r_check_exp_for                shift and go to state 238

state 237

    (123) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C . r_goto_while
    (124) r_goto_while -> .

    ID              reduce using rule 124 (r_goto_while -> .)
    REGRESA         reduce using rule 124 (r_goto_while -> .)
    LEER            reduce using rule 124 (r_goto_while -> .)
    ESCRIBIR        reduce using rule 124 (r_goto_while -> .)
    DESDE           reduce using rule 124 (r_goto_while -> .)
    MIENTRAS        reduce using rule 124 (r_goto_while -> .)
    SI              reduce using rule 124 (r_goto_while -> .)
    LLAVE_C         reduce using rule 124 (r_goto_while -> .)

    r_goto_while                   shift and go to state 239

state 238

    (126) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for . HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for

    HACER           shift and go to state 240


state 239

    (123) ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .

    ID              reduce using rule 123 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    REGRESA         reduce using rule 123 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    LEER            reduce using rule 123 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    ESCRIBIR        reduce using rule 123 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    DESDE           reduce using rule 123 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    MIENTRAS        reduce using rule 123 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    SI              reduce using rule 123 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)
    LLAVE_C         reduce using rule 123 (ciclo_while -> MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while .)


state 240

    (126) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER . LLAVE_A estatutos_dos LLAVE_C r_goto_for

    LLAVE_A         shift and go to state 241


state 241

    (126) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A . estatutos_dos LLAVE_C r_goto_for
    (53) estatutos_dos -> . estatutos
    (54) estatutos_dos -> . estatutos estatutos_dos
    (45) estatutos -> . asignacion PUNTOCOMA
    (46) estatutos -> . llamada PUNTOCOMA
    (47) estatutos -> . retorno PUNTOCOMA
    (48) estatutos -> . lectura PUNTOCOMA
    (49) estatutos -> . escritura PUNTOCOMA
    (50) estatutos -> . decision
    (51) estatutos -> . ciclo_for
    (52) estatutos -> . ciclo_while
    (55) asignacion -> . variable IGUAL r_push_oper expresion r_generate_quad_asig
    (57) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA PARENT_C r_generate_gosub
    (58) llamada -> . ID r_check_func_exists PARENT_A r_generate_ERA expresiones PARENT_C r_generate_gosub
    (105) retorno -> . REGRESA PARENT_A expresion PARENT_C r_generate_quad_retorno
    (107) lectura -> . LEER PARENT_A variables PARENT_C
    (109) escritura -> . ESCRIBIR PARENT_A escr PARENT_C
    (116) decision -> . if r_end_if
    (117) decision -> . if r_goto_ifelse else r_end_if
    (126) ciclo_for -> . DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for
    (123) ciclo_while -> . MIENTRAS r_save_jump PARENT_A expresion PARENT_C r_check_exp_type HAZ LLAVE_A estatutos_dos LLAVE_C r_goto_while
    (22) variable -> . ID r_push_id
    (23) variable -> . ID r_push_id dim
    (118) if -> . SI PARENT_A expresion PARENT_C r_check_exp_type ENTONCES LLAVE_A estatutos_dos LLAVE_C

    ID              shift and go to state 60
    REGRESA         shift and go to state 61
    LEER            shift and go to state 62
    ESCRIBIR        shift and go to state 63
    DESDE           shift and go to state 65
    MIENTRAS        shift and go to state 66
    SI              shift and go to state 67

    estatutos_dos                  shift and go to state 242
    estatutos                      shift and go to state 50
    asignacion                     shift and go to state 51
    llamada                        shift and go to state 52
    retorno                        shift and go to state 53
    lectura                        shift and go to state 54
    escritura                      shift and go to state 55
    decision                       shift and go to state 56
    ciclo_for                      shift and go to state 57
    ciclo_while                    shift and go to state 58
    variable                       shift and go to state 59
    if                             shift and go to state 64

state 242

    (126) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos . LLAVE_C r_goto_for

    LLAVE_C         shift and go to state 243


state 243

    (126) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C . r_goto_for
    (131) r_goto_for -> .

    ID              reduce using rule 131 (r_goto_for -> .)
    REGRESA         reduce using rule 131 (r_goto_for -> .)
    LEER            reduce using rule 131 (r_goto_for -> .)
    ESCRIBIR        reduce using rule 131 (r_goto_for -> .)
    DESDE           reduce using rule 131 (r_goto_for -> .)
    MIENTRAS        reduce using rule 131 (r_goto_for -> .)
    SI              reduce using rule 131 (r_goto_for -> .)
    LLAVE_C         reduce using rule 131 (r_goto_for -> .)

    r_goto_for                     shift and go to state 244

state 244

    (126) ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .

    ID              reduce using rule 126 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    REGRESA         reduce using rule 126 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    LEER            reduce using rule 126 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    ESCRIBIR        reduce using rule 126 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    DESDE           reduce using rule 126 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    MIENTRAS        reduce using rule 126 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    SI              reduce using rule 126 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)
    LLAVE_C         reduce using rule 126 (ciclo_for -> DESDE ID r_save_var_for IGUAL expresion r_generate_quad_asig_for HASTA r_save_jump r_expresion_for expresion r_check_exp_for HACER LLAVE_A estatutos_dos LLAVE_C r_goto_for .)

